public class ShimmedSize {
public int width;
public int height;
}
public class ShimmedApplet {
public ShimmedSize size() { return null; }
public ShimmedImage createImage(int x, int y) { return null; }
public void showStatus(String s) {}
public void repaint() {}
public ShimmedGraphics getGraphics() { return null; }
public void requestFocus() {}
public int getWidth() { return 0; }
public int getHeight() { return 0; }
public ShimmedDocumentBase getDocumentBase() { return null; }
public ShimmedAppletContext getAppletContext() { return null; }
public ShimmedURL getCodeBase() { return null; }
public ShimmedAudioClip getAudioClip(ShimmedURL u, String s) { return null; }
public ShimmedImage getImage(ShimmedURL u, String s) { return null; }
}
public class ShimmedColor {
public static ShimmedColor yellow = null;
public static ShimmedColor black = null;
public static ShimmedColor red = null;
public static ShimmedColor gray = null;
public static ShimmedColor white = null;
public static ShimmedColor blue = null;
public static ShimmedColor green = null;
public static ShimmedColor pink = null;
public static ShimmedColor cyan = null;
public static ShimmedColor lightGray = null;
public static ShimmedColor darkGray = null;
public static ShimmedColor orange = null;
public ShimmedColor(int r, int g, int b) {}
}
public class ShimmedGraphics {
public ShimmedFont getFont() { return null; }
public void setFont(ShimmedFont f) {}
public void setColor(ShimmedColor c) {}
public void fillRect(int x, int y, int w, int h) {}
public ShimmedFontMetrics getFontMetrics() { return null; }
public void drawString(String s, int x, int y) {}
public void drawImage(ShimmedImage i, int x, int y, Object o) {}
public void drawOval(int x, int y, int w, int h) {}
public void fillOval(int x, int y, int w, int h) {}
public void fillArc(int x, int y, int w, int h, int s, int e) {}
public void drawLine(int x, int y, int w, int h) {}
public void drawRect(int x, int y, int w, int h) {}
public void fillPolygon(int[] xs, int[] ys, int n) {}
public void fillPolygon(ShimmedPolygon p) {}
public void drawArc(int x, int y, int w, int h, int s, int e) {}
}
public class ShimmedImage {
public ShimmedGraphics getGraphics() { return null; }
public int getHeight(ShimmedApplet a) { return 0; }
}
public class ShimmedEvent {
public int id;
public int x;
public int y;
public int key;
public ShimmedButton target;
public static final int KEY_ACTION = 0;
public static final int LEFT = 1;
public static final int RIGHT = 2;
public static final int UP = 3;
public static final int DOWN = 4;
public static final int KEY_ACTION_RELEASE = 5;
}
public class ShimmedFont {
public String getName() { return null; }
public ShimmedFont(String name, int w, int h) {}
}
public class ShimmedFontMetrics {
public int getHeight() { return 0; }
public int stringWidth(String s) { return 0; }
public int getAscent() { return 0; }
}
public class ShimmedThread {
public static void sleep(long ms) {}
public static void sleep(long ms, boolean b) {}
public ShimmedThread(ShimmedRunnable r) {}
public void start() {}
public void stop() {}
}
public interface ShimmedRunnable {}
public class ShimmedAppletContext {
public void showDocument(ShimmedURL u) {}
public void showDocument(ShimmedURL u, String s) {}
}
public class ShimmedDocumentBase {
public String getHost() { return null; }
}
public class ShimmedURL {
public ShimmedURL(String s) {}
public ShimmedInputStream openStream() { return null; }
}
public class ShimmedPrintStream {
public Object print(Object s) { return null; }
public Object println() { return null; }
public Object println(Object s) { return null; }
}
public class ShimmedSystem {
public static ShimmedPrintStream out = null;
public static long currentTimeMillis() { return 0L; }
}
public class ShimmedBufferedImage extends ShimmedImage {
public ShimmedBufferedImage(int x, int y, int z) {}
public ShimmedBufferedImage getSubimage(int a, int b, int c, int d) { return null; }
}
public class ShimmedVector {
public ShimmedVector(int n) {}
public void removeAllElements() {}
public Object get(int i) { return null; }
public int size() { return 0; }
public void add(int[] x) {}
}
public class ShimmedElement {
public void add(ShimmedElement e) {}
}
public class ShimmedFrame extends ShimmedElement {
public void setTitle(String s) {}
public void pack() {}
public void show() {}
public void dispose() {}
public void setLayout(ShimmedGridLayout g) {}
}
public class ShimmedTextField extends ShimmedElement {
public ShimmedTextField(int s) {}
public String getText() { return null; }
}
public class ShimmedButton extends ShimmedElement {
public ShimmedButton(String s) {}
}
public class ShimmedPolygon {
public ShimmedPolygon(int[] xs, int[] ys, int n) {}
}
public class ShimmedInputStream {
public void close() {}
}
public class ShimmedBufferedReader {
public ShimmedBufferedReader(ShimmedInputStreamReader i) {}
public String readLine() { return null; }
public void close() {}
}
public class ShimmedInputStreamReader {
public ShimmedInputStreamReader(ShimmedInputStream is) {}
}
public class ShimmedPanel extends ShimmedElement {
}
public class ShimmedLabel extends ShimmedElement {
public ShimmedLabel(String s) {}
}
public class ShimmedGridLayout {
public ShimmedGridLayout(int x, int y) {}
}
public class ShimmedLong {
public static long parseLong(String s) { return 0L; }
}
public class ShimmedChars {
/** Replacement for .toCharArray() which returns chars, when actually we (probably/hopefully) want ints. */
public static char[] charCodeArray(String s) { return null; }
}
public class ShimmedImageObserver {
}
public class ShimmedRandom {
public int nextInt(int m) { return 0; }
}
public class ShimmedAudioClip {
public void play() {}
}
public class ShimmedStringBuffer {
public ShimmedStringBuffer() {}
public ShimmedStringBuffer(Object i) {}
public ShimmedStringBuffer append(Object s) { return null; }
}
public class EndOfShimDeclarations{}
public abstract class Class_rn_c_1 {
// $FF: renamed from: void int
protected int field_rn_c_void_13;
// $FF: renamed from: else int
protected int field_rn_c_else_14;
// $FF: renamed from: do int
protected int field_rn_c_do_15;
// $FF: renamed from: if int
protected int field_rn_c_if_16;
// $FF: renamed from: g int
protected int field_rn_c_g_17;
// $FF: renamed from: e int
protected int field_rn_c_e_18;
// $FF: renamed from: byte int
protected int field_rn_c_byte_19;
// $FF: renamed from: try int
protected int field_rn_c_try_20;
// $FF: renamed from: int int
protected int field_rn_c_int_21;
// $FF: renamed from: for int
protected int field_rn_c_for_22;
// $FF: renamed from: d int
protected int field_rn_c_d_23;
// $FF: renamed from: b int
protected int field_rn_c_b_24;
// $FF: renamed from: new boolean
protected boolean field_rn_c_new_25;
// $FF: renamed from: f boolean
protected boolean field_rn_c_f_26;
// $FF: renamed from: c int
private int field_rn_c_c_27;
// $FF: renamed from: case Slime1P
private Slime1P field_rn_c_case_28;
// $FF: renamed from: goto int
public static final int field_rn_c_goto_29 = 0;
// $FF: renamed from: char int
public static final int field_rn_c_char_30 = 1;
// $FF: renamed from: long int
public static final int field_rn_c_long_31 = 2;
// $FF: renamed from: a int
public static final int field_rn_c_a_32 = 3;
// $FF: renamed from: a (Slime1P, int) void
public final void method_rn_c_a_9(Slime1P var1, int var2) {
this.field_rn_c_case_28 = var1;
this.field_rn_c_c_27 = var2;
}
// $FF: renamed from: a (int[], boolean, boolean) void
public final void method_rn_c_a_10(int[] var1, boolean var2, boolean var3) {
this.field_rn_c_void_13 = this.field_rn_c_c_27 == 2?var1[0]:1000 - var1[0];
this.field_rn_c_else_14 = var1[1];
this.field_rn_c_do_15 = this.field_rn_c_c_27 == 2?var1[2]:-var1[2];
this.field_rn_c_if_16 = var1[3];
this.field_rn_c_g_17 = this.field_rn_c_c_27 == 2?var1[4]:1000 - var1[8];
this.field_rn_c_e_18 = this.field_rn_c_c_27 == 2?var1[5]:var1[9];
this.field_rn_c_byte_19 = this.field_rn_c_c_27 == 2?var1[6]:-var1[10];
this.field_rn_c_try_20 = this.field_rn_c_c_27 == 2?var1[7]:var1[11];
this.field_rn_c_int_21 = this.field_rn_c_c_27 == 2?var1[8]:1000 - var1[4];
this.field_rn_c_for_22 = this.field_rn_c_c_27 == 2?var1[9]:var1[5];
this.field_rn_c_d_23 = this.field_rn_c_c_27 == 2?var1[10]:-var1[6];
this.field_rn_c_b_24 = this.field_rn_c_c_27 == 2?var1[11]:var1[7];
this.field_rn_c_new_25 = this.field_rn_c_c_27 == 2?var2:var3;
this.field_rn_c_f_26 = this.field_rn_c_c_27 == 2?var3:var2;
}
// $FF: renamed from: a () void
public abstract void method_rn_c_a_11();
// $FF: renamed from: a (int) void
protected final void method_rn_c_a_12(int var1) {
if(this.field_rn_c_c_27 == 1) {
switch(var1) {
case 0:
this.field_rn_c_case_28.method_rn_Slime1P_b_82();
break;
case 1:
this.field_rn_c_case_28.method_rn_Slime1P_c_81();
break;
case 2:
this.field_rn_c_case_28.method_rn_Slime1P_char_84();
break;
case 3:
this.field_rn_c_case_28.method_rn_Slime1P_try_83();
}
} else if(this.field_rn_c_c_27 == 2) {
switch(var1) {
case 0:
this.field_rn_c_case_28.method_rn_Slime1P_e_85();
break;
case 1:
this.field_rn_c_case_28.method_rn_Slime1P_j_86();
break;
case 2:
this.field_rn_c_case_28.method_rn_Slime1P_long_88();
break;
case 3:
this.field_rn_c_case_28.method_rn_Slime1P_else_87();
}
}
}
}
// $FF: renamed from: g
class Class_rn_g_7 {
// $FF: renamed from: do boolean
boolean field_rn_g_do_73 = true;
// $FF: renamed from: a boolean
boolean field_rn_g_a_74 = true;
// $FF: renamed from: if char[]
private static char[] field_rn_g_if_75 = new char[]{'r', 'o', '>', '<', 'o', 'r', 'z'};
// $FF: renamed from: a () boolean
public static boolean method_rn_g_a_65() {
return true;
}
// $FF: renamed from: a (Slime1P, long) boolean
public static boolean method_rn_g_a_66(Slime1P var0, long var1) {
long var3 = 1000000L;
try {
ShimmedInputStream var5 = (new ShimmedURL(var0.getCodeBase() + "highscores.php?min")).openStream();
ShimmedBufferedReader var6 = new ShimmedBufferedReader(new ShimmedInputStreamReader(var5));
var3 = ShimmedLong.parseLong(var6.readLine());
var6.close();
var5.close();
} catch (Exception var7) {
ShimmedSystem.out.println("Couldn\'t connect to server!\n" + var7);
return false;
}
return var1 > var3;
}
// $FF: renamed from: a (Slime1P, long, long, java.lang.String) void
public static void method_rn_g_a_67(Slime1P var0, long var1, long var3, String var5) {
try {
ShimmedInputStream var6 = (new ShimmedURL(var0.getCodeBase() + "submitscore.php?scr=" + var1 + "&lev=" + var3 + "&nam=" + var5 + "&danno=" + new String(field_rn_g_if_75) + "&chk=" + method_rn_g_a_70(method_rn_g_a_68(method_rn_g_if_69(var5)), var3, var1))).openStream();
var6.close();
} catch (Exception var7) {
ShimmedSystem.out.println("Couldn\'t send high score!\n" + var7);
}
}
// $FF: renamed from: a (java.lang.String) java.lang.String
private static String method_rn_g_a_68(String var0) {
String var1 = var0.trim();
if(var1.length() > 20) {
var1 = var1.substring(0, 20);
}
return var1;
}
// $FF: renamed from: if (java.lang.String) java.lang.String
private static String method_rn_g_if_69(String var0) {
int var1;
String var2;
for(var2 = new String(var0); (var1 = var2.indexOf(" ")) >= 0; var2 = var2.substring(0, var1) + var2.substring(var1 + 1)) {
;
}
return var2;
}
// $FF: renamed from: a (java.lang.String, long, long) long
private static long method_rn_g_a_70(String var0, long var1, long var3) {
long var5 = var3;
for(int var7 = 0; (long)var7 < method_rn_g_a_71(var1) + 1L; ++var7) {
var5 = method_rn_g_if_72(var0, var1, var5);
}
return var5;
}
// $FF: renamed from: a (long) long
private static long method_rn_g_a_71(long var0) {
return var0 * var0;
}
// $FF: renamed from: if (java.lang.String, long, long) long
private static long method_rn_g_if_72(String var0, long var1, long var3) {
char[] var5 = var0.toCharArray();
long var6 = 0L;
for(int var8 = 0; var8 < var5.length; ++var8) {
var6 += ((long)var5[var8] + var1) * var3 % (var1 + 6L + (long)var8);
}
return var6;
}
}
// $FF: renamed from: h
class Class_rn_h_8 {
public Class_rn_h_8(int[][] var1, int var2, int var3, int var4, int var5, ShimmedApplet var6) {
int[][] var7 = new int[var1.length][var1[0].length];
for(int var8 = 0; var8 < var1.length; ++var8) {
for(int var9 = 0; var9 < var1[0].length; ++var9) {
var7[var8][var9] = var1[var8][var9];
}
}
try {
ShimmedURL var17 = var6.getCodeBase();
String var10 = "" + var2 + ":" + var3 + ":" + var4 + ":" + var5;
ShimmedURL var11 = new ShimmedURL(var17 + "newreplay.php?data=" + var10);
ShimmedBufferedReader var12 = new ShimmedBufferedReader(new ShimmedInputStreamReader(var11.openStream()));
String var13 = var12.readLine().trim();
var11 = new ShimmedURL(var17 + "savefield.php?id=" + var13 + "&field=initial&data=" + var10);
var11.openStream();
for(int var14 = 0; var14 < 6; ++var14) {
var10 = "id=" + var13 + "&field=";
switch(var14) {
case 0:
var10 = var10 + "p1x";
break;
case 1:
var10 = var10 + "p1y";
break;
case 2:
var10 = var10 + "p2x";
break;
case 3:
var10 = var10 + "p2y";
break;
case 4:
var10 = var10 + "ballX";
break;
case 5:
var10 = var10 + "ballY";
}
var10 = var10 + "&data=" + var7[0][var14];
for(int var15 = 1; var15 < var1.length; ++var15) {
var10 = var10 + ":" + (var7[var15][var14] - var7[var15 - 1][var14]);
}
var11 = new ShimmedURL(var17 + "savefield.php?" + var10);
var11.openStream();
}
} catch (Exception var16) {
;
}
}
}
// $FF: renamed from: f
public class Class_rn_f_2 extends Class_rn_c_1 {
// $FF: renamed from: m double
private final double field_rn_f_m_37 = 0.85D;
// $FF: renamed from: n int
private int field_rn_f_n_38 = -1;
// $FF: renamed from: long (int) int
private int method_rn_f_long_33(int var1) {
return var1 * var1;
}
// $FF: renamed from: goto (int) int
private int method_rn_f_goto_34(int var1) {
int var2 = 0;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= var1) {
return var2;
}
++var2;
}
}
// $FF: renamed from: else (int) int
private int method_rn_f_else_35(int var1) {
int var2 = this.method_rn_f_goto_34(var1);
int var3 = this.field_rn_c_void_13;
int var4 = this.field_rn_c_do_15;
for(int var5 = 0; var5 < var2; ++var5) {
var3 += var4;
if(var3 < 0) {
var3 = 0;
var4 = -var4;
} else if(var3 > 1000) {
var3 = 1000;
var4 = -var4;
}
}
return var3;
}
// $FF: renamed from: a () void
public void method_rn_c_a_11() {
if(this.field_rn_c_void_13 < 500 && this.field_rn_f_n_38 != -1) {
this.field_rn_f_n_38 = -1;
}
int var1 = this.method_rn_f_else_35(125);
int var2 = this.method_rn_f_goto_34(125);
int var3;
if(this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 < 575) {
var3 = 0;
} else {
var3 = 25 + (int)(10.0D * Math.random());
}
if((this.field_rn_c_do_15 != 0 || this.field_rn_c_void_13 != 800) && this.field_rn_f_n_38 == -1) {
if(var1 < 500) {
if(Math.abs(this.field_rn_c_int_21 - 666) < 20) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_int_21 > 666) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_int_21 < 666) {
this.method_rn_c_a_12(1);
}
} else {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
if(this.field_rn_c_for_22 != 0 || this.field_rn_c_f_26 && Math.random() < 0.3D) {
return;
}
if((this.field_rn_c_int_21 >= 900 && this.field_rn_c_void_13 > 830 || this.field_rn_c_int_21 <= 580 && this.field_rn_c_void_13 < 530) && Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 100) {
this.method_rn_f_try_36();
} else if(this.method_rn_f_long_33(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_f_long_33(this.field_rn_c_else_14 - this.field_rn_c_for_22) < this.method_rn_f_long_33(170) && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_f_try_36();
} else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 < 20 && this.field_rn_c_void_13 - this.field_rn_c_int_21 < 30 && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_f_try_36();
} else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 150 && this.field_rn_c_else_14 > 50 && this.field_rn_c_else_14 < 400 && Math.random() < 0.666D) {
this.method_rn_f_try_36();
}
}
if(this.field_rn_c_for_22 == 0 && this.field_rn_f_n_38 == -1) {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
this.method_rn_c_a_12(3);
} else if(var1 + var3 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(var1 + var3 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
} else if(this.field_rn_f_n_38 == -1) {
if(this.field_rn_c_int_21 < 575) {
return;
}
if(this.field_rn_c_int_21 > 900) {
this.method_rn_c_a_12(1);
return;
}
if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) < var3) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_void_13 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_void_13 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
}
}
} else {
if(this.field_rn_f_n_38 == -1) {
if(this.field_rn_c_g_17 > 250) {
this.field_rn_f_n_38 = 0;
} else {
this.field_rn_f_n_38 = 1;
}
if(Math.random() < 0.35D) {
this.field_rn_f_n_38 = (int)(2.0D * Math.random());
}
}
switch(this.field_rn_f_n_38) {
case 0:
if(this.field_rn_c_else_14 < 250 && this.field_rn_c_if_16 < -3) {
this.method_rn_c_a_12(1);
this.method_rn_c_a_12(2);
}
break;
case 1:
if(this.field_rn_c_else_14 < 250 && this.field_rn_c_if_16 < 0) {
this.method_rn_c_a_12(0);
this.method_rn_c_a_12(2);
}
}
}
}
// $FF: renamed from: try () void
private void method_rn_f_try_36() {
if(Math.random() < 0.85D) {
this.method_rn_c_a_12(2);
}
}
}
// $FF: renamed from: e
public class Class_rn_e_3 extends Class_rn_c_1 {
// $FF: renamed from: k double
private final double field_rn_e_k_43 = 0.4D;
// $FF: renamed from: l int
private int field_rn_e_l_44 = -1;
// $FF: renamed from: char (int) int
private int method_rn_e_char_39(int var1) {
return var1 * var1;
}
// $FF: renamed from: case (int) int
private int method_rn_e_case_40(int var1) {
int var2 = 0;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= var1) {
return var2;
}
++var2;
}
}
// $FF: renamed from: byte (int) int
private int method_rn_e_byte_41(int var1) {
int var2 = this.method_rn_e_case_40(var1);
int var3 = this.field_rn_c_void_13;
int var4 = this.field_rn_c_do_15;
for(int var5 = 0; var5 < var2; ++var5) {
var3 += var4;
if(var3 < 0) {
var3 = 0;
var4 = -var4;
} else if(var3 > 1000) {
var3 = 1000;
var4 = -var4;
}
}
return var3;
}
// $FF: renamed from: a () void
public void method_rn_c_a_11() {
if(this.field_rn_c_void_13 < 500 && this.field_rn_e_l_44 != -1) {
this.field_rn_e_l_44 = -1;
}
int var1 = this.method_rn_e_byte_41(125);
int var2 = this.method_rn_e_case_40(125);
int var3;
if(this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 < 575) {
var3 = 0;
} else {
var3 = 23 + (int)(15.0D * Math.random());
}
if((this.field_rn_c_do_15 != 0 || this.field_rn_c_void_13 != 800) && this.field_rn_e_l_44 == -1) {
if(var1 < 500) {
if(Math.abs(this.field_rn_c_int_21 - 800) < 20) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_int_21 > 800) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_int_21 < 800) {
this.method_rn_c_a_12(1);
}
} else {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
if(this.field_rn_c_for_22 != 0 || this.field_rn_c_f_26 && Math.random() < 0.3D) {
return;
}
if((this.field_rn_c_int_21 >= 900 && this.field_rn_c_void_13 > 830 || this.field_rn_c_int_21 <= 580 && this.field_rn_c_void_13 < 530) && Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 100) {
this.method_rn_e_new_42();
} else if(this.method_rn_e_char_39(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_e_char_39(this.field_rn_c_else_14 - this.field_rn_c_for_22) < this.method_rn_e_char_39(170) && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_e_new_42();
} else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 < 20 && this.field_rn_c_void_13 - this.field_rn_c_int_21 < 30 && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_e_new_42();
} else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 150 && this.field_rn_c_else_14 > 50 && this.field_rn_c_else_14 < 400 && Math.random() < 0.5D) {
this.method_rn_e_new_42();
}
}
if(this.field_rn_c_for_22 == 0 && this.field_rn_e_l_44 == -1) {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
this.method_rn_c_a_12(3);
} else if(var1 + var3 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(var1 + var3 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
} else if(this.field_rn_e_l_44 == -1) {
if(this.field_rn_c_int_21 < 575) {
return;
}
if(this.field_rn_c_int_21 > 900) {
this.method_rn_c_a_12(1);
return;
}
if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) < var3) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_void_13 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_void_13 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
}
}
} else {
if(this.field_rn_e_l_44 == -1) {
if(this.field_rn_c_g_17 > 250) {
this.field_rn_e_l_44 = 0;
} else if(this.field_rn_c_g_17 < 200) {
this.field_rn_e_l_44 = 1;
} else if(this.field_rn_c_g_17 < 250) {
this.field_rn_e_l_44 = 2;
}
if(Math.random() < 0.35D) {
this.field_rn_e_l_44 = (int)(3.0D * Math.random());
}
}
switch(this.field_rn_e_l_44) {
case 0:
if(this.field_rn_c_else_14 < 300 && this.field_rn_c_if_16 < -3) {
this.method_rn_c_a_12(1);
this.method_rn_c_a_12(2);
}
break;
case 1:
if(this.field_rn_c_else_14 < 300 && this.field_rn_c_if_16 < 0) {
this.method_rn_c_a_12(0);
this.method_rn_c_a_12(2);
}
break;
case 2:
short var4 = 860;
if(this.field_rn_c_if_16 > 12 && this.field_rn_c_int_21 < var4) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_int_21 >= var4) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_if_16 == -3 && this.field_rn_c_int_21 != 800) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_if_16 < -12 && this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 >= var4 - 15) {
this.method_rn_c_a_12(0);
}
}
}
}
// $FF: renamed from: new () void
private void method_rn_e_new_42() {
if(Math.random() < 0.4D) {
this.method_rn_c_a_12(2);
}
}
}
// $FF: renamed from: b
public class Class_rn_b_5 extends Class_rn_c_1 {
// $FF: renamed from: h int
private int field_rn_b_h_57 = -1;
// $FF: renamed from: a () void
public void method_rn_c_a_11() {
if(this.field_rn_b_h_57 == -1 && (this.field_rn_c_void_13 != 800 || this.field_rn_c_do_15 != 0)) {
int var2 = this.method_rn_b_if_53(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);
byte var1;
if(var2 < 600) {
var1 = 0;
} else if(var2 < 700) {
var1 = 10;
} else {
var1 = 20;
}
if(var2 < 450) {
if(Math.abs(this.field_rn_c_int_21 - 666) < 10) {
this.method_rn_c_a_12(3);
} else if(666 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(666 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
} else if(Math.abs(this.field_rn_c_int_21 - var2 - var1) < 10) {
this.method_rn_c_a_12(3);
} else if(var2 + var1 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(var2 + var1 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
if((this.field_rn_c_int_21 <= 900 || Math.random() >= 0.4D) && var2 >= 620 && (this.field_rn_c_else_14 >= 130 || this.field_rn_c_if_16 >= 0) && (!this.field_rn_c_f_26 || Math.random() >= 0.6D)) {
if((this.field_rn_c_int_21 >= 900 && this.field_rn_c_void_13 > 830 || this.field_rn_c_int_21 <= 580 && this.field_rn_c_void_13 < 530) && Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 100) {
this.method_rn_c_a_12(2);
} else if(this.method_rn_b_for_51(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_b_for_51(this.field_rn_c_else_14 - this.field_rn_c_for_22) < this.method_rn_b_for_51(185) && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_c_a_12(2);
} else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 < 20 && this.field_rn_c_void_13 - this.field_rn_c_int_21 < 30 && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_c_a_12(2);
} else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < (this.field_rn_c_f_26?135:150) && this.field_rn_c_else_14 > 50 && this.field_rn_c_else_14 < 250) {
this.method_rn_c_a_12(2);
}
}
} else {
this.method_rn_b_do_55();
}
}
// $FF: renamed from: for (int) int
private int method_rn_b_for_51(int var1) {
return var1 * var1;
}
// $FF: renamed from: do (int) int
private int method_rn_b_do_52(int var1) {
int var2 = 0;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= 0) {
return var2;
}
++var2;
}
}
// $FF: renamed from: if (int) int
private int method_rn_b_if_53(int var1) {
int var2 = this.field_rn_c_void_13;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= var1) {
return var2;
}
var2 += this.field_rn_c_do_15;
if(var2 <= 0) {
var2 = 0;
this.field_rn_c_do_15 = -this.field_rn_c_do_15;
} else if(var2 >= 1000) {
var2 = 1000;
this.field_rn_c_do_15 = -this.field_rn_c_do_15;
}
}
}
// $FF: renamed from: for () int
private int method_rn_b_for_54() {
int var1 = this.field_rn_c_int_21 - this.field_rn_c_void_13;
int var2 = this.field_rn_c_for_22 - this.field_rn_c_else_14;
return (int)Math.sqrt((double)(var1 * var1 + var2 * var2));
}
// $FF: renamed from: do () void
private void method_rn_b_do_55() {
if(this.field_rn_b_h_57 == -1) {
if(Math.random() < 0.3D) {
if(this.field_rn_c_g_17 < 300 && !this.field_rn_c_f_26) {
this.field_rn_b_h_57 = 0;
} else if(this.field_rn_c_g_17 > 200) {
this.field_rn_b_h_57 = 1;
} else {
this.field_rn_b_h_57 = 2;
}
} else {
this.field_rn_b_h_57 = 2;
}
if(this.field_rn_b_h_57 == -1 || Math.random() < 0.3D) {
this.field_rn_b_h_57 = (int)(Math.random() * 3.0D);
}
if(this.field_rn_c_f_26 && this.field_rn_b_h_57 == 0) {
this.field_rn_b_h_57 = 1 + (int)(Math.random() * 2.0D);
}
}
int var1;
switch(this.field_rn_b_h_57) {
case 0:
case 1:
int var2 = this.field_rn_b_h_57 == 0?860:840;
if(this.field_rn_c_if_16 > 12 && this.field_rn_c_int_21 < var2) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_int_21 >= var2) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_if_16 == -3 && this.field_rn_c_int_21 != 800) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_if_16 < -12 && this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 >= var2 - 15 && this.field_rn_b_h_57 == 0) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_void_13 < 700) {
this.field_rn_b_h_57 = -1;
}
break;
case 2:
short var3 = 770;
if(this.field_rn_c_if_16 > 12 && this.field_rn_c_int_21 > var3) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var3) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_if_16 == -2 && this.field_rn_c_int_21 != 800) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_for_22 != 0 && this.field_rn_c_void_13 > 800) {
this.field_rn_b_h_57 = 3 + this.method_rn_b_if_56();
}
break;
case 3:
var1 = !this.field_rn_c_f_26?585:555;
if(this.field_rn_c_int_21 > var1) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var1) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 <= (!this.field_rn_c_f_26?730:740)) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_void_13 < 540) {
this.field_rn_b_h_57 = -1;
}
break;
case 4:
var1 = !this.field_rn_c_f_26?585:555;
if(this.field_rn_c_int_21 > var1) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var1) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 <= (!this.field_rn_c_f_26?730:700)) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_void_13 < 600) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_void_13 < 580) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 < 540) {
this.field_rn_b_h_57 = -1;
}
}
}
// $FF: renamed from: if () int
private int method_rn_b_if_56() {
boolean var1 = false;
if(this.field_rn_c_g_17 < 200) {
var1 = Math.random() < 0.7D;
} else if(this.field_rn_c_g_17 > 300) {
var1 = Math.random() < 0.3D;
} else {
var1 = Math.random() < 0.5D;
}
return var1?1:0;
}
}
// $FF: renamed from: a
public class Class_rn_a_6 extends Class_rn_c_1 {
// $FF: renamed from: o int
private int field_rn_a_o_64 = -1;
// $FF: renamed from: a () void
public void method_rn_c_a_11() {
if(this.field_rn_a_o_64 == -1 && (this.field_rn_c_void_13 != 800 || this.field_rn_c_do_15 != 0)) {
int var2 = this.method_rn_a_void_60(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);
byte var1;
if(var2 < 600) {
var1 = 0;
} else if(var2 < 700) {
var1 = 10;
} else {
var1 = 20;
}
if(var2 < 450) {
if(Math.abs(this.field_rn_c_int_21 - 666) < 10) {
this.method_rn_c_a_12(3);
} else if(666 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(666 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
} else if(Math.abs(this.field_rn_c_int_21 - var2 - var1) < 10) {
this.method_rn_c_a_12(3);
} else if(var2 + var1 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(var2 + var1 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
if((this.field_rn_c_int_21 <= 900 || Math.random() >= 0.4D) && var2 >= 720 && (this.field_rn_c_else_14 >= 150 || this.field_rn_c_if_16 <= -3)) {
if((this.field_rn_c_int_21 >= 900 && this.field_rn_c_void_13 > 830 || this.field_rn_c_int_21 <= 580 && this.field_rn_c_void_13 < 530) && Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 100) {
this.method_rn_c_a_12(2);
} else if(this.method_rn_a_c_58(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_a_c_58(this.field_rn_c_else_14 - this.field_rn_c_for_22) < this.method_rn_a_c_58(185) && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_c_a_12(2);
} else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 < 20 && this.field_rn_c_void_13 - this.field_rn_c_int_21 < 30 && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_c_a_12(2);
} else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 150 && this.field_rn_c_else_14 > 50 && this.field_rn_c_else_14 < 250) {
this.method_rn_c_a_12(2);
}
}
} else {
this.method_rn_a_case_62();
}
}
// $FF: renamed from: c (int) int
private int method_rn_a_c_58(int var1) {
return var1 * var1;
}
// $FF: renamed from: b (int) int
private int method_rn_a_b_59(int var1) {
int var2 = 0;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= 0) {
return var2;
}
++var2;
}
}
// $FF: renamed from: void (int) int
private int method_rn_a_void_60(int var1) {
int var2 = this.field_rn_c_void_13;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= var1) {
return var2;
}
var2 += this.field_rn_c_do_15;
if(var2 <= 0) {
var2 = 0;
this.field_rn_c_do_15 = -this.field_rn_c_do_15;
} else if(var2 >= 1000) {
var2 = 1000;
this.field_rn_c_do_15 = -this.field_rn_c_do_15;
}
}
}
// $FF: renamed from: char () int
private int method_rn_a_char_61() {
int var1 = this.field_rn_c_int_21 - this.field_rn_c_void_13;
int var2 = this.field_rn_c_for_22 - this.field_rn_c_else_14;
return (int)Math.sqrt((double)(var1 * var1 + var2 * var2));
}
// $FF: renamed from: case () void
private void method_rn_a_case_62() {
if(this.field_rn_a_o_64 == -1) {
if(Math.random() < 0.3D) {
if(this.field_rn_c_g_17 < 300) {
this.field_rn_a_o_64 = 0;
} else if(this.field_rn_c_g_17 > 200) {
this.field_rn_a_o_64 = 1;
} else {
this.field_rn_a_o_64 = 2;
}
} else {
this.field_rn_a_o_64 = 2;
}
if(this.field_rn_a_o_64 == -1 || Math.random() < 0.3D) {
this.field_rn_a_o_64 = (int)(Math.random() * 3.0D);
}
}
short var1;
switch(this.field_rn_a_o_64) {
case 0:
case 1:
int var2 = this.field_rn_a_o_64 == 0?860:840;
if(this.field_rn_c_if_16 > 12 && this.field_rn_c_int_21 < var2) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_int_21 >= var2) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_if_16 == -3 && this.field_rn_c_int_21 != 800) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_if_16 < -12 && this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 >= var2 - 15 && this.field_rn_a_o_64 == 0) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_void_13 < 700) {
this.field_rn_a_o_64 = -1;
}
break;
case 2:
var1 = 770;
if(this.field_rn_c_if_16 > 12 && this.field_rn_c_int_21 > var1) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var1) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_if_16 == -2 && this.field_rn_c_int_21 != 800) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_for_22 != 0 && this.field_rn_c_void_13 > 800) {
this.field_rn_a_o_64 = 3 + this.method_rn_a_byte_63();
}
break;
case 3:
var1 = 585;
if(this.field_rn_c_int_21 > var1) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var1) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 <= 730) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_void_13 < 600) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_void_13 < 580) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 < 540) {
this.field_rn_a_o_64 = -1;
}
case 4:
var1 = 585;
if(this.field_rn_c_int_21 > var1) {
this.method_rn_c_a_12(0);
}
if(this.field_rn_c_int_21 <= var1) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 <= 755) {
this.method_rn_c_a_12(2);
}
if(this.field_rn_c_void_13 < 600) {
this.method_rn_c_a_12(1);
}
if(this.field_rn_c_void_13 < 580) {
this.method_rn_c_a_12(3);
}
if(this.field_rn_c_void_13 < 540) {
this.field_rn_a_o_64 = -1;
}
}
}
// $FF: renamed from: byte () int
private int method_rn_a_byte_63() {
int var1 = 0;
if(this.field_rn_c_g_17 < 200) {
var1 = 1;
} else if(this.field_rn_c_g_17 > 300) {
var1 = 0;
}
if(Math.random() < 0.35D) {
var1 = 1 - var1;
}
return var1;
}
}
// $FF: renamed from: d
public class Class_rn_d_4 extends Class_rn_c_1 {
// $FF: renamed from: i double
private final double field_rn_d_i_49 = 0.85D;
// $FF: renamed from: j int
private int field_rn_d_j_50 = -1;
// $FF: renamed from: try (int) int
private int method_rn_d_try_45(int var1) {
return var1 * var1;
}
// $FF: renamed from: new (int) int
private int method_rn_d_new_46(int var1) {
int var2 = 0;
int var3 = this.field_rn_c_else_14;
int var4 = this.field_rn_c_if_16;
while(true) {
--var4;
if((var3 += var4) <= var1) {
return var2;
}
++var2;
}
}
// $FF: renamed from: int (int) int
private int method_rn_d_int_47(int var1) {
int var2 = this.method_rn_d_new_46(var1);
int var3 = this.field_rn_c_void_13;
int var4 = this.field_rn_c_do_15;
for(int var5 = 0; var5 < var2; ++var5) {
var3 += var4;
if(var3 < 0) {
var3 = 0;
var4 = -var4;
} else if(var3 > 1000) {
var3 = 1000;
var4 = -var4;
}
}
return var3;
}
// $FF: renamed from: a () void
public void method_rn_c_a_11() {
if(this.field_rn_c_void_13 < 500 && this.field_rn_d_j_50 != -1) {
this.field_rn_d_j_50 = -1;
}
int var1 = this.method_rn_d_int_47(125);
int var2 = this.method_rn_d_new_46(125);
int var3;
if(this.field_rn_c_for_22 != 0 && this.field_rn_c_int_21 < 575) {
var3 = 0;
} else {
var3 = 25 + (int)(10.0D * Math.random());
}
if((this.field_rn_c_do_15 != 0 || this.field_rn_c_void_13 != 800) && this.field_rn_d_j_50 == -1) {
if(var1 < 500) {
if(Math.abs(this.field_rn_c_int_21 - 666) < 20) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_int_21 > 666) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_int_21 < 666) {
this.method_rn_c_a_12(1);
}
} else {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
if(this.field_rn_c_for_22 != 0 || this.field_rn_c_f_26 && Math.random() < 0.3D) {
return;
}
if((this.field_rn_c_int_21 >= 900 && this.field_rn_c_void_13 > 830 || this.field_rn_c_int_21 <= 580 && this.field_rn_c_void_13 < 530) && Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 100) {
this.method_rn_d_int_48();
} else if(this.method_rn_d_try_45(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_d_try_45(this.field_rn_c_else_14 - this.field_rn_c_for_22) < this.method_rn_d_try_45(170) && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_d_int_48();
} else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 < 20 && this.field_rn_c_void_13 - this.field_rn_c_int_21 < 30 && this.field_rn_c_void_13 != this.field_rn_c_int_21) {
this.method_rn_d_int_48();
} else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) < 150 && this.field_rn_c_else_14 > 50 && this.field_rn_c_else_14 < 400 && Math.random() < 0.666D) {
this.method_rn_d_int_48();
}
}
if(this.field_rn_c_for_22 == 0 && this.field_rn_d_j_50 == -1) {
if(Math.abs(this.field_rn_c_int_21 - var1) < var3) {
this.method_rn_c_a_12(3);
} else if(var1 + var3 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(var1 + var3 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
} else if(this.field_rn_d_j_50 == -1) {
if(this.field_rn_c_int_21 < 575) {
return;
}
if(this.field_rn_c_int_21 > 900) {
this.method_rn_c_a_12(1);
return;
}
if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) < var3) {
this.method_rn_c_a_12(3);
} else if(this.field_rn_c_void_13 < this.field_rn_c_int_21) {
this.method_rn_c_a_12(0);
} else if(this.field_rn_c_void_13 > this.field_rn_c_int_21) {
this.method_rn_c_a_12(1);
}
}
}
} else {
if(this.field_rn_d_j_50 == -1) {
if(this.field_rn_c_g_17 > 250) {
this.field_rn_d_j_50 = 0;
} else {
this.field_rn_d_j_50 = 1;
}
if(Math.random() < 0.35D) {
this.field_rn_d_j_50 = (int)(2.0D * Math.random());
}
}
switch(this.field_rn_d_j_50) {
case 0:
if(this.field_rn_c_else_14 < 300 && this.field_rn_c_if_16 < -3) {
this.method_rn_c_a_12(1);
this.method_rn_c_a_12(2);
}
break;
case 1:
if(this.field_rn_c_else_14 < 300 && this.field_rn_c_if_16 < 0) {
this.method_rn_c_a_12(0);
this.method_rn_c_a_12(2);
}
}
}
}
// $FF: renamed from: int () void
private void method_rn_d_int_48() {
if(Math.random() < 0.85D) {
this.method_rn_c_a_12(2);
}
}
}
class ServerCheck extends ShimmedFrame {
// $FF: renamed from: ok java.awt.ShimmedButton
ShimmedButton field_rn_ServerCheck_ok_76;
public ServerCheck() {
this.setLayout(new ShimmedGridLayout(4, 1));
ShimmedPanel var1 = new ShimmedPanel();
var1.add(new ShimmedLabel("Couldn\'t connect to server!"));
this.add(var1);
ShimmedPanel var2 = new ShimmedPanel();
var2.add(new ShimmedLabel("Your high scores may not be saved on the server."));
this.add(var2);
ShimmedPanel var3 = new ShimmedPanel();
var3.add(new ShimmedLabel("To fix this, close all browser windows and try again."));
this.setTitle("Error!");
this.field_rn_ServerCheck_ok_76 = new ShimmedButton("Damn. Oh well if that\'s how it is...");
this.add(var3);
this.add(this.field_rn_ServerCheck_ok_76);
this.pack();
this.show();
}
public boolean action(ShimmedEvent var1, Object var2) {
if(var1.target == this.field_rn_ServerCheck_ok_76) {
this.dispose();
}
return false;
}
}
class NameFrame extends ShimmedFrame {
private Slime1P app;
private ShimmedTextField name;
// $FF: renamed from: ok java.awt.ShimmedButton
private ShimmedButton field_rn_NameFrame_ok_110;
private long score;
private int level;
public NameFrame() {
}
public NameFrame(Slime1P var1, long var2, int var4) {
this.app = var1;
this.score = var2;
this.level = var4;
this.setLayout(new ShimmedGridLayout(2, 1));
ShimmedPanel var5 = new ShimmedPanel();
var5.add(new ShimmedLabel("Your score: " + var2));
this.add(var5);
ShimmedPanel var6 = new ShimmedPanel();
var6.add(new ShimmedLabel("Enter your name:"));
this.name = new ShimmedTextField(20);
var6.add(this.name);
this.field_rn_NameFrame_ok_110 = new ShimmedButton("OK");
var6.add(this.field_rn_NameFrame_ok_110);
this.add(var6);
this.setTitle("New High Score!");
this.pack();
this.show();
}
public boolean action(ShimmedEvent var1, Object var2) {
if(var1.target == this.field_rn_NameFrame_ok_110) {
Class_rn_g_7.method_rn_g_a_67(this.app, this.score, (long)this.level, this.name.getText());
this.dispose();
}
return false;
}
}
public class Slime1P extends ShimmedApplet implements ShimmedRunnable {
private int nWidth;
private int nHeight;
private int p1X;
private int p1Y;
private int p2X;
private int p2Y;
private int p1Diam;
private int p2Diam;
private int p1Col;
private int p2Col;
private int p1OldX;
private int p1OldY;
private int p2OldX;
private int p2OldY;
private int p1XV;
private int p1YV;
private int p2XV;
private int p2YV;
private int ballX;
private int ballY;
private int ballVX;
private int ballVY;
private int ballOldX;
private int ballOldY;
private ShimmedGraphics screen;
private String promptMsg;
private boolean mousePressed;
private boolean fInPlay;
private boolean fP1Fire;
private boolean fP2Fire;
private boolean superFlash;
private boolean fP1Touched;
private boolean fP2Touched;
private int fP1Touches;
private int fP2Touches;
private int fP1TouchesTot;
private int fP2TouchesTot;
private int fP1Clangers;
private int fP2Clangers;
private int fP1Aces;
private int fP2Aces;
private int fP1Winners;
private int fP2Winners;
private int fP1PointsWon;
private int fP2PointsWon;
private boolean fP1HitStill;
private boolean fP2HitStill;
private long fP1Frames;
private long fP2Frames;
private int fP1Super;
private int fP2Super;
private boolean fServerMoved;
private boolean hitNetSinceTouched;
private ShimmedThread gameThread;
private boolean fEndGame;
private long startTime;
private long gameTime;
private long crossedNetTime;
private long pausedTime;
private boolean paused;
private int scoringRun;
private int oldScoringRun;
private String[] slimeColText;
private ShimmedColor[] slimeColours;
private String[] loserText1;
private String[] loserText2;
private ShimmedColor SKY_COL;
private ShimmedColor COURT_COL;
private ShimmedColor BALL_COL;
private int p1Run;
private int p2Run;
private int p1Jump;
private int p2Jump;
private final int pointsToWin = 6;
private int aiMode = 0;
// $FF: renamed from: ai c
private Class_rn_c_1 field_rn_Slime1P_ai_109;
private int gameScore;
private boolean gameOver;
private int[] boundsP1select = new int[0];
private int[] boundsP2select = new int[0];
private boolean oneplayer = false;
private int ballRad = 25;
private ShimmedBufferedImage buffer;
private ShimmedVector redrawRegions;
private boolean buffered = false;
private int[][] replayData;
private int replayIndex;
private int replayStart;
private boolean replaying;
public void init() {
String var1 = this.getDocumentBase().getHost();
if(!var1.equals("oneslime.net")) {
try {
this.getAppletContext().showDocument(new ShimmedURL("http://oneslime.net/"), "_self");
} catch (Exception var5) {
;
}
throw new RuntimeException("Couldn\'t initialise - server data missing.");
} else {
ShimmedSystem.out.println("One Slime: http://oneslime.net/");
new Class_rn_e_3();
new Class_rn_d_4();
new Class_rn_b_5();
new Class_rn_a_6();
this.nWidth = this.size().width;
this.nHeight = this.size().height;
this.fInPlay = this.fEndGame = false;
this.promptMsg = "Click the mouse to play!";
this.buffer = new ShimmedBufferedImage(this.nWidth, this.nHeight, 1);
this.fInPlay = this.fEndGame = false;
this.promptMsg = "Click the mouse to play!";
this.screen = this.buffer.getGraphics();
this.screen.setFont(new ShimmedFont(this.screen.getFont().getName(), 1, 15));
this.slimeColText = new String[]{"Inferior Human Controlled Slime ", "The Pathetic White Slime ", "Angry Red Slimons ", "The Slime Master ", "Psycho Slime ", "The Big Blue Boss "};
this.slimeColours = new ShimmedColor[]{ShimmedColor.yellow, ShimmedColor.white, ShimmedColor.red, ShimmedColor.black, ShimmedColor.blue, ShimmedColor.blue};
this.loserText1 = new String[]{"You are a loser!", this.slimeColText[2] + "gives you the gong!", this.slimeColText[3] + "says \"You are seriously inept.\"", this.slimeColText[4] + "laughs at the pathetic slow opposition.", this.slimeColText[5] + "devours you!"};
this.loserText2 = new String[]{"Better luck next time.", "So who has the red face bombing out on level 2, huh?", "Congrats on reaching level 3.", "Congrats on reaching level 4!", "Yum."};
this.p1Col = 0;
this.p1Run = 8;
this.p1Jump = 31;
this.p1Diam = 100;
this.gameScore = 0;
this.gameOver = true;
this.paused = false;
this.method_rn_Slime1P_new_77();
this.method_rn_Slime1P_for_80();
this.redrawRegions = new ShimmedVector(0);
this.method_rn_Slime1P_void_78();
this.repaint();
this.replayData = new int[1000][8];
try {
ShimmedSystem.out.println(this.getCodeBase());
ShimmedInputStream var3 = (new ShimmedURL(this.getCodeBase() + "bler")).openStream();
ShimmedBufferedReader var4 = new ShimmedBufferedReader(new ShimmedInputStreamReader(var3));
if(!var4.readLine().equals("bler")) {
var4.close();
var3.close();
throw new Exception("Couldn\'t connect to server!");
}
var4.close();
var3.close();
} catch (Exception var6) {
ShimmedSystem.out.println("Error...\n" + var6);
new ServerCheck();
}
}
}
// $FF: renamed from: new () void
private void method_rn_Slime1P_new_77() {
this.fP1PointsWon = this.fP2PointsWon = 0;
this.p1Diam = this.p2Diam = 100;
this.p2Run = 8;
this.p2Jump = 31;
this.fP2Fire = false;
if(!this.oneplayer) {
this.aiMode = 0;
}
switch(this.aiMode) {
case 0:
this.field_rn_Slime1P_ai_109 = new Class_rn_d_4();
this.fP2Fire = false;
this.SKY_COL = ShimmedColor.blue;
this.COURT_COL = ShimmedColor.gray;
this.BALL_COL = ShimmedColor.yellow;
break;
case 1:
this.field_rn_Slime1P_ai_109 = new Class_rn_e_3();
this.fP2Fire = false;
this.SKY_COL = new ShimmedColor(30, 80, 0);
this.COURT_COL = ShimmedColor.darkGray;
this.BALL_COL = new ShimmedColor(128, 128, 255);
break;
case 2:
this.field_rn_Slime1P_ai_109 = new Class_rn_b_5();
this.fP2Fire = false;
this.SKY_COL = new ShimmedColor(98, 57, 57);
this.COURT_COL = new ShimmedColor(0, 168, 0);
this.BALL_COL = ShimmedColor.white;
break;
case 3:
this.field_rn_Slime1P_ai_109 = new Class_rn_b_5();
this.fP2Fire = true;
this.SKY_COL = ShimmedColor.black;
this.COURT_COL = ShimmedColor.red;
this.BALL_COL = ShimmedColor.yellow;
break;
case 4:
this.field_rn_Slime1P_ai_109 = new Class_rn_a_6();
this.p2Diam = 150;
this.fP2Fire = false;
this.SKY_COL = ShimmedColor.black;
this.COURT_COL = ShimmedColor.red;
this.BALL_COL = ShimmedColor.yellow;
}
if(this.oneplayer) {
this.p2Col = this.aiMode + 1;
} else {
this.p2Col = this.p1Col;
}
this.field_rn_Slime1P_ai_109.method_rn_c_a_9(this, 2);
}
public void update(ShimmedGraphics var1) {
if(this.buffered) {
var1.drawImage(this.buffer, 0, 0, (ShimmedImageObserver)null);
} else {
this.method_rn_Slime1P_void_78();
}
this.redrawRegions = new ShimmedVector(0);
}
public void paint(ShimmedGraphics var1) {
this.update(var1);
}
// $FF: renamed from: void () void
private void method_rn_Slime1P_void_78() {
ShimmedGraphics var1;
if(this.buffered) {
var1 = this.buffer.getGraphics();
} else {
var1 = this.getGraphics();
}
this.nWidth = this.size().width;
this.nHeight = this.size().height;
var1.setColor(this.SKY_COL);
var1.fillRect(0, 0, this.nWidth, 4 * this.nHeight / 5);
var1.setColor(this.COURT_COL);
var1.fillRect(0, 4 * this.nHeight / 5, this.nWidth, this.nHeight / 5);
var1.setColor(ShimmedColor.white);
var1.fillRect(this.nWidth / 2 - 2, 7 * this.nHeight / 10, 4, this.nHeight / 10 + 5);
ShimmedFontMetrics var2 = var1.getFontMetrics();
String var3;
if(this.gameOver) {
this.screen.setColor(ShimmedColor.white);
ShimmedFont var4 = var1.getFont();
var1.setFont(this.screen.getFont());
var3 = "Slime Volleyball: One Slime";
var1.drawString(var3, this.nWidth / 2 - this.screen.getFontMetrics().stringWidth(var3) / 2, this.nHeight / 3 - var2.getHeight());
var1.setFont(var4);
var1.setColor(ShimmedColor.white);
var3 = "Written by Quin Pendragon and Daniel Wedge";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 2);
var3 = "http://oneslime.net/";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 7 / 2);
var1.setColor(ShimmedColor.white);
var3 = "Click here to start a one player game!";
this.boundsP1select[0] = this.nWidth / 4 - var2.stringWidth(var3) / 2 - 10;
this.boundsP1select[1] = this.nHeight / 3 + var2.getHeight() * 5;
this.boundsP1select[2] = this.boundsP1select[0] + var2.stringWidth(var3) + 20;
this.boundsP1select[3] = this.boundsP1select[1] + var2.getHeight() * 3;
var1.fillRect(this.nWidth / 4 - var2.stringWidth(var3) / 2 - 10, this.nHeight / 3 + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);
var1.setColor(this.SKY_COL);
if(this.aiMode != 0) {
var1.drawString(var3, this.nWidth / 4 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 13 / 2);
var3 = "or press C to continue...";
var1.drawString(var3, this.nWidth / 4 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 15 / 2);
} else {
var1.drawString(var3, this.nWidth / 4 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 7);
}
var1.setColor(ShimmedColor.white);
var3 = "Click here to start a two player game!";
var1.fillRect(this.nWidth * 3 / 4 - var2.stringWidth(var3) / 2 - 10, this.nHeight / 3 + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);
var1.setColor(this.SKY_COL);
var1.drawString(var3, this.nWidth * 3 / 4 - var2.stringWidth(var3) / 2, this.nHeight / 3 + var2.getHeight() * 7);
this.boundsP2select[0] = this.nWidth * 3 / 4 - var2.stringWidth(var3) / 2 - 10;
this.boundsP2select[1] = this.nHeight / 3 + var2.getHeight() * 5;
this.boundsP2select[2] = this.boundsP2select[0] + var2.stringWidth(var3) + 20;
this.boundsP2select[3] = this.boundsP2select[1] + var2.getHeight() * 3;
if(!this.replaying) {
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_byte_95();
}
} else if(!this.fInPlay) {
var1.setColor(ShimmedColor.white);
var3 = "Your score: " + this.gameScore;
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 2 - var2.getHeight());
if(this.fP1PointsWon == 6) {
var3 = "Level bonus: " + 1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon) * this.method_rn_Slime1P_case_108() + " points";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 2 + var2.getHeight());
var3 = "Time bonus: " + (this.gameTime < 300000L?300000L - this.gameTime:0L) / 1000L * (long)this.method_rn_Slime1P_case_108() + " points";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 2 + var2.getHeight() * 2);
if(this.fP2PointsWon == 0) {
var3 = "Flawless Victory: " + 1000 * this.method_rn_Slime1P_case_108() + " points";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 2 + var2.getHeight() * 3);
}
}
var1.setFont(this.screen.getFont());
var2 = this.screen.getFontMetrics();
var3 = "Level " + (this.aiMode + 1) + " clear!";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight / 3);
var3 = "Click the mouse to continue...";
var1.drawString(var3, this.nWidth / 2 - var2.stringWidth(var3) / 2, this.nHeight * 4 / 5 + var2.getHeight() + 10);
this.method_rn_Slime1P_goto_93();
} else {
this.method_rn_Slime1P_goto_93();
}
}
// $FF: renamed from: do () void
private void method_rn_Slime1P_do_79() {
if(!this.buffered) {
this.redrawRegions.removeAllElements();
} else {
for(int var1 = 0; var1 < this.redrawRegions.size(); ++var1) {
int[] var2 = (int[])((int[])this.redrawRegions.get(var1));
int var3 = var2[0];
int var4 = var2[1];
int var5 = var2[2];
int var6 = var2[3];
if(var3 < 0) {
var3 = 0;
}
if(var5 > this.nWidth) {
var5 = this.nWidth - 1;
}
if(var4 < 0) {
var4 = 0;
}
if(var6 > this.nHeight) {
var6 = this.nHeight - 1;
}
int var7 = var5 - var3;
int var8 = var6 - var4;
if(var7 > 0 && var8 > 0) {
ShimmedBufferedImage var9 = this.buffer.getSubimage(var3, var4, var7, var8);
this.getGraphics().drawImage(var9, var3, var4, (ShimmedImageObserver)null);
}
}
this.redrawRegions.removeAllElements();
}
}
// $FF: renamed from: for () void
private void method_rn_Slime1P_for_80() {
this.p1X = this.p1OldX = 200;
this.p1Y = this.p1OldY = 0;
this.p2X = this.p2OldX = 800;
this.p2Y = this.p2OldY = 0;
this.p1XV = 0;
this.p1YV = 0;
this.p2XV = 0;
this.p2YV = 0;
this.ballX = this.ballOldX = 200;
this.ballY = this.ballOldY = 400;
this.ballVX = 0;
this.ballVY = 0;
this.hitNetSinceTouched = false;
this.fServerMoved = this.fP1Touched = this.fP2Touched = false;
this.fP1Touches = this.fP2Touches = 0;
this.repaint();
this.promptMsg = "";
this.replayStart = this.replayIndex = 0;
this.replaying = false;
}
public boolean handleEvent(ShimmedEvent var1) {
switch(var1.id) {
case 401:
case 403:
switch(var1.key) {
case 32:
this.mousePressed = true;
return false;
case 65:
case 97:
this.method_rn_Slime1P_c_81();
return false;
case 66:
case 98:
this.buffered = !this.buffered;
this.method_rn_Slime1P_void_78();
return false;
case 67:
case 99:
if(this.gameOver) {
this.fEndGame = false;
this.fInPlay = true;
this.promptMsg = "";
this.gameOver = false;
this.gameScore = 0;
this.method_rn_Slime1P_for_80();
this.method_rn_Slime1P_new_77();
this.repaint();
this.gameThread = new ShimmedThread(this);
this.gameThread.start();
}
return false;
case 68:
case 100:
this.method_rn_Slime1P_b_82();
return false;
case 73:
case 105:
if(!this.oneplayer) {
this.method_rn_Slime1P_long_88();
}
return false;
case 74:
case 106:
if(!this.oneplayer) {
this.method_rn_Slime1P_e_85();
}
return false;
case 75:
case 107:
if(this.oneplayer) {
this.fP1PointsWon = this.fP2PointsWon = 0;
this.fP1Fire = false;
this.gameScore = 0;
this.method_rn_Slime1P_new_77();
this.method_rn_Slime1P_for_80();
this.method_rn_Slime1P_void_78();
this.repaint();
this.startTime = ShimmedSystem.currentTimeMillis();
this.paused = false;
}
return false;
case 76:
case 108:
if(!this.oneplayer) {
this.method_rn_Slime1P_j_86();
}
return false;
case 79:
case 111:
if(!this.paused) {
this.pausedTime = ShimmedSystem.currentTimeMillis();
try {
this.getAppletContext().showDocument(new ShimmedURL("http://oneslime.net/boss/launch.html"), "_blank");
} catch (Exception var3) {
ShimmedSystem.out.println(var3);
}
this.paused = true;
} else {
this.startTime += ShimmedSystem.currentTimeMillis() - this.pausedTime;
this.paused = false;
}
return false;
case 80:
case 112:
if(!this.paused) {
this.pausedTime = ShimmedSystem.currentTimeMillis();
this.paused = true;
} else {
this.startTime += ShimmedSystem.currentTimeMillis() - this.pausedTime;
this.paused = false;
}
return false;
case 87:
case 119:
this.method_rn_Slime1P_char_84();
return false;
case 1004:
if(this.oneplayer) {
this.method_rn_Slime1P_char_84();
} else {
this.method_rn_Slime1P_long_88();
}
return false;
case 1006:
if(this.oneplayer) {
this.method_rn_Slime1P_c_81();
} else {
this.method_rn_Slime1P_e_85();
}
return false;
case 1007:
if(this.oneplayer) {
this.method_rn_Slime1P_b_82();
} else {
this.method_rn_Slime1P_j_86();
}
return false;
default:
return false;
}
case 402:
case 404:
switch(var1.key) {
case 65:
case 97:
if(this.p1XV < 0) {
this.method_rn_Slime1P_try_83();
}
return false;
case 68:
case 100:
if(this.p1XV > 0) {
this.method_rn_Slime1P_try_83();
}
return false;
case 74:
case 106:
if(this.p2XV < 0) {
this.method_rn_Slime1P_else_87();
}
return false;
case 76:
case 108:
if(this.p2XV > 0) {
this.method_rn_Slime1P_else_87();
}
return false;
case 1006:
if(this.oneplayer && this.p1XV < 0) {
this.method_rn_Slime1P_try_83();
} else if(!this.oneplayer && this.p2XV < 0) {
this.method_rn_Slime1P_else_87();
return false;
}
return false;
case 1007:
if(this.oneplayer && this.p1XV > 0) {
this.method_rn_Slime1P_try_83();
} else if(!this.oneplayer && this.p2XV > 0) {
this.method_rn_Slime1P_else_87();
return false;
}
return false;
default:
return false;
}
case 501:
if(this.gameOver) {
if(var1.x > this.boundsP1select[0] && var1.y > this.boundsP1select[1] && var1.x < this.boundsP1select[2] && var1.y < this.boundsP1select[3]) {
this.oneplayer = true;
} else {
if(var1.x <= this.boundsP2select[0] || var1.y <= this.boundsP2select[1] || var1.x >= this.boundsP2select[2] || var1.y >= this.boundsP2select[3]) {
break;
}
this.oneplayer = false;
}
}
this.mousePressed = true;
if(!this.fInPlay) {
this.fEndGame = false;
this.fInPlay = true;
this.promptMsg = "";
if(this.gameScore != 0) {
if(this.aiMode < 5) {
++this.aiMode;
} else {
this.aiMode = 0;
}
}
if(this.gameOver) {
this.aiMode = 0;
this.gameOver = false;
this.gameScore = 0;
}
this.method_rn_Slime1P_new_77();
this.repaint();
this.ballX = 200;
this.gameThread = new ShimmedThread(this);
this.gameThread.start();
}
break;
case 503:
this.showStatus("Slime Volleyball: One Slime: http://oneslime.net/");
}
return false;
}
// $FF: renamed from: c () void
public void method_rn_Slime1P_c_81() {
this.p1XV = this.fP1Fire?-2 * this.p1Run:-this.p1Run;
if(this.p1X == 200 && this.ballX == 200 && !this.fP2Touched && !this.fServerMoved) {
this.fServerMoved = true;
}
}
// $FF: renamed from: b () void
public void method_rn_Slime1P_b_82() {
this.p1XV = this.fP1Fire?2 * this.p1Run:this.p1Run;
if(this.p1X == 200 && this.ballX == 200 && !this.fP2Touched && !this.fServerMoved) {
this.fServerMoved = true;
}
}
// $FF: renamed from: try () void
public void method_rn_Slime1P_try_83() {
this.p1XV = 0;
}
// $FF: renamed from: char () void
public void method_rn_Slime1P_char_84() {
if(this.p1Y == 0) {
this.p1YV = this.fP1Fire?45 * this.p1Jump / 31:this.p1Jump;
}
}
// $FF: renamed from: e () void
public void method_rn_Slime1P_e_85() {
this.p2XV = this.fP2Fire?-2 * this.p2Run:-this.p2Run;
if(this.p2X == 800 && this.ballX == 800 && !this.fP1Touched && !this.fServerMoved) {
this.fServerMoved = true;
}
}
// $FF: renamed from: j () void
public void method_rn_Slime1P_j_86() {
this.p2XV = this.fP2Fire?2 * this.p2Run:this.p2Run;
if(this.p2X == 800 && this.ballX == 800 && !this.fP1Touched && !this.fServerMoved) {
this.fServerMoved = true;
}
}
// $FF: renamed from: else () void
public void method_rn_Slime1P_else_87() {
this.p2XV = 0;
}
// $FF: renamed from: long () void
public void method_rn_Slime1P_long_88() {
if(this.p2Y == 0) {
this.p2YV = this.fP2Fire?45 * this.p2Jump / 31:this.p2Jump;
}
}
// $FF: renamed from: d () void
private void method_rn_Slime1P_d_89() {
if(this.oneplayer) {
int[] var1 = new int[]{this.ballX, this.ballY, this.ballVX, this.ballVY, this.p1X, this.p1Y, this.p1XV, this.p1YV, this.p2X, this.p2Y, this.p2XV, this.p2YV};
this.field_rn_Slime1P_ai_109.method_rn_c_a_10(var1, this.fP1Fire, this.fP2Fire);
this.field_rn_Slime1P_ai_109.method_rn_c_a_11();
}
}
// $FF: renamed from: i () void
private void method_rn_Slime1P_i_90() {
this.method_rn_Slime1P_d_89();
this.p1X += this.p1XV;
if(this.p1X < this.p1Diam / 2) {
this.p1X = this.p1Diam / 2;
}
if(this.p1X > 495 - this.p1Diam / 2) {
this.p1X = 495 - this.p1Diam / 2;
}
if(this.p1YV != 0) {
this.p1Y += this.p1YV -= this.fP1Fire?4:2;
if(this.p1Y < 0) {
this.p1Y = 0;
this.p1YV = 0;
}
}
this.p2X += this.p2XV;
if(this.p2X > 1000 - this.p2Diam / 2) {
this.p2X = 1000 - this.p2Diam / 2;
}
if(this.p2X < 505 + this.p2Diam / 2) {
this.p2X = 505 + this.p2Diam / 2;
}
if(this.p2YV != 0) {
this.p2Y += this.p2YV -= this.fP2Fire?4:2;
if(this.p2Y < 0) {
this.p2Y = 0;
this.p2YV = 0;
}
}
}
// $FF: renamed from: if () void
private void method_rn_Slime1P_if_91() {
int[] var1 = new int[0];
ShimmedGraphics var2;
if(this.buffered) {
var2 = this.buffer.getGraphics();
} else {
var2 = this.getGraphics();
}
byte var3 = 5;
int var4 = (this.ballRad + var3) * this.nHeight / 1000;
int var5 = this.ballOldX * this.nWidth / 1000;
int var6 = 4 * this.nHeight / 5 - this.ballOldY * this.nHeight / 1000;
var2.setColor(this.SKY_COL);
var2.fillRect(var5 - var4, var6 - var4, 2 * var4, 2 * var4);
int var7 = var5;
int var8 = var6;
this.superFlash = !this.superFlash;
int var9 = this.nWidth * this.p1Diam / 1000;
int var10 = this.nHeight * this.p1Diam / 1000;
int var11 = this.p1OldX * this.nWidth / 1000 - var9 / 2;
int var12 = 4 * this.nHeight / 5 - var10 - this.p1OldY * this.nHeight / 1000;
var2.setColor(this.SKY_COL);
var2.fillRect(var11, var12, var9, var10);
var1[0] = var11;
var1[1] = var12;
var1[2] = var11 + var9;
var1[3] = var12 + var10;
var9 = this.nWidth * this.p1Diam / 1000;
var10 = this.nHeight * this.p1Diam / 1000;
var11 = this.p1X * this.nWidth / 1000 - var9 / 2;
var12 = 4 * this.nHeight / 5 - var10 - this.p1Y * this.nHeight / 1000;
var2.setColor(this.fP1Fire && this.superFlash?ShimmedColor.white:this.slimeColours[this.p1Col]);
var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);
if(var11 < var1[0]) {
var1[0] = var11;
}
if(var12 < var1[1]) {
var1[1] = var12;
}
if(var11 + var9 > var1[2]) {
var1[2] = var11 + var9;
}
if(var12 + var10 > var1[3]) {
var1[3] = var12 + var10;
}
this.redrawRegions.add(var1);
int var15 = this.p1X + 38 * this.p1Diam / 100;
int var16 = this.p1Y - 60 * this.p1Diam / 100;
var11 = var15 * this.nWidth / 1000;
var12 = 4 * this.nHeight / 5 - var10 - var16 * this.nHeight / 1000;
int var17 = var11 - var5;
int var18 = var12 - var6;
int var19 = (int)Math.sqrt((double)(var17 * var17 + var18 * var18));
int var20 = this.nWidth / 50 * this.p1Diam / 100;
int var21 = this.nHeight / 25 * this.p1Diam / 100;
var2.setColor(ShimmedColor.white);
var2.fillOval(var11 - var20, var12 - var21, var20, var21);
var2.setColor(ShimmedColor.black);
var2.fillOval(var11 - 4 * var17 / var19 - 3 * var20 / 4, var12 - 4 * var18 / var19 - 3 * var21 / 4, var20 / 2, var21 / 2);
var9 = this.nWidth * this.p2Diam / 1000;
var10 = this.nHeight * this.p2Diam / 1000;
var11 = this.p2OldX * this.nWidth / 1000 - var9 / 2;
var12 = 4 * this.nHeight / 5 - var10 - this.p2OldY * this.nHeight / 1000;
var2.setColor(this.SKY_COL);
var2.fillRect(var11, var12, var9, var10);
var1 = new int[]{var11, var12, var11 + var9, var12 + var10};
var9 = this.nWidth * this.p2Diam / 1000;
var10 = this.nHeight * this.p2Diam / 1000;
var11 = this.p2X * this.nWidth / 1000 - var9 / 2;
var12 = 4 * this.nHeight / 5 - this.p2Diam * this.nHeight / 1000 - this.p2Y * this.nHeight / 1000;
var2.setColor(this.fP2Fire && this.superFlash?ShimmedColor.white:this.slimeColours[this.p2Col]);
if(var11 < var1[0]) {
var1[0] = var11;
}
if(var12 < var1[1]) {
var1[1] = var12;
}
if(var11 + var9 > var1[2]) {
var1[2] = var11 + var9;
}
if(var12 + var10 > var1[3]) {
var1[3] = var12 + var10;
}
this.redrawRegions.add(var1);
var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);
var15 = this.p2X - 18 * this.p2Diam / 100;
var16 = this.p2Y - 60 * this.p2Diam / 100;
var11 = var15 * this.nWidth / 1000;
var12 = 4 * this.nHeight / 5 - var10 - var16 * this.nHeight / 1000;
var17 = var11 - var5;
var18 = var12 - var6;
var19 = (int)Math.sqrt((double)(var17 * var17 + var18 * var18));
var20 = this.nWidth / 50 * this.p2Diam / 100;
var21 = this.nHeight / 25 * this.p2Diam / 100;
var2.setColor(ShimmedColor.white);
var2.fillOval(var11 - var20, var12 - var21, var20, var21);
var2.setColor(ShimmedColor.black);
var2.fillOval(var11 - 4 * var17 / var19 - 3 * var20 / 4, var12 - 4 * var18 / var19 - 3 * var21 / 4, var20 / 2, var21 / 2);
if(!this.fP1Fire && !this.fP2Fire) {
this.superFlash = false;
}
var5 = this.ballX * this.nWidth / 1000;
var6 = 4 * this.nHeight / 5 - this.ballY * this.nHeight / 1000;
var2.setColor(this.BALL_COL);
var2.fillOval(var5 - var4, var6 - var4, 2 * var4, 2 * var4);
var1 = new int[]{var7 - var4, var8 - var4, var7 + var4, var8 + var4};
if(var5 - var4 < var1[0]) {
var1[0] = var5 - var4;
}
if(var6 - var4 < var1[1]) {
var1[1] = var6 - var4;
}
if(var5 + var4 > var1[2]) {
var1[2] = var5 + var4;
}
if(var6 + var4 > var1[3]) {
var1[3] = var6 + var4;
}
this.redrawRegions.add(var1);
}
// $FF: renamed from: h () void
private void method_rn_Slime1P_h_92() {
byte var1 = 5;
byte var2 = 15;
byte var3 = 22;
this.ballY += --this.ballVY;
this.ballX += this.ballVX;
if(!this.fEndGame) {
int var4 = 2 * (this.ballX - this.p1X);
int var5 = this.ballY - this.p1Y;
int var6 = (int)Math.sqrt((double)(var4 * var4 + var5 * var5));
int var7 = this.ballVX - this.p1XV;
int var8 = this.ballVY - this.p1YV;
int var9;
if(var5 > 0 && var6 < this.p1Diam + this.ballRad && var6 > var1) {
var9 = (var4 * var7 + var5 * var8) / var6;
this.ballX = this.p1X + (this.p1Diam + this.ballRad) / 2 * var4 / var6;
this.ballY = this.p1Y + (this.p1Diam + this.ballRad) * var5 / var6;
if(var9 <= 0) {
this.ballVX += this.p1XV - 2 * var4 * var9 / var6;
if(this.ballVX < -var2) {
this.ballVX = -var2;
}
if(this.ballVX > var2) {
this.ballVX = var2;
}
this.ballVY += this.p1YV - 2 * var5 * var9 / var6;
if(this.ballVY < -var3) {
this.ballVY = -var3;
}
if(this.ballVY > var3) {
this.ballVY = var3;
}
}
if(this.fServerMoved) {
this.fP1Touched = true;
++this.fP1Touches;
this.fP2Touches = 0;
this.fP1HitStill = this.p1YV == 0 && this.p1XV == 0;
this.hitNetSinceTouched = false;
}
}
var4 = 2 * (this.ballX - this.p2X);
var5 = this.ballY - this.p2Y;
var6 = (int)Math.sqrt((double)(var4 * var4 + var5 * var5));
var7 = this.ballVX - this.p2XV;
var8 = this.ballVY - this.p2YV;
if(var5 > 0 && var6 < this.p2Diam + this.ballRad && var6 > var1) {
var9 = (var4 * var7 + var5 * var8) / var6;
this.ballX = this.p2X + (this.p2Diam + this.ballRad) / 2 * var4 / var6;
this.ballY = this.p2Y + (this.p2Diam + this.ballRad) * var5 / var6;
if(var9 <= 0) {
this.ballVX += this.p2XV - 2 * var4 * var9 / var6;
if(this.ballVX < -var2) {
this.ballVX = -var2;
}
if(this.ballVX > var2) {
this.ballVX = var2;
}
this.ballVY += this.p2YV - 2 * var5 * var9 / var6;
if(this.ballVY < -var3) {
this.ballVY = -var3;
}
if(this.ballVY > var3) {
this.ballVY = var3;
}
}
if(this.fServerMoved) {
this.fP2Touched = true;
++this.fP2Touches;
this.fP1Touches = 0;
this.fP2HitStill = this.p2YV == 0 && this.p2XV == 0;
this.hitNetSinceTouched = false;
}
}
if(this.ballX < 15) {
this.ballX = 15;
this.ballVX = -this.ballVX;
}
if(this.ballX > 985) {
this.ballX = 985;
this.ballVX = -this.ballVX;
}
if(this.ballX > 480 && this.ballX < 520 && this.ballY < 140) {
if(this.ballVY < 0 && this.ballY > 130) {
this.ballVY *= -1;
this.ballY = 130;
} else if(this.ballX < 500) {
this.ballX = 480;
this.ballVX = this.ballVX >= 0?-this.ballVX:this.ballVX;
this.hitNetSinceTouched = true;
} else {
this.ballX = 520;
this.ballVX = this.ballVX <= 0?-this.ballVX:this.ballVX;
this.hitNetSinceTouched = true;
}
}
}
}
// $FF: renamed from: goto () void
private void method_rn_Slime1P_goto_93() {
if(!this.replaying) {
ShimmedGraphics var1 = this.getGraphics();
ShimmedFontMetrics var2 = var1.getFontMetrics();
int var3 = this.nHeight / 15;
int var4 = 20;
int var5;
for(var5 = 0; var5 < 6; ++var5) {
if(this.fP1PointsWon >= var5 + 1) {
var1.setColor(this.slimeColours[this.p1Col]);
var1.fillOval(var4, 30 - var3 / 2, var3, var3);
}
var1.setColor(ShimmedColor.white);
var1.drawOval(var4, 30 - var3 / 2, var3, var3);
var4 += var3 + 10;
}
var4 = this.nWidth - 20 - 6 * (var3 + 10);
for(var5 = 0; var5 < 6; ++var5) {
if(this.fP2PointsWon >= 6 - var5) {
var1.setColor(this.slimeColours[this.p2Col]);
var1.fillOval(var4, 30 - var3 / 2, var3, var3);
}
var1.setColor(ShimmedColor.white);
var1.drawOval(var4, 30 - var3 / 2, var3, var3);
var4 += var3 + 10;
}
}
}
// $FF: renamed from: a (long) java.lang.String
private String method_rn_Slime1P_a_94(long var1) {
String var3 = "";
long var4 = var1 / 10L % 100L;
long var6 = var1 / 1000L % 60L;
long var8 = var1 / 60000L % 60L;
long var10 = var1 / 3600000L;
var3 = var3 + var8 + ":";
if(var6 < 10L) {
var3 = var3 + "0";
}
var3 = var3 + var6;
return var3;
}
// $FF: renamed from: byte () void
private void method_rn_Slime1P_byte_95() {
ShimmedGraphics var1;
if(this.buffered) {
var1 = this.buffer.getGraphics();
} else {
var1 = this.getGraphics();
}
int var2 = this.nHeight / 20;
var1.setColor(this.SKY_COL);
var1.setFont(this.screen.getFont());
ShimmedFontMetrics var3 = var1.getFontMetrics();
String var4 = (this.oneplayer?"Score: " + this.gameScore:"") + (!this.fInPlay?"":" Time: " + this.method_rn_Slime1P_a_94((this.paused?this.pausedTime:ShimmedSystem.currentTimeMillis()) - this.startTime));
int var5 = var3.stringWidth(var4);
int var6 = this.nWidth / 2 - var5 / 2 - 10;
var1.fillRect(var6, 0, var5 + 20, var2 + 22);
var1.setColor(ShimmedColor.white);
int var7 = var3.stringWidth(var4);
int var8 = this.nWidth / 2 - var7 / 2;
int var9 = var3.getHeight() * 2;
var1.drawString(var4, var8, var9);
this.redrawRegions.add(new int[]{var8, 0, var8 + var7, var9 + var9 / 2});
}
// $FF: renamed from: int () void
public void method_rn_Slime1P_int_96() {
ShimmedGraphics var1;
if(this.buffered) {
var1 = this.buffer.getGraphics();
} else {
var1 = this.getGraphics();
}
var1.setFont(this.screen.getFont());
this.screen.setColor(this.COURT_COL);
this.screen.fillRect(0, 4 * this.nHeight / 5 + 6, this.nWidth, this.nHeight / 5 - 10);
this.method_rn_Slime1P_a_97(this.promptMsg, 0);
}
// $FF: renamed from: a (java.lang.String, int) void
public void method_rn_Slime1P_a_97(String var1, int var2) {
ShimmedGraphics var3 = this.getGraphics();
var3.setFont(new ShimmedFont(var3.getFont().getName(), 1, 15));
ShimmedFontMetrics var4 = var3.getFontMetrics();
var3.setColor(ShimmedColor.white);
int var5 = var4.stringWidth(var1);
int var6 = (this.nWidth - var5) / 2;
int var7 = this.nHeight * 4 / 5 + var4.getHeight() * (var2 + 1) + 10;
var3.drawString(var1, var6, var7);
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_byte_95();
this.redrawRegions.add(new int[]{var6, var7, var6 + var5 + 1, var7 + var4.getHeight()});
}
// $FF: renamed from: a (int) void
private void method_rn_Slime1P_a_98(int var1) {
this.method_rn_Slime1P_a_99(var1, true);
}
// $FF: renamed from: a (int, boolean) void
private void method_rn_Slime1P_a_99(int var1, boolean var2) {
int var3 = var1 != 0?var1 - 1:this.replayData.length - 1;
this.p1OldX = this.replayData[var3][0];
this.p1OldY = this.replayData[var3][1];
this.p2OldX = this.replayData[var3][2];
this.p2OldY = this.replayData[var3][3];
this.ballOldX = this.replayData[var3][4];
this.ballOldY = this.replayData[var3][5];
this.p1X = this.replayData[var1][0];
this.p1Y = this.replayData[var1][1];
this.p2X = this.replayData[var1][2];
this.p2Y = this.replayData[var1][3];
this.ballX = this.replayData[var1][4];
this.ballY = this.replayData[var1][5];
this.ballVX = 0;
this.ballVY = 1;
if(this.ballOldX == 0 && this.ballOldY == 0) {
this.ballOldX = this.ballOldY = -500;
}
if(this.ballX == this.ballOldX && this.ballY == this.ballOldY) {
this.ballOldX = this.ballOldY = -500;
}
this.method_rn_Slime1P_if_91();
if(this.buffered) {
this.getGraphics().drawImage(this.buffer, 0, 0, (ShimmedImageObserver)null);
}
}
// $FF: renamed from: g () void
private void method_rn_Slime1P_g_100() {
this.replayData[this.replayIndex][0] = this.p1X;
this.replayData[this.replayIndex][1] = this.p1Y;
this.replayData[this.replayIndex][2] = this.p2X;
this.replayData[this.replayIndex][3] = this.p2Y;
this.replayData[this.replayIndex][4] = this.ballX;
this.replayData[this.replayIndex][5] = this.ballY;
this.replayData[this.replayIndex][6] = this.p1Col;
this.replayData[this.replayIndex][7] = this.p2Col;
++this.replayIndex;
if(this.replayIndex >= this.replayData.length) {
this.replayIndex = 0;
}
if(this.replayStart == this.replayIndex) {
++this.replayStart;
}
if(this.replayStart >= this.replayData.length) {
this.replayStart = 0;
}
}
// $FF: renamed from: f () void
private void method_rn_Slime1P_f_101() {
this.replaying = true;
this.method_rn_Slime1P_void_78();
ShimmedGraphics var1 = this.buffered?this.buffer.getGraphics():this.getGraphics();
ShimmedFontMetrics var2 = var1.getFontMetrics();
int var3 = var2.getHeight();
this.promptMsg = "Press space to continue...";
this.mousePressed = false;
int var4 = this.scoringRun;
this.scoringRun = this.oldScoringRun;
int var5 = this.replayStart;
boolean var6 = false;
while(!this.mousePressed) {
++var5;
if(var5 >= this.replayData.length) {
var5 = 0;
}
if(var5 == this.replayIndex) {
var1.setColor(ShimmedColor.white);
var1.fillRect(20, 20, 20, 20);
this.method_rn_Slime1P_a_107(1000L, false);
var6 = !var6;
this.paint(var1);
var1.setColor(this.SKY_COL);
var1.fillRect(0, 0, this.nWidth, this.nHeight / 20 + 22);
if(this.replayIndex < this.replayStart) {
var5 += this.replayData.length;
}
while(var5 > this.replayStart) {
var5 -= 5;
this.method_rn_Slime1P_void_78();
var1.setColor(ShimmedColor.white);
var1.fillPolygon(new ShimmedPolygon(new int[]{20, 35, 35, 50, 50, 35, 35, 20}, new int[]{30, 20, 30, 20, 40, 30, 40, 30}, 8));
if(var5 < this.replayStart) {
var5 = this.replayStart;
}
this.method_rn_Slime1P_a_99(var5 % this.replayData.length, false);
this.method_rn_Slime1P_a_107(20L, false);
}
this.method_rn_Slime1P_void_78();
var1.setColor(ShimmedColor.white);
var1.fillRect(20, 20, 20, 20);
this.method_rn_Slime1P_a_98(this.replayStart);
this.method_rn_Slime1P_a_107(500L, false);
this.method_rn_Slime1P_void_78();
}
this.method_rn_Slime1P_a_98(var5);
try {
ShimmedThread.sleep(var6?60L:20L);
} catch (InterruptedException var8) {
;
}
var1.setColor(ShimmedColor.white);
var1.fillPolygon(new ShimmedPolygon(new int[]{20, 35, 20}, new int[]{20, 30, 40}, 3));
}
this.scoringRun = var4;
this.promptMsg = "";
this.paint(var1);
this.replaying = false;
}
public void run() {
this.replayIndex = this.replayStart = 0;
this.method_rn_Slime1P_int_96();
this.superFlash = false;
this.scoringRun = 0;
this.fP1Touches = 0;
this.fP2Touches = 0;
this.fP1TouchesTot = 0;
this.fP2TouchesTot = 0;
this.fP1Clangers = 0;
this.fP2Clangers = 0;
this.fP1Aces = 0;
this.fP2Aces = 0;
this.fP1Winners = 0;
this.fP2Winners = 0;
this.fP1Frames = 0L;
this.fP2Frames = 0L;
this.fP1Super = 0;
this.fP2Super = 0;
this.fP1HitStill = false;
this.fP2HitStill = false;
this.fServerMoved = false;
this.method_rn_Slime1P_goto_93();
this.fP1Touched = this.fP2Touched = false;
this.hitNetSinceTouched = false;
boolean var1 = false;
boolean var2 = false;
boolean var3 = false;
this.gameOver = false;
ShimmedGraphics var4 = this.buffer.getGraphics();
this.startTime = ShimmedSystem.currentTimeMillis();
this.method_rn_Slime1P_void_78();
this.repaint();
while(this.gameThread != null && !this.gameOver) {
if(!this.paused) {
this.p1OldX = this.p1X;
this.p1OldY = this.p1Y;
this.p2OldX = this.p2X;
this.p2OldY = this.p2Y;
this.ballOldX = this.ballX;
this.ballOldY = this.ballY;
this.method_rn_Slime1P_i_90();
this.method_rn_Slime1P_h_92();
this.method_rn_Slime1P_byte_95();
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_if_91();
this.method_rn_Slime1P_do_79();
this.method_rn_Slime1P_g_100();
}
if(this.ballY < 35) {
long var5 = ShimmedSystem.currentTimeMillis();
if(this.ballX > 500) {
++this.fP1PointsWon;
} else {
++this.fP2PointsWon;
}
if(this.ballX > 500 || this.fP1Touches < 3 && (!this.hitNetSinceTouched || this.fP1Touches <= 0) && this.fP2Touched && (!this.fP1HitStill || this.fP1Touches <= 0)) {
if(this.ballX > 500 && (this.fP2Touches >= 3 || this.hitNetSinceTouched && this.fP2Touches > 0 || !this.fP1Touched || this.fP2HitStill && this.fP2Touches > 0)) {
++this.fP2Clangers;
var1 = true;
}
} else {
++this.fP1Clangers;
var1 = true;
}
if(this.fP1Touched && !this.fP2Touched && this.ballX >= 500) {
++this.fP1Aces;
var2 = true;
this.gameScore += 200 * this.method_rn_Slime1P_case_108();
} else if(this.fP2Touched && !this.fP1Touched && this.ballX < 500) {
++this.fP2Aces;
var2 = true;
} else if(this.ballX > 500 && this.fP1Touches > 0) {
++this.fP1Winners;
var3 = true;
this.gameScore += 100 * this.method_rn_Slime1P_case_108();
} else if(this.ballX <= 500 && this.fP2Touches > 0) {
++this.fP2Winners;
var3 = true;
}
if(this.ballX > 500 && !var3 && !var2) {
this.gameScore += 50 * this.method_rn_Slime1P_case_108();
}
if(this.oneplayer) {
this.promptMsg = this.ballX <= 500?this.slimeColText[this.p2Col]:this.slimeColText[this.p1Col];
} else {
this.promptMsg = this.slimeColText[this.p1Col] + (this.ballX <= 500?"2 ":"1 ");
}
if(this.fP1PointsWon != 6 && this.fP2PointsWon != 6) {
if(var2) {
this.promptMsg = this.promptMsg + "aces the serve!";
} else if(var3) {
this.promptMsg = this.promptMsg + "scores a winner!";
} else if(this.ballX > 500 && !this.fP1Touched && this.fP2Touched || this.ballX <= 500 && this.fP1Touched && !this.fP2Touched) {
this.promptMsg = this.promptMsg + "laughs at his opponent\'s inability to serve!";
} else if(this.fP1PointsWon == this.fP2PointsWon) {
this.promptMsg = this.promptMsg + "draws level!";
} else if((this.ballX <= 500 || this.fP1PointsWon != this.fP2PointsWon + 1) && (this.ballX > 500 || this.fP1PointsWon + 1 != this.fP2PointsWon)) {
this.promptMsg = this.promptMsg + "scores!";
} else {
this.promptMsg = this.promptMsg + "takes the lead!";
}
} else {
this.promptMsg = this.promptMsg + "wins!";
}
int var7 = this.ballX;
this.method_rn_Slime1P_int_96();
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_byte_95();
var1 = false;
var2 = false;
var3 = false;
this.mousePressed = false;
this.method_rn_Slime1P_a_107(1500L, true);
if(this.mousePressed) {
this.method_rn_Slime1P_g_100();
this.method_rn_Slime1P_f_101();
}
if(this.fP1PointsWon == 6 || this.fP2PointsWon == 6) {
this.method_rn_Slime1P_a_102();
}
this.promptMsg = "";
this.method_rn_Slime1P_for_80();
this.ballX = var7 >= 500?200:800;
this.method_rn_Slime1P_void_78();
this.repaint();
this.startTime += ShimmedSystem.currentTimeMillis() - var5;
}
if(this.gameThread != null) {
this.method_rn_Slime1P_a_107(20L, true);
}
}
this.fEndGame = true;
this.fInPlay = false;
this.repaint();
}
// $FF: renamed from: a () void
private void method_rn_Slime1P_a_102() {
if(!this.oneplayer) {
this.method_rn_Slime1P_a_103(this.fP1PointsWon > this.fP2PointsWon);
} else if(this.fP1PointsWon == 6) {
this.gameTime = ShimmedSystem.currentTimeMillis() - this.startTime;
if(this.fP1PointsWon == 6) {
this.gameScore += 1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon) * this.method_rn_Slime1P_case_108();
this.gameScore = (int)((long)this.gameScore + (this.gameTime < 300000L?300000L - this.gameTime:0L) / 1000L * (long)this.method_rn_Slime1P_case_108());
}
if(this.fP2PointsWon == 0) {
this.gameScore += 1000 * this.method_rn_Slime1P_case_108();
}
if(this.aiMode == 4) {
this.aiMode = 5;
this.method_rn_Slime1P_if_104(true);
}
} else {
this.method_rn_Slime1P_if_104(false);
}
this.fInPlay = false;
this.gameThread = null;
this.method_rn_Slime1P_void_78();
this.repaint();
}
// $FF: renamed from: a (boolean) void
private void method_rn_Slime1P_a_103(boolean var1) {
ShimmedFontMetrics var2 = this.screen.getFontMetrics();
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_byte_95();
ShimmedGraphics var3;
if(this.buffered) {
var3 = this.buffer.getGraphics();
} else {
var3 = this.getGraphics();
}
ShimmedFontMetrics var4 = var3.getFontMetrics();
var3.setColor(this.COURT_COL);
String[] var5 = new String[]{"C\'mon player " + (var1?1:2) + ", I\'ll take you on!", "Inferior human controlled slime " + (var1?2:1) + " is insipid!", "Inferior human controlled slime " + (var1?2:1) + " is rubbish!", "Super inferior human controlled slime " + (var1?1:2) + " wins!", "You\'re both yellow cowards. Play me instead!"};
String var6 = var5[(int)((double)var5.length * Math.random())];
var3.fillRect((this.nWidth - var4.stringWidth(var6)) / 2 - 30, this.nHeight / 2 - var4.getAscent() * 5, var4.stringWidth(var6) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);
var3.setColor(ShimmedColor.white);
var3.drawString(var6, (this.nWidth - var4.stringWidth(var6)) / 2, this.nHeight / 2 - var4.getAscent() * 3);
var3.setFont(this.screen.getFont());
var3.drawString("GAME OVER", (this.nWidth - var2.stringWidth("GAME OVER")) / 2, this.nHeight / 2 + var2.getAscent());
this.repaint();
this.method_rn_Slime1P_a_107(3000L, false);
this.gameOver = true;
}
// $FF: renamed from: if (boolean) void
private void method_rn_Slime1P_if_104(boolean var1) {
ShimmedFontMetrics var2 = this.screen.getFontMetrics();
this.method_rn_Slime1P_goto_93();
this.method_rn_Slime1P_byte_95();
ShimmedGraphics var3;
if(this.buffered) {
var3 = this.buffer.getGraphics();
} else {
var3 = this.getGraphics();
}
ShimmedFontMetrics var4 = var3.getFontMetrics();
if(!var1) {
var3.setColor(this.COURT_COL);
var3.fillRect((this.nWidth - this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode]))) / 2 - 30, this.nHeight / 2 - var4.getAscent() * 5, this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode])) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);
var3.setColor(ShimmedColor.white);
var3.drawString(this.loserText1[this.aiMode], (this.nWidth - var4.stringWidth(this.loserText1[this.aiMode])) / 2, this.nHeight / 2 - var4.getAscent() * 3);
var3.drawString(this.loserText2[this.aiMode], (this.nWidth - var4.stringWidth(this.loserText2[this.aiMode])) / 2, this.nHeight / 2 - var4.getAscent() * 2);
var3.setFont(this.screen.getFont());
var3.drawString("GAME OVER", (this.nWidth - var2.stringWidth("GAME OVER")) / 2, this.nHeight / 2 + var2.getAscent());
} else {
this.method_rn_Slime1P_a_105(var3);
var3.setColor(ShimmedColor.white);
var3.setFont(this.screen.getFont());
var3.drawString("YOU WIN!", (this.nWidth - var2.stringWidth("YOU WIN!")) / 2, this.nHeight / 2);
var3.drawString("The Slimes bow down before the new Slime King!", (this.nWidth - var4.stringWidth("The Slimes bow down before the new Slime King!")) / 2, this.nHeight / 2 + var4.getAscent());
}
if(this.buffered) {
this.repaint();
}
try {
if(Class_rn_g_7.method_rn_g_a_66(this, (long)this.gameScore)) {
new NameFrame(this, (long)this.gameScore, this.aiMode);
}
} catch (Exception var6) {
;
}
this.method_rn_Slime1P_a_107(3000L, false);
this.gameOver = true;
this.method_rn_Slime1P_void_78();
this.repaint();
}
// $FF: renamed from: a (java.awt.ShimmedGraphics) void
private void method_rn_Slime1P_a_105(ShimmedGraphics var1) {
}
// $FF: renamed from: a (int, int) int
private int method_rn_Slime1P_a_106(int var1, int var2) {
return var1 > var2?var1:var2;
}
// $FF: renamed from: a (long, boolean) void
private void method_rn_Slime1P_a_107(long var1, boolean var3) {
if(this.gameThread != null) {
for(int var4 = 0; (long)var4 < var1 / 20L; ++var4) {
try {
ShimmedThread var10000 = this.gameThread;
ShimmedThread.sleep(20L);
} catch (InterruptedException var6) {
;
}
}
}
}
// $FF: renamed from: case () int
private int method_rn_Slime1P_case_108() {
return (int)Math.pow(2.0D, (double)this.aiMode);
}
public void destroy() {
if(this.gameThread != null) {
this.gameThread.stop();
this.gameThread = null;
}
}
}

ENDOFJAVAMARKER
{
  "startTime": "2019-01-12 18:35:09",
  "sourceLength": 0,
  "success": true,
  "endTime": "2019-01-12 18:35:11",
  "durationMillis": 1787,
  "errors": [],
  "jsout": "var __extends \u003d (this \u0026\u0026 this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] \u003d b[p];\n    function __() { this.constructor \u003d d; }\n    d.prototype \u003d b \u003d\u003d\u003d null ? Object.create(b) : (__.prototype \u003d b.prototype, new __());\n};\n/* Generated from Java with JSweet 2.0.0 - http://www.jsweet.org */\nvar ShimmedSize \u003d (function () {\n    function ShimmedSize() {\n        this.width \u003d 0;\n        this.height \u003d 0;\n    }\n    return ShimmedSize;\n}());\nShimmedSize[\"__class\"] \u003d \"ShimmedSize\";\nvar ShimmedApplet \u003d (function () {\n    function ShimmedApplet() {\n    }\n    ShimmedApplet.prototype.size \u003d function () {\n        return null;\n    };\n    ShimmedApplet.prototype.createImage \u003d function (x, y) {\n        return null;\n    };\n    ShimmedApplet.prototype.showStatus \u003d function (s) {\n    };\n    ShimmedApplet.prototype.repaint \u003d function () {\n    };\n    ShimmedApplet.prototype.getGraphics \u003d function () {\n        return null;\n    };\n    ShimmedApplet.prototype.requestFocus \u003d function () {\n    };\n    ShimmedApplet.prototype.getWidth \u003d function () {\n        return 0;\n    };\n    ShimmedApplet.prototype.getHeight \u003d function () {\n        return 0;\n    };\n    ShimmedApplet.prototype.getDocumentBase \u003d function () {\n        return null;\n    };\n    ShimmedApplet.prototype.getAppletContext \u003d function () {\n        return null;\n    };\n    ShimmedApplet.prototype.getCodeBase \u003d function () {\n        return null;\n    };\n    ShimmedApplet.prototype.getAudioClip \u003d function (u, s) {\n        return null;\n    };\n    ShimmedApplet.prototype.getImage \u003d function (u, s) {\n        return null;\n    };\n    return ShimmedApplet;\n}());\nShimmedApplet[\"__class\"] \u003d \"ShimmedApplet\";\nvar ShimmedColor \u003d (function () {\n    function ShimmedColor(r, g, b) {\n    }\n    return ShimmedColor;\n}());\nShimmedColor.yellow \u003d null;\nShimmedColor.black \u003d null;\nShimmedColor.red \u003d null;\nShimmedColor.gray \u003d null;\nShimmedColor.white \u003d null;\nShimmedColor.blue \u003d null;\nShimmedColor.green \u003d null;\nShimmedColor.pink \u003d null;\nShimmedColor.cyan \u003d null;\nShimmedColor.lightGray \u003d null;\nShimmedColor.darkGray \u003d null;\nShimmedColor.orange \u003d null;\nShimmedColor[\"__class\"] \u003d \"ShimmedColor\";\nvar ShimmedGraphics \u003d (function () {\n    function ShimmedGraphics() {\n    }\n    ShimmedGraphics.prototype.getFont \u003d function () {\n        return null;\n    };\n    ShimmedGraphics.prototype.setFont \u003d function (f) {\n    };\n    ShimmedGraphics.prototype.setColor \u003d function (c) {\n    };\n    ShimmedGraphics.prototype.fillRect \u003d function (x, y, w, h) {\n    };\n    ShimmedGraphics.prototype.getFontMetrics \u003d function () {\n        return null;\n    };\n    ShimmedGraphics.prototype.drawString \u003d function (s, x, y) {\n    };\n    ShimmedGraphics.prototype.drawImage \u003d function (i, x, y, o) {\n    };\n    ShimmedGraphics.prototype.drawOval \u003d function (x, y, w, h) {\n    };\n    ShimmedGraphics.prototype.fillOval \u003d function (x, y, w, h) {\n    };\n    ShimmedGraphics.prototype.fillArc \u003d function (x, y, w, h, s, e) {\n    };\n    ShimmedGraphics.prototype.drawLine \u003d function (x, y, w, h) {\n    };\n    ShimmedGraphics.prototype.drawRect \u003d function (x, y, w, h) {\n    };\n    ShimmedGraphics.prototype.fillPolygon$int_A$int_A$int \u003d function (xs, ys, n) {\n    };\n    ShimmedGraphics.prototype.fillPolygon \u003d function (xs, ys, n) {\n        if (((xs !\u003d null \u0026\u0026 xs instanceof Array \u0026\u0026 (xs.length \u003d\u003d 0 || xs[0] \u003d\u003d null || (typeof xs[0] \u003d\u003d\u003d \u0027number\u0027))) || xs \u003d\u003d\u003d null) \u0026\u0026 ((ys !\u003d null \u0026\u0026 ys instanceof Array \u0026\u0026 (ys.length \u003d\u003d 0 || ys[0] \u003d\u003d null || (typeof ys[0] \u003d\u003d\u003d \u0027number\u0027))) || ys \u003d\u003d\u003d null) \u0026\u0026 ((typeof n \u003d\u003d\u003d \u0027number\u0027) || n \u003d\u003d\u003d null)) {\n            return this.fillPolygon$int_A$int_A$int(xs, ys, n);\n        }\n        else if (((xs !\u003d null \u0026\u0026 xs instanceof ShimmedPolygon) || xs \u003d\u003d\u003d null) \u0026\u0026 ys \u003d\u003d\u003d undefined \u0026\u0026 n \u003d\u003d\u003d undefined) {\n            return this.fillPolygon$ShimmedPolygon(xs);\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n    };\n    ShimmedGraphics.prototype.fillPolygon$ShimmedPolygon \u003d function (p) {\n    };\n    ShimmedGraphics.prototype.drawArc \u003d function (x, y, w, h, s, e) {\n    };\n    return ShimmedGraphics;\n}());\nShimmedGraphics[\"__class\"] \u003d \"ShimmedGraphics\";\nvar ShimmedImage \u003d (function () {\n    function ShimmedImage() {\n    }\n    ShimmedImage.prototype.getGraphics \u003d function () {\n        return null;\n    };\n    ShimmedImage.prototype.getHeight \u003d function (a) {\n        return 0;\n    };\n    return ShimmedImage;\n}());\nShimmedImage[\"__class\"] \u003d \"ShimmedImage\";\nvar ShimmedEvent \u003d (function () {\n    function ShimmedEvent() {\n        this.id \u003d 0;\n        this.x \u003d 0;\n        this.y \u003d 0;\n        this.key \u003d 0;\n        this.target \u003d null;\n    }\n    return ShimmedEvent;\n}());\nShimmedEvent.KEY_ACTION \u003d 0;\nShimmedEvent.LEFT \u003d 1;\nShimmedEvent.RIGHT \u003d 2;\nShimmedEvent.UP \u003d 3;\nShimmedEvent.DOWN \u003d 4;\nShimmedEvent.KEY_ACTION_RELEASE \u003d 5;\nShimmedEvent[\"__class\"] \u003d \"ShimmedEvent\";\nvar ShimmedFont \u003d (function () {\n    function ShimmedFont(name, w, h) {\n    }\n    ShimmedFont.prototype.getName \u003d function () {\n        return null;\n    };\n    return ShimmedFont;\n}());\nShimmedFont[\"__class\"] \u003d \"ShimmedFont\";\nvar ShimmedFontMetrics \u003d (function () {\n    function ShimmedFontMetrics() {\n    }\n    ShimmedFontMetrics.prototype.getHeight \u003d function () {\n        return 0;\n    };\n    ShimmedFontMetrics.prototype.stringWidth \u003d function (s) {\n        return 0;\n    };\n    ShimmedFontMetrics.prototype.getAscent \u003d function () {\n        return 0;\n    };\n    return ShimmedFontMetrics;\n}());\nShimmedFontMetrics[\"__class\"] \u003d \"ShimmedFontMetrics\";\nvar ShimmedThread \u003d (function () {\n    function ShimmedThread(r) {\n    }\n    ShimmedThread.sleep$long \u003d function (ms) {\n    };\n    ShimmedThread.sleep$long$boolean \u003d function (ms, b) {\n    };\n    ShimmedThread.sleep \u003d function (ms, b) {\n        if (((typeof ms \u003d\u003d\u003d \u0027number\u0027) || ms \u003d\u003d\u003d null) \u0026\u0026 ((typeof b \u003d\u003d\u003d \u0027boolean\u0027) || b \u003d\u003d\u003d null)) {\n            return ShimmedThread.sleep$long$boolean(ms, b);\n        }\n        else if (((typeof ms \u003d\u003d\u003d \u0027number\u0027) || ms \u003d\u003d\u003d null) \u0026\u0026 b \u003d\u003d\u003d undefined) {\n            return ShimmedThread.sleep$long(ms);\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n    };\n    ShimmedThread.prototype.start \u003d function () {\n    };\n    ShimmedThread.prototype.stop \u003d function () {\n    };\n    return ShimmedThread;\n}());\nShimmedThread[\"__class\"] \u003d \"ShimmedThread\";\nvar ShimmedAppletContext \u003d (function () {\n    function ShimmedAppletContext() {\n    }\n    ShimmedAppletContext.prototype.showDocument$ShimmedURL \u003d function (u) {\n    };\n    ShimmedAppletContext.prototype.showDocument$ShimmedURL$java_lang_String \u003d function (u, s) {\n    };\n    ShimmedAppletContext.prototype.showDocument \u003d function (u, s) {\n        if (((u !\u003d null \u0026\u0026 u instanceof ShimmedURL) || u \u003d\u003d\u003d null) \u0026\u0026 ((typeof s \u003d\u003d\u003d \u0027string\u0027) || s \u003d\u003d\u003d null)) {\n            return this.showDocument$ShimmedURL$java_lang_String(u, s);\n        }\n        else if (((u !\u003d null \u0026\u0026 u instanceof ShimmedURL) || u \u003d\u003d\u003d null) \u0026\u0026 s \u003d\u003d\u003d undefined) {\n            return this.showDocument$ShimmedURL(u);\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n    };\n    return ShimmedAppletContext;\n}());\nShimmedAppletContext[\"__class\"] \u003d \"ShimmedAppletContext\";\nvar ShimmedDocumentBase \u003d (function () {\n    function ShimmedDocumentBase() {\n    }\n    ShimmedDocumentBase.prototype.getHost \u003d function () {\n        return null;\n    };\n    return ShimmedDocumentBase;\n}());\nShimmedDocumentBase[\"__class\"] \u003d \"ShimmedDocumentBase\";\nvar ShimmedURL \u003d (function () {\n    function ShimmedURL(s) {\n    }\n    ShimmedURL.prototype.openStream \u003d function () {\n        return null;\n    };\n    return ShimmedURL;\n}());\nShimmedURL[\"__class\"] \u003d \"ShimmedURL\";\nvar ShimmedPrintStream \u003d (function () {\n    function ShimmedPrintStream() {\n    }\n    ShimmedPrintStream.prototype.print \u003d function (s) {\n        return null;\n    };\n    ShimmedPrintStream.prototype.println$ \u003d function () {\n        return null;\n    };\n    ShimmedPrintStream.prototype.println$java_lang_Object \u003d function (s) {\n        return null;\n    };\n    ShimmedPrintStream.prototype.println \u003d function (s) {\n        if (((s !\u003d null) || s \u003d\u003d\u003d null)) {\n            return this.println$java_lang_Object(s);\n        }\n        else if (s \u003d\u003d\u003d undefined) {\n            return this.println$();\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n    };\n    return ShimmedPrintStream;\n}());\nShimmedPrintStream[\"__class\"] \u003d \"ShimmedPrintStream\";\nvar ShimmedSystem \u003d (function () {\n    function ShimmedSystem() {\n    }\n    ShimmedSystem.currentTimeMillis \u003d function () {\n        return 0;\n    };\n    return ShimmedSystem;\n}());\nShimmedSystem.out \u003d null;\nShimmedSystem[\"__class\"] \u003d \"ShimmedSystem\";\nvar ShimmedVector \u003d (function () {\n    function ShimmedVector(n) {\n    }\n    ShimmedVector.prototype.removeAllElements \u003d function () {\n    };\n    ShimmedVector.prototype.get \u003d function (i) {\n        return null;\n    };\n    ShimmedVector.prototype.size \u003d function () {\n        return 0;\n    };\n    ShimmedVector.prototype.add \u003d function (x) {\n    };\n    return ShimmedVector;\n}());\nShimmedVector[\"__class\"] \u003d \"ShimmedVector\";\nvar ShimmedElement \u003d (function () {\n    function ShimmedElement() {\n    }\n    ShimmedElement.prototype.add \u003d function (e) {\n    };\n    return ShimmedElement;\n}());\nShimmedElement[\"__class\"] \u003d \"ShimmedElement\";\nvar ShimmedPolygon \u003d (function () {\n    function ShimmedPolygon(xs, ys, n) {\n    }\n    return ShimmedPolygon;\n}());\nShimmedPolygon[\"__class\"] \u003d \"ShimmedPolygon\";\nvar ShimmedInputStream \u003d (function () {\n    function ShimmedInputStream() {\n    }\n    ShimmedInputStream.prototype.close \u003d function () {\n    };\n    return ShimmedInputStream;\n}());\nShimmedInputStream[\"__class\"] \u003d \"ShimmedInputStream\";\nvar ShimmedBufferedReader \u003d (function () {\n    function ShimmedBufferedReader(i) {\n    }\n    ShimmedBufferedReader.prototype.readLine \u003d function () {\n        return null;\n    };\n    ShimmedBufferedReader.prototype.close \u003d function () {\n    };\n    return ShimmedBufferedReader;\n}());\nShimmedBufferedReader[\"__class\"] \u003d \"ShimmedBufferedReader\";\nvar ShimmedInputStreamReader \u003d (function () {\n    function ShimmedInputStreamReader(is) {\n    }\n    return ShimmedInputStreamReader;\n}());\nShimmedInputStreamReader[\"__class\"] \u003d \"ShimmedInputStreamReader\";\nvar ShimmedGridLayout \u003d (function () {\n    function ShimmedGridLayout(x, y) {\n    }\n    return ShimmedGridLayout;\n}());\nShimmedGridLayout[\"__class\"] \u003d \"ShimmedGridLayout\";\nvar ShimmedLong \u003d (function () {\n    function ShimmedLong() {\n    }\n    ShimmedLong.parseLong \u003d function (s) {\n        return 0;\n    };\n    return ShimmedLong;\n}());\nShimmedLong[\"__class\"] \u003d \"ShimmedLong\";\nvar ShimmedChars \u003d (function () {\n    function ShimmedChars() {\n    }\n    /**\n     * Replacement for .toCharArray() which returns chars, when actually we (probably/hopefully) want ints.\n     * @param {string} s\n     * @return {Array}\n     */\n    ShimmedChars.charCodeArray \u003d function (s) {\n        return null;\n    };\n    return ShimmedChars;\n}());\nShimmedChars[\"__class\"] \u003d \"ShimmedChars\";\nvar ShimmedImageObserver \u003d (function () {\n    function ShimmedImageObserver() {\n    }\n    return ShimmedImageObserver;\n}());\nShimmedImageObserver[\"__class\"] \u003d \"ShimmedImageObserver\";\nvar ShimmedRandom \u003d (function () {\n    function ShimmedRandom() {\n    }\n    ShimmedRandom.prototype.nextInt \u003d function (m) {\n        return 0;\n    };\n    return ShimmedRandom;\n}());\nShimmedRandom[\"__class\"] \u003d \"ShimmedRandom\";\nvar ShimmedAudioClip \u003d (function () {\n    function ShimmedAudioClip() {\n    }\n    ShimmedAudioClip.prototype.play \u003d function () {\n    };\n    return ShimmedAudioClip;\n}());\nShimmedAudioClip[\"__class\"] \u003d \"ShimmedAudioClip\";\nvar ShimmedStringBuffer \u003d (function () {\n    function ShimmedStringBuffer(i) {\n        if (((i !\u003d null) || i \u003d\u003d\u003d null)) {\n            var __args \u003d Array.prototype.slice.call(arguments);\n        }\n        else if (i \u003d\u003d\u003d undefined) {\n            var __args \u003d Array.prototype.slice.call(arguments);\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n    }\n    ShimmedStringBuffer.prototype.append \u003d function (s) {\n        return null;\n    };\n    return ShimmedStringBuffer;\n}());\nShimmedStringBuffer[\"__class\"] \u003d \"ShimmedStringBuffer\";\nvar EndOfShimDeclarations \u003d (function () {\n    function EndOfShimDeclarations() {\n    }\n    return EndOfShimDeclarations;\n}());\nEndOfShimDeclarations[\"__class\"] \u003d \"EndOfShimDeclarations\";\nvar Class_rn_c_1 \u003d (function () {\n    function Class_rn_c_1() {\n        this.field_rn_c_void_13 \u003d 0;\n        this.field_rn_c_else_14 \u003d 0;\n        this.field_rn_c_do_15 \u003d 0;\n        this.field_rn_c_if_16 \u003d 0;\n        this.field_rn_c_g_17 \u003d 0;\n        this.field_rn_c_e_18 \u003d 0;\n        this.field_rn_c_byte_19 \u003d 0;\n        this.field_rn_c_try_20 \u003d 0;\n        this.field_rn_c_int_21 \u003d 0;\n        this.field_rn_c_for_22 \u003d 0;\n        this.field_rn_c_d_23 \u003d 0;\n        this.field_rn_c_b_24 \u003d 0;\n        this.field_rn_c_new_25 \u003d false;\n        this.field_rn_c_f_26 \u003d false;\n        this.field_rn_c_c_27 \u003d 0;\n        this.field_rn_c_case_28 \u003d null;\n    }\n    Class_rn_c_1.prototype.method_rn_c_a_9 \u003d function (var1, var2) {\n        this.field_rn_c_case_28 \u003d var1;\n        this.field_rn_c_c_27 \u003d var2;\n    };\n    Class_rn_c_1.prototype.method_rn_c_a_10 \u003d function (var1, var2, var3) {\n        this.field_rn_c_void_13 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[0] : 1000 - var1[0];\n        this.field_rn_c_else_14 \u003d var1[1];\n        this.field_rn_c_do_15 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[2] : -var1[2];\n        this.field_rn_c_if_16 \u003d var1[3];\n        this.field_rn_c_g_17 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[4] : 1000 - var1[8];\n        this.field_rn_c_e_18 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[5] : var1[9];\n        this.field_rn_c_byte_19 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[6] : -var1[10];\n        this.field_rn_c_try_20 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[7] : var1[11];\n        this.field_rn_c_int_21 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[8] : 1000 - var1[4];\n        this.field_rn_c_for_22 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[9] : var1[5];\n        this.field_rn_c_d_23 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[10] : -var1[6];\n        this.field_rn_c_b_24 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var1[11] : var1[7];\n        this.field_rn_c_new_25 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var2 : var3;\n        this.field_rn_c_f_26 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2 ? var3 : var2;\n    };\n    Class_rn_c_1.prototype.method_rn_c_a_12 \u003d function (var1) {\n        if (this.field_rn_c_c_27 \u003d\u003d\u003d 1) {\n            switch ((var1)) {\n                case 0:\n                    this.field_rn_c_case_28.method_rn_Slime1P_b_82();\n                    break;\n                case 1:\n                    this.field_rn_c_case_28.method_rn_Slime1P_c_81();\n                    break;\n                case 2:\n                    this.field_rn_c_case_28.method_rn_Slime1P_char_84();\n                    break;\n                case 3:\n                    this.field_rn_c_case_28.method_rn_Slime1P_try_83();\n            }\n        }\n        else if (this.field_rn_c_c_27 \u003d\u003d\u003d 2) {\n            switch ((var1)) {\n                case 0:\n                    this.field_rn_c_case_28.method_rn_Slime1P_e_85();\n                    break;\n                case 1:\n                    this.field_rn_c_case_28.method_rn_Slime1P_j_86();\n                    break;\n                case 2:\n                    this.field_rn_c_case_28.method_rn_Slime1P_long_88();\n                    break;\n                case 3:\n                    this.field_rn_c_case_28.method_rn_Slime1P_else_87();\n            }\n        }\n    };\n    return Class_rn_c_1;\n}());\nClass_rn_c_1.field_rn_c_goto_29 \u003d 0;\nClass_rn_c_1.field_rn_c_char_30 \u003d 1;\nClass_rn_c_1.field_rn_c_long_31 \u003d 2;\nClass_rn_c_1.field_rn_c_a_32 \u003d 3;\nClass_rn_c_1[\"__class\"] \u003d \"Class_rn_c_1\";\nvar Class_rn_g_7 \u003d (function () {\n    function Class_rn_g_7() {\n        this.field_rn_g_do_73 \u003d true;\n        this.field_rn_g_a_74 \u003d true;\n    }\n    Class_rn_g_7.field_rn_g_if_75_$LI$ \u003d function () { if (Class_rn_g_7.field_rn_g_if_75 \u003d\u003d null)\n        Class_rn_g_7.field_rn_g_if_75 \u003d [\u0027r\u0027, \u0027o\u0027, \u0027\u003e\u0027, \u0027\u003c\u0027, \u0027o\u0027, \u0027r\u0027, \u0027z\u0027]; return Class_rn_g_7.field_rn_g_if_75; };\n    ;\n    Class_rn_g_7.method_rn_g_a_65 \u003d function () {\n        return true;\n    };\n    Class_rn_g_7.method_rn_g_a_66 \u003d function (var0, var1) {\n        var var3 \u003d 1000000;\n        try {\n            var var5 \u003d (new ShimmedURL(var0.getCodeBase() + \"highscores.php?min\")).openStream();\n            var var6 \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var5));\n            var3 \u003d ShimmedLong.parseLong(var6.readLine());\n            var6.close();\n            var5.close();\n        }\n        catch (var7) {\n            ShimmedSystem.out.println$java_lang_Object(\"Couldn\\\u0027t connect to server!\\n\" + var7);\n            return false;\n        }\n        ;\n        return var1 \u003e var3;\n    };\n    Class_rn_g_7.method_rn_g_a_67 \u003d function (var0, var1, var3, var5) {\n        try {\n            var var6 \u003d (new ShimmedURL(var0.getCodeBase() + \"submitscore.php?scr\u003d\" + var1 + \"\u0026lev\u003d\" + var3 + \"\u0026nam\u003d\" + var5 + \"\u0026danno\u003d\" + Class_rn_g_7.field_rn_g_if_75_$LI$().join(\u0027\u0027) + \"\u0026chk\u003d\" + Class_rn_g_7.method_rn_g_a_70(Class_rn_g_7.method_rn_g_a_68(Class_rn_g_7.method_rn_g_if_69(var5)), var3, var1))).openStream();\n            var6.close();\n        }\n        catch (var7) {\n            ShimmedSystem.out.println$java_lang_Object(\"Couldn\\\u0027t send high score!\\n\" + var7);\n        }\n        ;\n    };\n    /*private*/ Class_rn_g_7.method_rn_g_a_68 \u003d function (var0) {\n        var var1 \u003d var0.trim();\n        if (var1.length \u003e 20) {\n            var1 \u003d var1.substring(0, 20);\n        }\n        return var1;\n    };\n    /*private*/ Class_rn_g_7.method_rn_g_if_69 \u003d function (var0) {\n        var var1;\n        var var2;\n        for (var2 \u003d new String(var0); (var1 \u003d var2.indexOf(\" \")) \u003e\u003d 0; var2 \u003d var2.substring(0, var1) + var2.substring(var1 + 1)) {\n        }\n        ;\n        return var2;\n    };\n    /*private*/ Class_rn_g_7.method_rn_g_a_70 \u003d function (var0, var1, var3) {\n        var var5 \u003d var3;\n        for (var var7 \u003d 0; Math.floor(var7) \u003c Class_rn_g_7.method_rn_g_a_71(var1) + 1; ++var7) {\n            var5 \u003d Class_rn_g_7.method_rn_g_if_72(var0, var1, var5);\n        }\n        ;\n        return var5;\n    };\n    /*private*/ Class_rn_g_7.method_rn_g_a_71 \u003d function (var0) {\n        return var0 * var0;\n    };\n    /*private*/ Class_rn_g_7.method_rn_g_if_72 \u003d function (var0, var1, var3) {\n        var var5 \u003d (var0).split(\u0027\u0027);\n        var var6 \u003d 0;\n        for (var var8 \u003d 0; var8 \u003c var5.length; ++var8) {\n            var6 +\u003d ((var5[var8]).charCodeAt(0) + var1) * var3 % (var1 + 6 + Math.floor(var8));\n        }\n        ;\n        return var6;\n    };\n    return Class_rn_g_7;\n}());\nClass_rn_g_7[\"__class\"] \u003d \"Class_rn_g_7\";\nvar Class_rn_h_8 \u003d (function () {\n    function Class_rn_h_8(var1, var2, var3, var4, var5, var6) {\n        var var7 \u003d (function (dims) { var allocate \u003d function (dims) { if (dims.length \u003d\u003d 0) {\n            return 0;\n        }\n        else {\n            var array \u003d [];\n            for (var i \u003d 0; i \u003c dims[0]; i++) {\n                array.push(allocate(dims.slice(1)));\n            }\n            return array;\n        } }; return allocate(dims); })([var1.length, var1[0].length]);\n        for (var var8 \u003d 0; var8 \u003c var1.length; ++var8) {\n            for (var var9 \u003d 0; var9 \u003c var1[0].length; ++var9) {\n                var7[var8][var9] \u003d var1[var8][var9];\n            }\n            ;\n        }\n        ;\n        try {\n            var var17 \u003d var6.getCodeBase();\n            var var10 \u003d \"\" + var2 + \":\" + var3 + \":\" + var4 + \":\" + var5;\n            var var11 \u003d new ShimmedURL(var17 + \"newreplay.php?data\u003d\" + var10);\n            var var12 \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var11.openStream()));\n            var var13 \u003d var12.readLine().trim();\n            var11 \u003d new ShimmedURL(var17 + \"savefield.php?id\u003d\" + var13 + \"\u0026field\u003dinitial\u0026data\u003d\" + var10);\n            var11.openStream();\n            for (var var14 \u003d 0; var14 \u003c 6; ++var14) {\n                var10 \u003d \"id\u003d\" + var13 + \"\u0026field\u003d\";\n                switch ((var14)) {\n                    case 0:\n                        var10 \u003d var10 + \"p1x\";\n                        break;\n                    case 1:\n                        var10 \u003d var10 + \"p1y\";\n                        break;\n                    case 2:\n                        var10 \u003d var10 + \"p2x\";\n                        break;\n                    case 3:\n                        var10 \u003d var10 + \"p2y\";\n                        break;\n                    case 4:\n                        var10 \u003d var10 + \"ballX\";\n                        break;\n                    case 5:\n                        var10 \u003d var10 + \"ballY\";\n                }\n                var10 \u003d var10 + \"\u0026data\u003d\" + var7[0][var14];\n                for (var var15 \u003d 1; var15 \u003c var1.length; ++var15) {\n                    var10 \u003d var10 + \":\" + (var7[var15][var14] - var7[var15 - 1][var14]);\n                }\n                ;\n                var11 \u003d new ShimmedURL(var17 + \"savefield.php?\" + var10);\n                var11.openStream();\n            }\n            ;\n        }\n        catch (var16) {\n        }\n        ;\n    }\n    return Class_rn_h_8;\n}());\nClass_rn_h_8[\"__class\"] \u003d \"Class_rn_h_8\";\nvar Slime1P \u003d (function (_super) {\n    __extends(Slime1P, _super);\n    function Slime1P() {\n        var _this \u003d _super.call(this) || this;\n        /*private*/ _this.pointsToWin \u003d 6;\n        /*private*/ _this.aiMode \u003d 0;\n        /*private*/ _this.boundsP1select \u003d [];\n        /*private*/ _this.boundsP2select \u003d [];\n        /*private*/ _this.oneplayer \u003d false;\n        /*private*/ _this.ballRad \u003d 25;\n        /*private*/ _this.buffered \u003d false;\n        _this.nWidth \u003d 0;\n        _this.nHeight \u003d 0;\n        _this.p1X \u003d 0;\n        _this.p1Y \u003d 0;\n        _this.p2X \u003d 0;\n        _this.p2Y \u003d 0;\n        _this.p1Diam \u003d 0;\n        _this.p2Diam \u003d 0;\n        _this.p1Col \u003d 0;\n        _this.p2Col \u003d 0;\n        _this.p1OldX \u003d 0;\n        _this.p1OldY \u003d 0;\n        _this.p2OldX \u003d 0;\n        _this.p2OldY \u003d 0;\n        _this.p1XV \u003d 0;\n        _this.p1YV \u003d 0;\n        _this.p2XV \u003d 0;\n        _this.p2YV \u003d 0;\n        _this.ballX \u003d 0;\n        _this.ballY \u003d 0;\n        _this.ballVX \u003d 0;\n        _this.ballVY \u003d 0;\n        _this.ballOldX \u003d 0;\n        _this.ballOldY \u003d 0;\n        _this.screen \u003d null;\n        _this.promptMsg \u003d null;\n        _this.mousePressed \u003d false;\n        _this.fInPlay \u003d false;\n        _this.fP1Fire \u003d false;\n        _this.fP2Fire \u003d false;\n        _this.superFlash \u003d false;\n        _this.fP1Touched \u003d false;\n        _this.fP2Touched \u003d false;\n        _this.fP1Touches \u003d 0;\n        _this.fP2Touches \u003d 0;\n        _this.fP1TouchesTot \u003d 0;\n        _this.fP2TouchesTot \u003d 0;\n        _this.fP1Clangers \u003d 0;\n        _this.fP2Clangers \u003d 0;\n        _this.fP1Aces \u003d 0;\n        _this.fP2Aces \u003d 0;\n        _this.fP1Winners \u003d 0;\n        _this.fP2Winners \u003d 0;\n        _this.fP1PointsWon \u003d 0;\n        _this.fP2PointsWon \u003d 0;\n        _this.fP1HitStill \u003d false;\n        _this.fP2HitStill \u003d false;\n        _this.fP1Frames \u003d 0;\n        _this.fP2Frames \u003d 0;\n        _this.fP1Super \u003d 0;\n        _this.fP2Super \u003d 0;\n        _this.fServerMoved \u003d false;\n        _this.hitNetSinceTouched \u003d false;\n        _this.gameThread \u003d null;\n        _this.fEndGame \u003d false;\n        _this.startTime \u003d 0;\n        _this.gameTime \u003d 0;\n        _this.crossedNetTime \u003d 0;\n        _this.pausedTime \u003d 0;\n        _this.paused \u003d false;\n        _this.scoringRun \u003d 0;\n        _this.oldScoringRun \u003d 0;\n        _this.slimeColText \u003d null;\n        _this.slimeColours \u003d null;\n        _this.loserText1 \u003d null;\n        _this.loserText2 \u003d null;\n        _this.SKY_COL \u003d null;\n        _this.COURT_COL \u003d null;\n        _this.BALL_COL \u003d null;\n        _this.p1Run \u003d 0;\n        _this.p2Run \u003d 0;\n        _this.p1Jump \u003d 0;\n        _this.p2Jump \u003d 0;\n        _this.field_rn_Slime1P_ai_109 \u003d null;\n        _this.gameScore \u003d 0;\n        _this.gameOver \u003d false;\n        _this.buffer \u003d null;\n        _this.redrawRegions \u003d null;\n        _this.replayData \u003d null;\n        _this.replayIndex \u003d 0;\n        _this.replayStart \u003d 0;\n        _this.replaying \u003d false;\n        return _this;\n    }\n    Slime1P.prototype.init \u003d function () {\n        var var1 \u003d this.getDocumentBase().getHost();\n        if (!(function (o1, o2) { if (o1 \u0026\u0026 o1.equals) {\n            return o1.equals(o2);\n        }\n        else {\n            return o1 \u003d\u003d\u003d o2;\n        } })(var1, \"oneslime.net\")) {\n            try {\n                this.getAppletContext().showDocument$ShimmedURL$java_lang_String(new ShimmedURL(\"http://oneslime.net/\"), \"_self\");\n            }\n            catch (var5) {\n            }\n            ;\n            throw Object.defineProperty(new Error(\"Couldn\\\u0027t initialise - server data missing.\"), \u0027__classes\u0027, { configurable: true, value: [\u0027java.lang.Throwable\u0027, \u0027java.lang.Object\u0027, \u0027java.lang.RuntimeException\u0027, \u0027java.lang.Exception\u0027] });\n        }\n        else {\n            ShimmedSystem.out.println$java_lang_Object(\"One Slime: http://oneslime.net/\");\n            new Class_rn_e_3();\n            new Class_rn_d_4();\n            new Class_rn_b_5();\n            new Class_rn_a_6();\n            this.nWidth \u003d this.size().width;\n            this.nHeight \u003d this.size().height;\n            this.fInPlay \u003d this.fEndGame \u003d false;\n            this.promptMsg \u003d \"Click the mouse to play!\";\n            this.buffer \u003d new ShimmedBufferedImage(this.nWidth, this.nHeight, 1);\n            this.fInPlay \u003d this.fEndGame \u003d false;\n            this.promptMsg \u003d \"Click the mouse to play!\";\n            this.screen \u003d this.buffer.getGraphics();\n            this.screen.setFont(new ShimmedFont(this.screen.getFont().getName(), 1, 15));\n            this.slimeColText \u003d [\"Inferior Human Controlled Slime \", \"The Pathetic White Slime \", \"Angry Red Slimons \", \"The Slime Master \", \"Psycho Slime \", \"The Big Blue Boss \"];\n            this.slimeColours \u003d [ShimmedColor.yellow, ShimmedColor.white, ShimmedColor.red, ShimmedColor.black, ShimmedColor.blue, ShimmedColor.blue];\n            this.loserText1 \u003d [\"You are a loser!\", this.slimeColText[2] + \"gives you the gong!\", this.slimeColText[3] + \"says \\\"You are seriously inept.\\\"\", this.slimeColText[4] + \"laughs at the pathetic slow opposition.\", this.slimeColText[5] + \"devours you!\"];\n            this.loserText2 \u003d [\"Better luck next time.\", \"So who has the red face bombing out on level 2, huh?\", \"Congrats on reaching level 3.\", \"Congrats on reaching level 4!\", \"Yum.\"];\n            this.p1Col \u003d 0;\n            this.p1Run \u003d 8;\n            this.p1Jump \u003d 31;\n            this.p1Diam \u003d 100;\n            this.gameScore \u003d 0;\n            this.gameOver \u003d true;\n            this.paused \u003d false;\n            this.method_rn_Slime1P_new_77();\n            this.method_rn_Slime1P_for_80();\n            this.redrawRegions \u003d new ShimmedVector(0);\n            this.method_rn_Slime1P_void_78();\n            this.repaint();\n            this.replayData \u003d (function (dims) { var allocate \u003d function (dims) { if (dims.length \u003d\u003d 0) {\n                return 0;\n            }\n            else {\n                var array \u003d [];\n                for (var i \u003d 0; i \u003c dims[0]; i++) {\n                    array.push(allocate(dims.slice(1)));\n                }\n                return array;\n            } }; return allocate(dims); })([1000, 8]);\n            try {\n                ShimmedSystem.out.println$java_lang_Object(this.getCodeBase());\n                var var3 \u003d (new ShimmedURL(this.getCodeBase() + \"bler\")).openStream();\n                var var4 \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var3));\n                if (!(function (o1, o2) { if (o1 \u0026\u0026 o1.equals) {\n                    return o1.equals(o2);\n                }\n                else {\n                    return o1 \u003d\u003d\u003d o2;\n                } })(var4.readLine(), \"bler\")) {\n                    var4.close();\n                    var3.close();\n                    throw Object.defineProperty(new Error(\"Couldn\\\u0027t connect to server!\"), \u0027__classes\u0027, { configurable: true, value: [\u0027java.lang.Throwable\u0027, \u0027java.lang.Object\u0027, \u0027java.lang.Exception\u0027] });\n                }\n                var4.close();\n                var3.close();\n            }\n            catch (var6) {\n                ShimmedSystem.out.println$java_lang_Object(\"Error...\\n\" + var6);\n                new ServerCheck();\n            }\n            ;\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_new_77 \u003d function () {\n        this.fP1PointsWon \u003d this.fP2PointsWon \u003d 0;\n        this.p1Diam \u003d this.p2Diam \u003d 100;\n        this.p2Run \u003d 8;\n        this.p2Jump \u003d 31;\n        this.fP2Fire \u003d false;\n        if (!this.oneplayer) {\n            this.aiMode \u003d 0;\n        }\n        switch ((this.aiMode)) {\n            case 0:\n                this.field_rn_Slime1P_ai_109 \u003d new Class_rn_d_4();\n                this.fP2Fire \u003d false;\n                this.SKY_COL \u003d ShimmedColor.blue;\n                this.COURT_COL \u003d ShimmedColor.gray;\n                this.BALL_COL \u003d ShimmedColor.yellow;\n                break;\n            case 1:\n                this.field_rn_Slime1P_ai_109 \u003d new Class_rn_e_3();\n                this.fP2Fire \u003d false;\n                this.SKY_COL \u003d new ShimmedColor(30, 80, 0);\n                this.COURT_COL \u003d ShimmedColor.darkGray;\n                this.BALL_COL \u003d new ShimmedColor(128, 128, 255);\n                break;\n            case 2:\n                this.field_rn_Slime1P_ai_109 \u003d new Class_rn_b_5();\n                this.fP2Fire \u003d false;\n                this.SKY_COL \u003d new ShimmedColor(98, 57, 57);\n                this.COURT_COL \u003d new ShimmedColor(0, 168, 0);\n                this.BALL_COL \u003d ShimmedColor.white;\n                break;\n            case 3:\n                this.field_rn_Slime1P_ai_109 \u003d new Class_rn_b_5();\n                this.fP2Fire \u003d true;\n                this.SKY_COL \u003d ShimmedColor.black;\n                this.COURT_COL \u003d ShimmedColor.red;\n                this.BALL_COL \u003d ShimmedColor.yellow;\n                break;\n            case 4:\n                this.field_rn_Slime1P_ai_109 \u003d new Class_rn_a_6();\n                this.p2Diam \u003d 150;\n                this.fP2Fire \u003d false;\n                this.SKY_COL \u003d ShimmedColor.black;\n                this.COURT_COL \u003d ShimmedColor.red;\n                this.BALL_COL \u003d ShimmedColor.yellow;\n        }\n        if (this.oneplayer) {\n            this.p2Col \u003d this.aiMode + 1;\n        }\n        else {\n            this.p2Col \u003d this.p1Col;\n        }\n        this.field_rn_Slime1P_ai_109.method_rn_c_a_9(this, 2);\n    };\n    Slime1P.prototype.update \u003d function (var1) {\n        if (this.buffered) {\n            var1.drawImage(this.buffer, 0, 0, null);\n        }\n        else {\n            this.method_rn_Slime1P_void_78();\n        }\n        this.redrawRegions \u003d new ShimmedVector(0);\n    };\n    Slime1P.prototype.paint \u003d function (var1) {\n        this.update(var1);\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_void_78 \u003d function () {\n        var var1;\n        if (this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var1 \u003d this.getGraphics();\n        }\n        this.nWidth \u003d this.size().width;\n        this.nHeight \u003d this.size().height;\n        var1.setColor(this.SKY_COL);\n        var1.fillRect(0, 0, this.nWidth, (4 * this.nHeight / 5 | 0));\n        var1.setColor(this.COURT_COL);\n        var1.fillRect(0, (4 * this.nHeight / 5 | 0), this.nWidth, (this.nHeight / 5 | 0));\n        var1.setColor(ShimmedColor.white);\n        var1.fillRect((this.nWidth / 2 | 0) - 2, (7 * this.nHeight / 10 | 0), 4, (this.nHeight / 10 | 0) + 5);\n        var var2 \u003d var1.getFontMetrics();\n        var var3;\n        if (this.gameOver) {\n            this.screen.setColor(ShimmedColor.white);\n            var var4 \u003d var1.getFont();\n            var1.setFont(this.screen.getFont());\n            var3 \u003d \"Slime Volleyball: One Slime\";\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (this.screen.getFontMetrics().stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) - var2.getHeight());\n            var1.setFont(var4);\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Written by Quin Pendragon and Daniel Wedge\";\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + var2.getHeight() * 2);\n            var3 \u003d \"http://oneslime.net/\";\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + (var2.getHeight() * 7 / 2 | 0));\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Click here to start a one player game!\";\n            this.boundsP1select[0] \u003d (this.nWidth / 4 | 0) - (var2.stringWidth(var3) / 2 | 0) - 10;\n            this.boundsP1select[1] \u003d (this.nHeight / 3 | 0) + var2.getHeight() * 5;\n            this.boundsP1select[2] \u003d this.boundsP1select[0] + var2.stringWidth(var3) + 20;\n            this.boundsP1select[3] \u003d this.boundsP1select[1] + var2.getHeight() * 3;\n            var1.fillRect((this.nWidth / 4 | 0) - (var2.stringWidth(var3) / 2 | 0) - 10, (this.nHeight / 3 | 0) + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);\n            var1.setColor(this.SKY_COL);\n            if (this.aiMode !\u003d\u003d 0) {\n                var1.drawString(var3, (this.nWidth / 4 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + (var2.getHeight() * 13 / 2 | 0));\n                var3 \u003d \"or press C to continue...\";\n                var1.drawString(var3, (this.nWidth / 4 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + (var2.getHeight() * 15 / 2 | 0));\n            }\n            else {\n                var1.drawString(var3, (this.nWidth / 4 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + var2.getHeight() * 7);\n            }\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Click here to start a two player game!\";\n            var1.fillRect((this.nWidth * 3 / 4 | 0) - (var2.stringWidth(var3) / 2 | 0) - 10, (this.nHeight / 3 | 0) + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);\n            var1.setColor(this.SKY_COL);\n            var1.drawString(var3, (this.nWidth * 3 / 4 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0) + var2.getHeight() * 7);\n            this.boundsP2select[0] \u003d (this.nWidth * 3 / 4 | 0) - (var2.stringWidth(var3) / 2 | 0) - 10;\n            this.boundsP2select[1] \u003d (this.nHeight / 3 | 0) + var2.getHeight() * 5;\n            this.boundsP2select[2] \u003d this.boundsP2select[0] + var2.stringWidth(var3) + 20;\n            this.boundsP2select[3] \u003d this.boundsP2select[1] + var2.getHeight() * 3;\n            if (!this.replaying) {\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_byte_95();\n            }\n        }\n        else if (!this.fInPlay) {\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Your score: \" + this.gameScore;\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 2 | 0) - var2.getHeight());\n            if (this.fP1PointsWon \u003d\u003d\u003d 6) {\n                var3 \u003d \"Level bonus: \" + (1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon) | 0) * this.method_rn_Slime1P_case_108() + \" points\";\n                var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 2 | 0) + var2.getHeight());\n                var3 \u003d \"Time bonus: \" + Math.floor((this.gameTime \u003c 300000 ? 300000 - this.gameTime : 0) / 1000) * Math.floor(this.method_rn_Slime1P_case_108()) + \" points\";\n                var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 2 | 0) + var2.getHeight() * 2);\n                if (this.fP2PointsWon \u003d\u003d\u003d 0) {\n                    var3 \u003d \"Flawless Victory: \" + 1000 * this.method_rn_Slime1P_case_108() + \" points\";\n                    var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 2 | 0) + var2.getHeight() * 3);\n                }\n            }\n            var1.setFont(this.screen.getFont());\n            var2 \u003d this.screen.getFontMetrics();\n            var3 \u003d \"Level \" + (this.aiMode + 1) + \" clear!\";\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight / 3 | 0));\n            var3 \u003d \"Click the mouse to continue...\";\n            var1.drawString(var3, (this.nWidth / 2 | 0) - (var2.stringWidth(var3) / 2 | 0), (this.nHeight * 4 / 5 | 0) + var2.getHeight() + 10);\n            this.method_rn_Slime1P_goto_93();\n        }\n        else {\n            this.method_rn_Slime1P_goto_93();\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_do_79 \u003d function () {\n        if (!this.buffered) {\n            this.redrawRegions.removeAllElements();\n        }\n        else {\n            for (var var1 \u003d 0; var1 \u003c this.redrawRegions.size(); ++var1) {\n                var var2 \u003d this.redrawRegions.get(var1);\n                var var3 \u003d var2[0];\n                var var4 \u003d var2[1];\n                var var5 \u003d var2[2];\n                var var6 \u003d var2[3];\n                if (var3 \u003c 0) {\n                    var3 \u003d 0;\n                }\n                if (var5 \u003e this.nWidth) {\n                    var5 \u003d this.nWidth - 1;\n                }\n                if (var4 \u003c 0) {\n                    var4 \u003d 0;\n                }\n                if (var6 \u003e this.nHeight) {\n                    var6 \u003d this.nHeight - 1;\n                }\n                var var7 \u003d var5 - var3;\n                var var8 \u003d var6 - var4;\n                if (var7 \u003e 0 \u0026\u0026 var8 \u003e 0) {\n                    var var9 \u003d this.buffer.getSubimage(var3, var4, var7, var8);\n                    this.getGraphics().drawImage(var9, var3, var4, null);\n                }\n            }\n            ;\n            this.redrawRegions.removeAllElements();\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_for_80 \u003d function () {\n        this.p1X \u003d this.p1OldX \u003d 200;\n        this.p1Y \u003d this.p1OldY \u003d 0;\n        this.p2X \u003d this.p2OldX \u003d 800;\n        this.p2Y \u003d this.p2OldY \u003d 0;\n        this.p1XV \u003d 0;\n        this.p1YV \u003d 0;\n        this.p2XV \u003d 0;\n        this.p2YV \u003d 0;\n        this.ballX \u003d this.ballOldX \u003d 200;\n        this.ballY \u003d this.ballOldY \u003d 400;\n        this.ballVX \u003d 0;\n        this.ballVY \u003d 0;\n        this.hitNetSinceTouched \u003d false;\n        this.fServerMoved \u003d this.fP1Touched \u003d this.fP2Touched \u003d false;\n        this.fP1Touches \u003d this.fP2Touches \u003d 0;\n        this.repaint();\n        this.promptMsg \u003d \"\";\n        this.replayStart \u003d this.replayIndex \u003d 0;\n        this.replaying \u003d false;\n    };\n    Slime1P.prototype.handleEvent \u003d function (var1) {\n        switch ((var1.id)) {\n            case 401:\n            case 403:\n                switch ((var1.key)) {\n                    case 32:\n                        this.mousePressed \u003d true;\n                        return false;\n                    case 65:\n                    case 97:\n                        this.method_rn_Slime1P_c_81();\n                        return false;\n                    case 66:\n                    case 98:\n                        this.buffered \u003d !this.buffered;\n                        this.method_rn_Slime1P_void_78();\n                        return false;\n                    case 67:\n                    case 99:\n                        if (this.gameOver) {\n                            this.fEndGame \u003d false;\n                            this.fInPlay \u003d true;\n                            this.promptMsg \u003d \"\";\n                            this.gameOver \u003d false;\n                            this.gameScore \u003d 0;\n                            this.method_rn_Slime1P_for_80();\n                            this.method_rn_Slime1P_new_77();\n                            this.repaint();\n                            this.gameThread \u003d new ShimmedThread(this);\n                            this.gameThread.start();\n                        }\n                        return false;\n                    case 68:\n                    case 100:\n                        this.method_rn_Slime1P_b_82();\n                        return false;\n                    case 73:\n                    case 105:\n                        if (!this.oneplayer) {\n                            this.method_rn_Slime1P_long_88();\n                        }\n                        return false;\n                    case 74:\n                    case 106:\n                        if (!this.oneplayer) {\n                            this.method_rn_Slime1P_e_85();\n                        }\n                        return false;\n                    case 75:\n                    case 107:\n                        if (this.oneplayer) {\n                            this.fP1PointsWon \u003d this.fP2PointsWon \u003d 0;\n                            this.fP1Fire \u003d false;\n                            this.gameScore \u003d 0;\n                            this.method_rn_Slime1P_new_77();\n                            this.method_rn_Slime1P_for_80();\n                            this.method_rn_Slime1P_void_78();\n                            this.repaint();\n                            this.startTime \u003d ShimmedSystem.currentTimeMillis();\n                            this.paused \u003d false;\n                        }\n                        return false;\n                    case 76:\n                    case 108:\n                        if (!this.oneplayer) {\n                            this.method_rn_Slime1P_j_86();\n                        }\n                        return false;\n                    case 79:\n                    case 111:\n                        if (!this.paused) {\n                            this.pausedTime \u003d ShimmedSystem.currentTimeMillis();\n                            try {\n                                this.getAppletContext().showDocument$ShimmedURL$java_lang_String(new ShimmedURL(\"http://oneslime.net/boss/launch.html\"), \"_blank\");\n                            }\n                            catch (var3) {\n                                ShimmedSystem.out.println$java_lang_Object(var3);\n                            }\n                            ;\n                            this.paused \u003d true;\n                        }\n                        else {\n                            this.startTime +\u003d ShimmedSystem.currentTimeMillis() - this.pausedTime;\n                            this.paused \u003d false;\n                        }\n                        return false;\n                    case 80:\n                    case 112:\n                        if (!this.paused) {\n                            this.pausedTime \u003d ShimmedSystem.currentTimeMillis();\n                            this.paused \u003d true;\n                        }\n                        else {\n                            this.startTime +\u003d ShimmedSystem.currentTimeMillis() - this.pausedTime;\n                            this.paused \u003d false;\n                        }\n                        return false;\n                    case 87:\n                    case 119:\n                        this.method_rn_Slime1P_char_84();\n                        return false;\n                    case 1004:\n                        if (this.oneplayer) {\n                            this.method_rn_Slime1P_char_84();\n                        }\n                        else {\n                            this.method_rn_Slime1P_long_88();\n                        }\n                        return false;\n                    case 1006:\n                        if (this.oneplayer) {\n                            this.method_rn_Slime1P_c_81();\n                        }\n                        else {\n                            this.method_rn_Slime1P_e_85();\n                        }\n                        return false;\n                    case 1007:\n                        if (this.oneplayer) {\n                            this.method_rn_Slime1P_b_82();\n                        }\n                        else {\n                            this.method_rn_Slime1P_j_86();\n                        }\n                        return false;\n                    default:\n                        return false;\n                }\n            case 402:\n            case 404:\n                switch ((var1.key)) {\n                    case 65:\n                    case 97:\n                        if (this.p1XV \u003c 0) {\n                            this.method_rn_Slime1P_try_83();\n                        }\n                        return false;\n                    case 68:\n                    case 100:\n                        if (this.p1XV \u003e 0) {\n                            this.method_rn_Slime1P_try_83();\n                        }\n                        return false;\n                    case 74:\n                    case 106:\n                        if (this.p2XV \u003c 0) {\n                            this.method_rn_Slime1P_else_87();\n                        }\n                        return false;\n                    case 76:\n                    case 108:\n                        if (this.p2XV \u003e 0) {\n                            this.method_rn_Slime1P_else_87();\n                        }\n                        return false;\n                    case 1006:\n                        if (this.oneplayer \u0026\u0026 this.p1XV \u003c 0) {\n                            this.method_rn_Slime1P_try_83();\n                        }\n                        else if (!this.oneplayer \u0026\u0026 this.p2XV \u003c 0) {\n                            this.method_rn_Slime1P_else_87();\n                            return false;\n                        }\n                        return false;\n                    case 1007:\n                        if (this.oneplayer \u0026\u0026 this.p1XV \u003e 0) {\n                            this.method_rn_Slime1P_try_83();\n                        }\n                        else if (!this.oneplayer \u0026\u0026 this.p2XV \u003e 0) {\n                            this.method_rn_Slime1P_else_87();\n                            return false;\n                        }\n                        return false;\n                    default:\n                        return false;\n                }\n            case 501:\n                if (this.gameOver) {\n                    if (var1.x \u003e this.boundsP1select[0] \u0026\u0026 var1.y \u003e this.boundsP1select[1] \u0026\u0026 var1.x \u003c this.boundsP1select[2] \u0026\u0026 var1.y \u003c this.boundsP1select[3]) {\n                        this.oneplayer \u003d true;\n                    }\n                    else {\n                        if (var1.x \u003c\u003d this.boundsP2select[0] || var1.y \u003c\u003d this.boundsP2select[1] || var1.x \u003e\u003d this.boundsP2select[2] || var1.y \u003e\u003d this.boundsP2select[3]) {\n                            break;\n                        }\n                        this.oneplayer \u003d false;\n                    }\n                }\n                this.mousePressed \u003d true;\n                if (!this.fInPlay) {\n                    this.fEndGame \u003d false;\n                    this.fInPlay \u003d true;\n                    this.promptMsg \u003d \"\";\n                    if (this.gameScore !\u003d\u003d 0) {\n                        if (this.aiMode \u003c 5) {\n                            ++this.aiMode;\n                        }\n                        else {\n                            this.aiMode \u003d 0;\n                        }\n                    }\n                    if (this.gameOver) {\n                        this.aiMode \u003d 0;\n                        this.gameOver \u003d false;\n                        this.gameScore \u003d 0;\n                    }\n                    this.method_rn_Slime1P_new_77();\n                    this.repaint();\n                    this.ballX \u003d 200;\n                    this.gameThread \u003d new ShimmedThread(this);\n                    this.gameThread.start();\n                }\n                break;\n            case 503:\n                this.showStatus(\"Slime Volleyball: One Slime: http://oneslime.net/\");\n        }\n        return false;\n    };\n    Slime1P.prototype.method_rn_Slime1P_c_81 \u003d function () {\n        this.p1XV \u003d this.fP1Fire ? -2 * this.p1Run : -this.p1Run;\n        if (this.p1X \u003d\u003d\u003d 200 \u0026\u0026 this.ballX \u003d\u003d\u003d 200 \u0026\u0026 !this.fP2Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    };\n    Slime1P.prototype.method_rn_Slime1P_b_82 \u003d function () {\n        this.p1XV \u003d this.fP1Fire ? 2 * this.p1Run : this.p1Run;\n        if (this.p1X \u003d\u003d\u003d 200 \u0026\u0026 this.ballX \u003d\u003d\u003d 200 \u0026\u0026 !this.fP2Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    };\n    Slime1P.prototype.method_rn_Slime1P_try_83 \u003d function () {\n        this.p1XV \u003d 0;\n    };\n    Slime1P.prototype.method_rn_Slime1P_char_84 \u003d function () {\n        if (this.p1Y \u003d\u003d\u003d 0) {\n            this.p1YV \u003d this.fP1Fire ? (45 * this.p1Jump / 31 | 0) : this.p1Jump;\n        }\n    };\n    Slime1P.prototype.method_rn_Slime1P_e_85 \u003d function () {\n        this.p2XV \u003d this.fP2Fire ? -2 * this.p2Run : -this.p2Run;\n        if (this.p2X \u003d\u003d\u003d 800 \u0026\u0026 this.ballX \u003d\u003d\u003d 800 \u0026\u0026 !this.fP1Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    };\n    Slime1P.prototype.method_rn_Slime1P_j_86 \u003d function () {\n        this.p2XV \u003d this.fP2Fire ? 2 * this.p2Run : this.p2Run;\n        if (this.p2X \u003d\u003d\u003d 800 \u0026\u0026 this.ballX \u003d\u003d\u003d 800 \u0026\u0026 !this.fP1Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    };\n    Slime1P.prototype.method_rn_Slime1P_else_87 \u003d function () {\n        this.p2XV \u003d 0;\n    };\n    Slime1P.prototype.method_rn_Slime1P_long_88 \u003d function () {\n        if (this.p2Y \u003d\u003d\u003d 0) {\n            this.p2YV \u003d this.fP2Fire ? (45 * this.p2Jump / 31 | 0) : this.p2Jump;\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_d_89 \u003d function () {\n        if (this.oneplayer) {\n            var var1 \u003d [this.ballX, this.ballY, this.ballVX, this.ballVY, this.p1X, this.p1Y, this.p1XV, this.p1YV, this.p2X, this.p2Y, this.p2XV, this.p2YV];\n            this.field_rn_Slime1P_ai_109.method_rn_c_a_10(var1, this.fP1Fire, this.fP2Fire);\n            this.field_rn_Slime1P_ai_109.method_rn_c_a_11();\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_i_90 \u003d function () {\n        this.method_rn_Slime1P_d_89();\n        this.p1X +\u003d this.p1XV;\n        if (this.p1X \u003c (this.p1Diam / 2 | 0)) {\n            this.p1X \u003d (this.p1Diam / 2 | 0);\n        }\n        if (this.p1X \u003e 495 - (this.p1Diam / 2 | 0)) {\n            this.p1X \u003d 495 - (this.p1Diam / 2 | 0);\n        }\n        if (this.p1YV !\u003d\u003d 0) {\n            this.p1Y +\u003d this.p1YV -\u003d this.fP1Fire ? 4 : 2;\n            if (this.p1Y \u003c 0) {\n                this.p1Y \u003d 0;\n                this.p1YV \u003d 0;\n            }\n        }\n        this.p2X +\u003d this.p2XV;\n        if (this.p2X \u003e 1000 - (this.p2Diam / 2 | 0)) {\n            this.p2X \u003d 1000 - (this.p2Diam / 2 | 0);\n        }\n        if (this.p2X \u003c 505 + (this.p2Diam / 2 | 0)) {\n            this.p2X \u003d 505 + (this.p2Diam / 2 | 0);\n        }\n        if (this.p2YV !\u003d\u003d 0) {\n            this.p2Y +\u003d this.p2YV -\u003d this.fP2Fire ? 4 : 2;\n            if (this.p2Y \u003c 0) {\n                this.p2Y \u003d 0;\n                this.p2YV \u003d 0;\n            }\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_if_91 \u003d function () {\n        var var1 \u003d [];\n        var var2;\n        if (this.buffered) {\n            var2 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var2 \u003d this.getGraphics();\n        }\n        var var3 \u003d 5;\n        var var4 \u003d ((this.ballRad + var3) * this.nHeight / 1000 | 0);\n        var var5 \u003d (this.ballOldX * this.nWidth / 1000 | 0);\n        var var6 \u003d (4 * this.nHeight / 5 | 0) - (this.ballOldY * this.nHeight / 1000 | 0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var5 - var4, var6 - var4, 2 * var4, 2 * var4);\n        var var7 \u003d var5;\n        var var8 \u003d var6;\n        this.superFlash \u003d !this.superFlash;\n        var var9 \u003d (this.nWidth * this.p1Diam / 1000 | 0);\n        var var10 \u003d (this.nHeight * this.p1Diam / 1000 | 0);\n        var var11 \u003d (this.p1OldX * this.nWidth / 1000 | 0) - (var9 / 2 | 0);\n        var var12 \u003d (4 * this.nHeight / 5 | 0) - var10 - (this.p1OldY * this.nHeight / 1000 | 0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var11, var12, var9, var10);\n        var1[0] \u003d var11;\n        var1[1] \u003d var12;\n        var1[2] \u003d var11 + var9;\n        var1[3] \u003d var12 + var10;\n        var9 \u003d (this.nWidth * this.p1Diam / 1000 | 0);\n        var10 \u003d (this.nHeight * this.p1Diam / 1000 | 0);\n        var11 \u003d (this.p1X * this.nWidth / 1000 | 0) - (var9 / 2 | 0);\n        var12 \u003d (4 * this.nHeight / 5 | 0) - var10 - (this.p1Y * this.nHeight / 1000 | 0);\n        var2.setColor(this.fP1Fire \u0026\u0026 this.superFlash ? ShimmedColor.white : this.slimeColours[this.p1Col]);\n        var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);\n        if (var11 \u003c var1[0]) {\n            var1[0] \u003d var11;\n        }\n        if (var12 \u003c var1[1]) {\n            var1[1] \u003d var12;\n        }\n        if (var11 + var9 \u003e var1[2]) {\n            var1[2] \u003d var11 + var9;\n        }\n        if (var12 + var10 \u003e var1[3]) {\n            var1[3] \u003d var12 + var10;\n        }\n        this.redrawRegions.add(var1);\n        var var15 \u003d this.p1X + (38 * this.p1Diam / 100 | 0);\n        var var16 \u003d this.p1Y - (60 * this.p1Diam / 100 | 0);\n        var11 \u003d (var15 * this.nWidth / 1000 | 0);\n        var12 \u003d (4 * this.nHeight / 5 | 0) - var10 - (var16 * this.nHeight / 1000 | 0);\n        var var17 \u003d var11 - var5;\n        var var18 \u003d var12 - var6;\n        var var19 \u003d (Math.sqrt((var17 * var17 + var18 * var18)) | 0);\n        var var20 \u003d ((this.nWidth / 50 | 0) * this.p1Diam / 100 | 0);\n        var var21 \u003d ((this.nHeight / 25 | 0) * this.p1Diam / 100 | 0);\n        var2.setColor(ShimmedColor.white);\n        var2.fillOval(var11 - var20, var12 - var21, var20, var21);\n        var2.setColor(ShimmedColor.black);\n        var2.fillOval(var11 - (4 * var17 / var19 | 0) - (3 * var20 / 4 | 0), var12 - (4 * var18 / var19 | 0) - (3 * var21 / 4 | 0), (var20 / 2 | 0), (var21 / 2 | 0));\n        var9 \u003d (this.nWidth * this.p2Diam / 1000 | 0);\n        var10 \u003d (this.nHeight * this.p2Diam / 1000 | 0);\n        var11 \u003d (this.p2OldX * this.nWidth / 1000 | 0) - (var9 / 2 | 0);\n        var12 \u003d (4 * this.nHeight / 5 | 0) - var10 - (this.p2OldY * this.nHeight / 1000 | 0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var11, var12, var9, var10);\n        var1 \u003d [var11, var12, var11 + var9, var12 + var10];\n        var9 \u003d (this.nWidth * this.p2Diam / 1000 | 0);\n        var10 \u003d (this.nHeight * this.p2Diam / 1000 | 0);\n        var11 \u003d (this.p2X * this.nWidth / 1000 | 0) - (var9 / 2 | 0);\n        var12 \u003d (4 * this.nHeight / 5 | 0) - (this.p2Diam * this.nHeight / 1000 | 0) - (this.p2Y * this.nHeight / 1000 | 0);\n        var2.setColor(this.fP2Fire \u0026\u0026 this.superFlash ? ShimmedColor.white : this.slimeColours[this.p2Col]);\n        if (var11 \u003c var1[0]) {\n            var1[0] \u003d var11;\n        }\n        if (var12 \u003c var1[1]) {\n            var1[1] \u003d var12;\n        }\n        if (var11 + var9 \u003e var1[2]) {\n            var1[2] \u003d var11 + var9;\n        }\n        if (var12 + var10 \u003e var1[3]) {\n            var1[3] \u003d var12 + var10;\n        }\n        this.redrawRegions.add(var1);\n        var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);\n        var15 \u003d this.p2X - (18 * this.p2Diam / 100 | 0);\n        var16 \u003d this.p2Y - (60 * this.p2Diam / 100 | 0);\n        var11 \u003d (var15 * this.nWidth / 1000 | 0);\n        var12 \u003d (4 * this.nHeight / 5 | 0) - var10 - (var16 * this.nHeight / 1000 | 0);\n        var17 \u003d var11 - var5;\n        var18 \u003d var12 - var6;\n        var19 \u003d (Math.sqrt((var17 * var17 + var18 * var18)) | 0);\n        var20 \u003d ((this.nWidth / 50 | 0) * this.p2Diam / 100 | 0);\n        var21 \u003d ((this.nHeight / 25 | 0) * this.p2Diam / 100 | 0);\n        var2.setColor(ShimmedColor.white);\n        var2.fillOval(var11 - var20, var12 - var21, var20, var21);\n        var2.setColor(ShimmedColor.black);\n        var2.fillOval(var11 - (4 * var17 / var19 | 0) - (3 * var20 / 4 | 0), var12 - (4 * var18 / var19 | 0) - (3 * var21 / 4 | 0), (var20 / 2 | 0), (var21 / 2 | 0));\n        if (!this.fP1Fire \u0026\u0026 !this.fP2Fire) {\n            this.superFlash \u003d false;\n        }\n        var5 \u003d (this.ballX * this.nWidth / 1000 | 0);\n        var6 \u003d (4 * this.nHeight / 5 | 0) - (this.ballY * this.nHeight / 1000 | 0);\n        var2.setColor(this.BALL_COL);\n        var2.fillOval(var5 - var4, var6 - var4, 2 * var4, 2 * var4);\n        var1 \u003d [var7 - var4, var8 - var4, var7 + var4, var8 + var4];\n        if (var5 - var4 \u003c var1[0]) {\n            var1[0] \u003d var5 - var4;\n        }\n        if (var6 - var4 \u003c var1[1]) {\n            var1[1] \u003d var6 - var4;\n        }\n        if (var5 + var4 \u003e var1[2]) {\n            var1[2] \u003d var5 + var4;\n        }\n        if (var6 + var4 \u003e var1[3]) {\n            var1[3] \u003d var6 + var4;\n        }\n        this.redrawRegions.add(var1);\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_h_92 \u003d function () {\n        var var1 \u003d 5;\n        var var2 \u003d 15;\n        var var3 \u003d 22;\n        this.ballY +\u003d --this.ballVY;\n        this.ballX +\u003d this.ballVX;\n        if (!this.fEndGame) {\n            var var4 \u003d 2 * (this.ballX - this.p1X);\n            var var5 \u003d this.ballY - this.p1Y;\n            var var6 \u003d (Math.sqrt((var4 * var4 + var5 * var5)) | 0);\n            var var7 \u003d this.ballVX - this.p1XV;\n            var var8 \u003d this.ballVY - this.p1YV;\n            var var9 \u003d void 0;\n            if (var5 \u003e 0 \u0026\u0026 var6 \u003c this.p1Diam + this.ballRad \u0026\u0026 var6 \u003e var1) {\n                var9 \u003d ((var4 * var7 + var5 * var8) / var6 | 0);\n                this.ballX \u003d this.p1X + (((this.p1Diam + this.ballRad) / 2 | 0) * var4 / var6 | 0);\n                this.ballY \u003d this.p1Y + ((this.p1Diam + this.ballRad) * var5 / var6 | 0);\n                if (var9 \u003c\u003d 0) {\n                    this.ballVX +\u003d this.p1XV - (2 * var4 * var9 / var6 | 0);\n                    if (this.ballVX \u003c -var2) {\n                        this.ballVX \u003d -var2;\n                    }\n                    if (this.ballVX \u003e var2) {\n                        this.ballVX \u003d var2;\n                    }\n                    this.ballVY +\u003d this.p1YV - (2 * var5 * var9 / var6 | 0);\n                    if (this.ballVY \u003c -var3) {\n                        this.ballVY \u003d -var3;\n                    }\n                    if (this.ballVY \u003e var3) {\n                        this.ballVY \u003d var3;\n                    }\n                }\n                if (this.fServerMoved) {\n                    this.fP1Touched \u003d true;\n                    ++this.fP1Touches;\n                    this.fP2Touches \u003d 0;\n                    this.fP1HitStill \u003d this.p1YV \u003d\u003d\u003d 0 \u0026\u0026 this.p1XV \u003d\u003d\u003d 0;\n                    this.hitNetSinceTouched \u003d false;\n                }\n            }\n            var4 \u003d 2 * (this.ballX - this.p2X);\n            var5 \u003d this.ballY - this.p2Y;\n            var6 \u003d (Math.sqrt((var4 * var4 + var5 * var5)) | 0);\n            var7 \u003d this.ballVX - this.p2XV;\n            var8 \u003d this.ballVY - this.p2YV;\n            if (var5 \u003e 0 \u0026\u0026 var6 \u003c this.p2Diam + this.ballRad \u0026\u0026 var6 \u003e var1) {\n                var9 \u003d ((var4 * var7 + var5 * var8) / var6 | 0);\n                this.ballX \u003d this.p2X + (((this.p2Diam + this.ballRad) / 2 | 0) * var4 / var6 | 0);\n                this.ballY \u003d this.p2Y + ((this.p2Diam + this.ballRad) * var5 / var6 | 0);\n                if (var9 \u003c\u003d 0) {\n                    this.ballVX +\u003d this.p2XV - (2 * var4 * var9 / var6 | 0);\n                    if (this.ballVX \u003c -var2) {\n                        this.ballVX \u003d -var2;\n                    }\n                    if (this.ballVX \u003e var2) {\n                        this.ballVX \u003d var2;\n                    }\n                    this.ballVY +\u003d this.p2YV - (2 * var5 * var9 / var6 | 0);\n                    if (this.ballVY \u003c -var3) {\n                        this.ballVY \u003d -var3;\n                    }\n                    if (this.ballVY \u003e var3) {\n                        this.ballVY \u003d var3;\n                    }\n                }\n                if (this.fServerMoved) {\n                    this.fP2Touched \u003d true;\n                    ++this.fP2Touches;\n                    this.fP1Touches \u003d 0;\n                    this.fP2HitStill \u003d this.p2YV \u003d\u003d\u003d 0 \u0026\u0026 this.p2XV \u003d\u003d\u003d 0;\n                    this.hitNetSinceTouched \u003d false;\n                }\n            }\n            if (this.ballX \u003c 15) {\n                this.ballX \u003d 15;\n                this.ballVX \u003d -this.ballVX;\n            }\n            if (this.ballX \u003e 985) {\n                this.ballX \u003d 985;\n                this.ballVX \u003d -this.ballVX;\n            }\n            if (this.ballX \u003e 480 \u0026\u0026 this.ballX \u003c 520 \u0026\u0026 this.ballY \u003c 140) {\n                if (this.ballVY \u003c 0 \u0026\u0026 this.ballY \u003e 130) {\n                    this.ballVY *\u003d -1;\n                    this.ballY \u003d 130;\n                }\n                else if (this.ballX \u003c 500) {\n                    this.ballX \u003d 480;\n                    this.ballVX \u003d this.ballVX \u003e\u003d 0 ? -this.ballVX : this.ballVX;\n                    this.hitNetSinceTouched \u003d true;\n                }\n                else {\n                    this.ballX \u003d 520;\n                    this.ballVX \u003d this.ballVX \u003c\u003d 0 ? -this.ballVX : this.ballVX;\n                    this.hitNetSinceTouched \u003d true;\n                }\n            }\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_goto_93 \u003d function () {\n        if (!this.replaying) {\n            var var1 \u003d this.getGraphics();\n            var var2 \u003d var1.getFontMetrics();\n            var var3 \u003d (this.nHeight / 15 | 0);\n            var var4 \u003d 20;\n            var var5 \u003d void 0;\n            for (var5 \u003d 0; var5 \u003c 6; ++var5) {\n                if (this.fP1PointsWon \u003e\u003d var5 + 1) {\n                    var1.setColor(this.slimeColours[this.p1Col]);\n                    var1.fillOval(var4, 30 - (var3 / 2 | 0), var3, var3);\n                }\n                var1.setColor(ShimmedColor.white);\n                var1.drawOval(var4, 30 - (var3 / 2 | 0), var3, var3);\n                var4 +\u003d var3 + 10;\n            }\n            ;\n            var4 \u003d this.nWidth - 20 - 6 * (var3 + 10);\n            for (var5 \u003d 0; var5 \u003c 6; ++var5) {\n                if (this.fP2PointsWon \u003e\u003d 6 - var5) {\n                    var1.setColor(this.slimeColours[this.p2Col]);\n                    var1.fillOval(var4, 30 - (var3 / 2 | 0), var3, var3);\n                }\n                var1.setColor(ShimmedColor.white);\n                var1.drawOval(var4, 30 - (var3 / 2 | 0), var3, var3);\n                var4 +\u003d var3 + 10;\n            }\n            ;\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_94 \u003d function (var1) {\n        var var3 \u003d \"\";\n        var var4 \u003d Math.floor(var1 / 10) % 100;\n        var var6 \u003d Math.floor(var1 / 1000) % 60;\n        var var8 \u003d Math.floor(var1 / 60000) % 60;\n        var var10 \u003d Math.floor(var1 / 3600000);\n        var3 \u003d var3 + var8 + \":\";\n        if (var6 \u003c 10) {\n            var3 \u003d var3 + \"0\";\n        }\n        var3 \u003d var3 + var6;\n        return var3;\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_byte_95 \u003d function () {\n        var var1;\n        if (this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var1 \u003d this.getGraphics();\n        }\n        var var2 \u003d (this.nHeight / 20 | 0);\n        var1.setColor(this.SKY_COL);\n        var1.setFont(this.screen.getFont());\n        var var3 \u003d var1.getFontMetrics();\n        var var4 \u003d (this.oneplayer ? \"Score: \" + this.gameScore : \"\") + (!this.fInPlay ? \"\" : \" Time: \" + this.method_rn_Slime1P_a_94((this.paused ? this.pausedTime : ShimmedSystem.currentTimeMillis()) - this.startTime));\n        var var5 \u003d var3.stringWidth(var4);\n        var var6 \u003d (this.nWidth / 2 | 0) - (var5 / 2 | 0) - 10;\n        var1.fillRect(var6, 0, var5 + 20, var2 + 22);\n        var1.setColor(ShimmedColor.white);\n        var var7 \u003d var3.stringWidth(var4);\n        var var8 \u003d (this.nWidth / 2 | 0) - (var7 / 2 | 0);\n        var var9 \u003d var3.getHeight() * 2;\n        var1.drawString(var4, var8, var9);\n        this.redrawRegions.add([var8, 0, var8 + var7, var9 + (var9 / 2 | 0)]);\n    };\n    Slime1P.prototype.method_rn_Slime1P_int_96 \u003d function () {\n        var var1;\n        if (this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var1 \u003d this.getGraphics();\n        }\n        var1.setFont(this.screen.getFont());\n        this.screen.setColor(this.COURT_COL);\n        this.screen.fillRect(0, (4 * this.nHeight / 5 | 0) + 6, this.nWidth, (this.nHeight / 5 | 0) - 10);\n        this.method_rn_Slime1P_a_97(this.promptMsg, 0);\n    };\n    Slime1P.prototype.method_rn_Slime1P_a_97 \u003d function (var1, var2) {\n        var var3 \u003d this.getGraphics();\n        var3.setFont(new ShimmedFont(var3.getFont().getName(), 1, 15));\n        var var4 \u003d var3.getFontMetrics();\n        var3.setColor(ShimmedColor.white);\n        var var5 \u003d var4.stringWidth(var1);\n        var var6 \u003d ((this.nWidth - var5) / 2 | 0);\n        var var7 \u003d (this.nHeight * 4 / 5 | 0) + var4.getHeight() * (var2 + 1) + 10;\n        var3.drawString(var1, var6, var7);\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        this.redrawRegions.add([var6, var7, var6 + var5 + 1, var7 + var4.getHeight()]);\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_98 \u003d function (var1) {\n        this.method_rn_Slime1P_a_99(var1, true);\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_99 \u003d function (var1, var2) {\n        var var3 \u003d var1 !\u003d\u003d 0 ? var1 - 1 : this.replayData.length - 1;\n        this.p1OldX \u003d this.replayData[var3][0];\n        this.p1OldY \u003d this.replayData[var3][1];\n        this.p2OldX \u003d this.replayData[var3][2];\n        this.p2OldY \u003d this.replayData[var3][3];\n        this.ballOldX \u003d this.replayData[var3][4];\n        this.ballOldY \u003d this.replayData[var3][5];\n        this.p1X \u003d this.replayData[var1][0];\n        this.p1Y \u003d this.replayData[var1][1];\n        this.p2X \u003d this.replayData[var1][2];\n        this.p2Y \u003d this.replayData[var1][3];\n        this.ballX \u003d this.replayData[var1][4];\n        this.ballY \u003d this.replayData[var1][5];\n        this.ballVX \u003d 0;\n        this.ballVY \u003d 1;\n        if (this.ballOldX \u003d\u003d\u003d 0 \u0026\u0026 this.ballOldY \u003d\u003d\u003d 0) {\n            this.ballOldX \u003d this.ballOldY \u003d -500;\n        }\n        if (this.ballX \u003d\u003d\u003d this.ballOldX \u0026\u0026 this.ballY \u003d\u003d\u003d this.ballOldY) {\n            this.ballOldX \u003d this.ballOldY \u003d -500;\n        }\n        this.method_rn_Slime1P_if_91();\n        if (this.buffered) {\n            this.getGraphics().drawImage(this.buffer, 0, 0, null);\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_g_100 \u003d function () {\n        this.replayData[this.replayIndex][0] \u003d this.p1X;\n        this.replayData[this.replayIndex][1] \u003d this.p1Y;\n        this.replayData[this.replayIndex][2] \u003d this.p2X;\n        this.replayData[this.replayIndex][3] \u003d this.p2Y;\n        this.replayData[this.replayIndex][4] \u003d this.ballX;\n        this.replayData[this.replayIndex][5] \u003d this.ballY;\n        this.replayData[this.replayIndex][6] \u003d this.p1Col;\n        this.replayData[this.replayIndex][7] \u003d this.p2Col;\n        ++this.replayIndex;\n        if (this.replayIndex \u003e\u003d this.replayData.length) {\n            this.replayIndex \u003d 0;\n        }\n        if (this.replayStart \u003d\u003d\u003d this.replayIndex) {\n            ++this.replayStart;\n        }\n        if (this.replayStart \u003e\u003d this.replayData.length) {\n            this.replayStart \u003d 0;\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_f_101 \u003d function () {\n        this.replaying \u003d true;\n        this.method_rn_Slime1P_void_78();\n        var var1 \u003d this.buffered ? this.buffer.getGraphics() : this.getGraphics();\n        var var2 \u003d var1.getFontMetrics();\n        var var3 \u003d var2.getHeight();\n        this.promptMsg \u003d \"Press space to continue...\";\n        this.mousePressed \u003d false;\n        var var4 \u003d this.scoringRun;\n        this.scoringRun \u003d this.oldScoringRun;\n        var var5 \u003d this.replayStart;\n        var var6 \u003d false;\n        while ((!this.mousePressed)) {\n            ++var5;\n            if (var5 \u003e\u003d this.replayData.length) {\n                var5 \u003d 0;\n            }\n            if (var5 \u003d\u003d\u003d this.replayIndex) {\n                var1.setColor(ShimmedColor.white);\n                var1.fillRect(20, 20, 20, 20);\n                this.method_rn_Slime1P_a_107(1000, false);\n                var6 \u003d !var6;\n                this.paint(var1);\n                var1.setColor(this.SKY_COL);\n                var1.fillRect(0, 0, this.nWidth, (this.nHeight / 20 | 0) + 22);\n                if (this.replayIndex \u003c this.replayStart) {\n                    var5 +\u003d this.replayData.length;\n                }\n                while ((var5 \u003e this.replayStart)) {\n                    var5 -\u003d 5;\n                    this.method_rn_Slime1P_void_78();\n                    var1.setColor(ShimmedColor.white);\n                    var1.fillPolygon$ShimmedPolygon(new ShimmedPolygon([20, 35, 35, 50, 50, 35, 35, 20], [30, 20, 30, 20, 40, 30, 40, 30], 8));\n                    if (var5 \u003c this.replayStart) {\n                        var5 \u003d this.replayStart;\n                    }\n                    this.method_rn_Slime1P_a_99(var5 % this.replayData.length, false);\n                    this.method_rn_Slime1P_a_107(20, false);\n                }\n                ;\n                this.method_rn_Slime1P_void_78();\n                var1.setColor(ShimmedColor.white);\n                var1.fillRect(20, 20, 20, 20);\n                this.method_rn_Slime1P_a_98(this.replayStart);\n                this.method_rn_Slime1P_a_107(500, false);\n                this.method_rn_Slime1P_void_78();\n            }\n            this.method_rn_Slime1P_a_98(var5);\n            try {\n                ShimmedThread.sleep$long(var6 ? 60 : 20);\n            }\n            catch (var8) {\n            }\n            ;\n            var1.setColor(ShimmedColor.white);\n            var1.fillPolygon$ShimmedPolygon(new ShimmedPolygon([20, 35, 20], [20, 30, 40], 3));\n        }\n        ;\n        this.scoringRun \u003d var4;\n        this.promptMsg \u003d \"\";\n        this.paint(var1);\n        this.replaying \u003d false;\n    };\n    Slime1P.prototype.run \u003d function () {\n        this.replayIndex \u003d this.replayStart \u003d 0;\n        this.method_rn_Slime1P_int_96();\n        this.superFlash \u003d false;\n        this.scoringRun \u003d 0;\n        this.fP1Touches \u003d 0;\n        this.fP2Touches \u003d 0;\n        this.fP1TouchesTot \u003d 0;\n        this.fP2TouchesTot \u003d 0;\n        this.fP1Clangers \u003d 0;\n        this.fP2Clangers \u003d 0;\n        this.fP1Aces \u003d 0;\n        this.fP2Aces \u003d 0;\n        this.fP1Winners \u003d 0;\n        this.fP2Winners \u003d 0;\n        this.fP1Frames \u003d 0;\n        this.fP2Frames \u003d 0;\n        this.fP1Super \u003d 0;\n        this.fP2Super \u003d 0;\n        this.fP1HitStill \u003d false;\n        this.fP2HitStill \u003d false;\n        this.fServerMoved \u003d false;\n        this.method_rn_Slime1P_goto_93();\n        this.fP1Touched \u003d this.fP2Touched \u003d false;\n        this.hitNetSinceTouched \u003d false;\n        var var1 \u003d false;\n        var var2 \u003d false;\n        var var3 \u003d false;\n        this.gameOver \u003d false;\n        var var4 \u003d this.buffer.getGraphics();\n        this.startTime \u003d ShimmedSystem.currentTimeMillis();\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n        while ((this.gameThread !\u003d null \u0026\u0026 !this.gameOver)) {\n            if (!this.paused) {\n                this.p1OldX \u003d this.p1X;\n                this.p1OldY \u003d this.p1Y;\n                this.p2OldX \u003d this.p2X;\n                this.p2OldY \u003d this.p2Y;\n                this.ballOldX \u003d this.ballX;\n                this.ballOldY \u003d this.ballY;\n                this.method_rn_Slime1P_i_90();\n                this.method_rn_Slime1P_h_92();\n                this.method_rn_Slime1P_byte_95();\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_if_91();\n                this.method_rn_Slime1P_do_79();\n                this.method_rn_Slime1P_g_100();\n            }\n            if (this.ballY \u003c 35) {\n                var var5 \u003d ShimmedSystem.currentTimeMillis();\n                if (this.ballX \u003e 500) {\n                    ++this.fP1PointsWon;\n                }\n                else {\n                    ++this.fP2PointsWon;\n                }\n                if (this.ballX \u003e 500 || this.fP1Touches \u003c 3 \u0026\u0026 (!this.hitNetSinceTouched || this.fP1Touches \u003c\u003d 0) \u0026\u0026 this.fP2Touched \u0026\u0026 (!this.fP1HitStill || this.fP1Touches \u003c\u003d 0)) {\n                    if (this.ballX \u003e 500 \u0026\u0026 (this.fP2Touches \u003e\u003d 3 || this.hitNetSinceTouched \u0026\u0026 this.fP2Touches \u003e 0 || !this.fP1Touched || this.fP2HitStill \u0026\u0026 this.fP2Touches \u003e 0)) {\n                        ++this.fP2Clangers;\n                        var1 \u003d true;\n                    }\n                }\n                else {\n                    ++this.fP1Clangers;\n                    var1 \u003d true;\n                }\n                if (this.fP1Touched \u0026\u0026 !this.fP2Touched \u0026\u0026 this.ballX \u003e\u003d 500) {\n                    ++this.fP1Aces;\n                    var2 \u003d true;\n                    this.gameScore +\u003d 200 * this.method_rn_Slime1P_case_108();\n                }\n                else if (this.fP2Touched \u0026\u0026 !this.fP1Touched \u0026\u0026 this.ballX \u003c 500) {\n                    ++this.fP2Aces;\n                    var2 \u003d true;\n                }\n                else if (this.ballX \u003e 500 \u0026\u0026 this.fP1Touches \u003e 0) {\n                    ++this.fP1Winners;\n                    var3 \u003d true;\n                    this.gameScore +\u003d 100 * this.method_rn_Slime1P_case_108();\n                }\n                else if (this.ballX \u003c\u003d 500 \u0026\u0026 this.fP2Touches \u003e 0) {\n                    ++this.fP2Winners;\n                    var3 \u003d true;\n                }\n                if (this.ballX \u003e 500 \u0026\u0026 !var3 \u0026\u0026 !var2) {\n                    this.gameScore +\u003d 50 * this.method_rn_Slime1P_case_108();\n                }\n                if (this.oneplayer) {\n                    this.promptMsg \u003d this.ballX \u003c\u003d 500 ? this.slimeColText[this.p2Col] : this.slimeColText[this.p1Col];\n                }\n                else {\n                    this.promptMsg \u003d this.slimeColText[this.p1Col] + (this.ballX \u003c\u003d 500 ? \"2 \" : \"1 \");\n                }\n                if (this.fP1PointsWon !\u003d\u003d 6 \u0026\u0026 this.fP2PointsWon !\u003d\u003d 6) {\n                    if (var2) {\n                        this.promptMsg \u003d this.promptMsg + \"aces the serve!\";\n                    }\n                    else if (var3) {\n                        this.promptMsg \u003d this.promptMsg + \"scores a winner!\";\n                    }\n                    else if (this.ballX \u003e 500 \u0026\u0026 !this.fP1Touched \u0026\u0026 this.fP2Touched || this.ballX \u003c\u003d 500 \u0026\u0026 this.fP1Touched \u0026\u0026 !this.fP2Touched) {\n                        this.promptMsg \u003d this.promptMsg + \"laughs at his opponent\\\u0027s inability to serve!\";\n                    }\n                    else if (this.fP1PointsWon \u003d\u003d\u003d this.fP2PointsWon) {\n                        this.promptMsg \u003d this.promptMsg + \"draws level!\";\n                    }\n                    else if ((this.ballX \u003c\u003d 500 || this.fP1PointsWon !\u003d\u003d this.fP2PointsWon + 1) \u0026\u0026 (this.ballX \u003e 500 || this.fP1PointsWon + 1 !\u003d\u003d this.fP2PointsWon)) {\n                        this.promptMsg \u003d this.promptMsg + \"scores!\";\n                    }\n                    else {\n                        this.promptMsg \u003d this.promptMsg + \"takes the lead!\";\n                    }\n                }\n                else {\n                    this.promptMsg \u003d this.promptMsg + \"wins!\";\n                }\n                var var7 \u003d this.ballX;\n                this.method_rn_Slime1P_int_96();\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_byte_95();\n                var1 \u003d false;\n                var2 \u003d false;\n                var3 \u003d false;\n                this.mousePressed \u003d false;\n                this.method_rn_Slime1P_a_107(1500, true);\n                if (this.mousePressed) {\n                    this.method_rn_Slime1P_g_100();\n                    this.method_rn_Slime1P_f_101();\n                }\n                if (this.fP1PointsWon \u003d\u003d\u003d 6 || this.fP2PointsWon \u003d\u003d\u003d 6) {\n                    this.method_rn_Slime1P_a_102();\n                }\n                this.promptMsg \u003d \"\";\n                this.method_rn_Slime1P_for_80();\n                this.ballX \u003d var7 \u003e\u003d 500 ? 200 : 800;\n                this.method_rn_Slime1P_void_78();\n                this.repaint();\n                this.startTime +\u003d ShimmedSystem.currentTimeMillis() - var5;\n            }\n            if (this.gameThread !\u003d null) {\n                this.method_rn_Slime1P_a_107(20, true);\n            }\n        }\n        ;\n        this.fEndGame \u003d true;\n        this.fInPlay \u003d false;\n        this.repaint();\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_102 \u003d function () {\n        if (!this.oneplayer) {\n            this.method_rn_Slime1P_a_103(this.fP1PointsWon \u003e this.fP2PointsWon);\n        }\n        else if (this.fP1PointsWon \u003d\u003d\u003d 6) {\n            this.gameTime \u003d ShimmedSystem.currentTimeMillis() - this.startTime;\n            if (this.fP1PointsWon \u003d\u003d\u003d 6) {\n                this.gameScore +\u003d (1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon) | 0) * this.method_rn_Slime1P_case_108();\n                this.gameScore \u003d ((Math.floor(this.gameScore) + Math.floor((this.gameTime \u003c 300000 ? 300000 - this.gameTime : 0) / 1000) * Math.floor(this.method_rn_Slime1P_case_108())) | 0);\n            }\n            if (this.fP2PointsWon \u003d\u003d\u003d 0) {\n                this.gameScore +\u003d 1000 * this.method_rn_Slime1P_case_108();\n            }\n            if (this.aiMode \u003d\u003d\u003d 4) {\n                this.aiMode \u003d 5;\n                this.method_rn_Slime1P_if_104(true);\n            }\n        }\n        else {\n            this.method_rn_Slime1P_if_104(false);\n        }\n        this.fInPlay \u003d false;\n        this.gameThread \u003d null;\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_103 \u003d function (var1) {\n        var var2 \u003d this.screen.getFontMetrics();\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        var var3;\n        if (this.buffered) {\n            var3 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var3 \u003d this.getGraphics();\n        }\n        var var4 \u003d var3.getFontMetrics();\n        var3.setColor(this.COURT_COL);\n        var var5 \u003d [\"C\\\u0027mon player \" + (var1 ? 1 : 2) + \", I\\\u0027ll take you on!\", \"Inferior human controlled slime \" + (var1 ? 2 : 1) + \" is insipid!\", \"Inferior human controlled slime \" + (var1 ? 2 : 1) + \" is rubbish!\", \"Super inferior human controlled slime \" + (var1 ? 1 : 2) + \" wins!\", \"You\\\u0027re both yellow cowards. Play me instead!\"];\n        var var6 \u003d var5[((var5.length * Math.random()) | 0)];\n        var3.fillRect(((this.nWidth - var4.stringWidth(var6)) / 2 | 0) - 30, (this.nHeight / 2 | 0) - var4.getAscent() * 5, var4.stringWidth(var6) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);\n        var3.setColor(ShimmedColor.white);\n        var3.drawString(var6, ((this.nWidth - var4.stringWidth(var6)) / 2 | 0), (this.nHeight / 2 | 0) - var4.getAscent() * 3);\n        var3.setFont(this.screen.getFont());\n        var3.drawString(\"GAME OVER\", ((this.nWidth - var2.stringWidth(\"GAME OVER\")) / 2 | 0), (this.nHeight / 2 | 0) + var2.getAscent());\n        this.repaint();\n        this.method_rn_Slime1P_a_107(3000, false);\n        this.gameOver \u003d true;\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_if_104 \u003d function (var1) {\n        var var2 \u003d this.screen.getFontMetrics();\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        var var3;\n        if (this.buffered) {\n            var3 \u003d this.buffer.getGraphics();\n        }\n        else {\n            var3 \u003d this.getGraphics();\n        }\n        var var4 \u003d var3.getFontMetrics();\n        if (!var1) {\n            var3.setColor(this.COURT_COL);\n            var3.fillRect(((this.nWidth - this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode]))) / 2 | 0) - 30, (this.nHeight / 2 | 0) - var4.getAscent() * 5, this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode])) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);\n            var3.setColor(ShimmedColor.white);\n            var3.drawString(this.loserText1[this.aiMode], ((this.nWidth - var4.stringWidth(this.loserText1[this.aiMode])) / 2 | 0), (this.nHeight / 2 | 0) - var4.getAscent() * 3);\n            var3.drawString(this.loserText2[this.aiMode], ((this.nWidth - var4.stringWidth(this.loserText2[this.aiMode])) / 2 | 0), (this.nHeight / 2 | 0) - var4.getAscent() * 2);\n            var3.setFont(this.screen.getFont());\n            var3.drawString(\"GAME OVER\", ((this.nWidth - var2.stringWidth(\"GAME OVER\")) / 2 | 0), (this.nHeight / 2 | 0) + var2.getAscent());\n        }\n        else {\n            this.method_rn_Slime1P_a_105(var3);\n            var3.setColor(ShimmedColor.white);\n            var3.setFont(this.screen.getFont());\n            var3.drawString(\"YOU WIN!\", ((this.nWidth - var2.stringWidth(\"YOU WIN!\")) / 2 | 0), (this.nHeight / 2 | 0));\n            var3.drawString(\"The Slimes bow down before the new Slime King!\", ((this.nWidth - var4.stringWidth(\"The Slimes bow down before the new Slime King!\")) / 2 | 0), (this.nHeight / 2 | 0) + var4.getAscent());\n        }\n        if (this.buffered) {\n            this.repaint();\n        }\n        try {\n            if (Class_rn_g_7.method_rn_g_a_66(this, Math.floor(this.gameScore))) {\n                new NameFrame(this, Math.floor(this.gameScore), this.aiMode);\n            }\n        }\n        catch (var6) {\n        }\n        ;\n        this.method_rn_Slime1P_a_107(3000, false);\n        this.gameOver \u003d true;\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_105 \u003d function (var1) {\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_106 \u003d function (var1, var2) {\n        return var1 \u003e var2 ? var1 : var2;\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_a_107 \u003d function (var1, var3) {\n        if (this.gameThread !\u003d null) {\n            for (var var4 \u003d 0; Math.floor(var4) \u003c Math.floor(var1 / 20); ++var4) {\n                try {\n                    var var10000 \u003d this.gameThread;\n                    ShimmedThread.sleep$long(20);\n                }\n                catch (var6) {\n                }\n                ;\n            }\n            ;\n        }\n    };\n    /*private*/ Slime1P.prototype.method_rn_Slime1P_case_108 \u003d function () {\n        return (Math.pow(2.0, this.aiMode) | 0);\n    };\n    Slime1P.prototype.destroy \u003d function () {\n        if (this.gameThread !\u003d null) {\n            this.gameThread.stop();\n            this.gameThread \u003d null;\n        }\n    };\n    return Slime1P;\n}(ShimmedApplet));\nSlime1P[\"__class\"] \u003d \"Slime1P\";\nSlime1P[\"__interfaces\"] \u003d [\"ShimmedRunnable\"];\nvar ShimmedBufferedImage \u003d (function (_super) {\n    __extends(ShimmedBufferedImage, _super);\n    function ShimmedBufferedImage(x, y, z) {\n        return _super.call(this) || this;\n    }\n    ShimmedBufferedImage.prototype.getSubimage \u003d function (a, b, c, d) {\n        return null;\n    };\n    return ShimmedBufferedImage;\n}(ShimmedImage));\nShimmedBufferedImage[\"__class\"] \u003d \"ShimmedBufferedImage\";\nvar ShimmedFrame \u003d (function (_super) {\n    __extends(ShimmedFrame, _super);\n    function ShimmedFrame() {\n        return _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n    }\n    ShimmedFrame.prototype.setTitle \u003d function (s) {\n    };\n    ShimmedFrame.prototype.pack \u003d function () {\n    };\n    ShimmedFrame.prototype.show \u003d function () {\n    };\n    ShimmedFrame.prototype.dispose \u003d function () {\n    };\n    ShimmedFrame.prototype.setLayout \u003d function (g) {\n    };\n    return ShimmedFrame;\n}(ShimmedElement));\nShimmedFrame[\"__class\"] \u003d \"ShimmedFrame\";\nvar ShimmedTextField \u003d (function (_super) {\n    __extends(ShimmedTextField, _super);\n    function ShimmedTextField(s) {\n        return _super.call(this) || this;\n    }\n    ShimmedTextField.prototype.getText \u003d function () {\n        return null;\n    };\n    return ShimmedTextField;\n}(ShimmedElement));\nShimmedTextField[\"__class\"] \u003d \"ShimmedTextField\";\nvar ShimmedButton \u003d (function (_super) {\n    __extends(ShimmedButton, _super);\n    function ShimmedButton(s) {\n        return _super.call(this) || this;\n    }\n    return ShimmedButton;\n}(ShimmedElement));\nShimmedButton[\"__class\"] \u003d \"ShimmedButton\";\nvar ShimmedPanel \u003d (function (_super) {\n    __extends(ShimmedPanel, _super);\n    function ShimmedPanel() {\n        return _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n    }\n    return ShimmedPanel;\n}(ShimmedElement));\nShimmedPanel[\"__class\"] \u003d \"ShimmedPanel\";\nvar ShimmedLabel \u003d (function (_super) {\n    __extends(ShimmedLabel, _super);\n    function ShimmedLabel(s) {\n        return _super.call(this) || this;\n    }\n    return ShimmedLabel;\n}(ShimmedElement));\nShimmedLabel[\"__class\"] \u003d \"ShimmedLabel\";\nvar Class_rn_f_2 \u003d (function (_super) {\n    __extends(Class_rn_f_2, _super);\n    function Class_rn_f_2() {\n        var _this \u003d _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n        /*private*/ _this.field_rn_f_m_37 \u003d 0.85;\n        /*private*/ _this.field_rn_f_n_38 \u003d -1;\n        return _this;\n    }\n    /*private*/ Class_rn_f_2.prototype.method_rn_f_long_33 \u003d function (var1) {\n        return var1 * var1;\n    };\n    /*private*/ Class_rn_f_2.prototype.method_rn_f_goto_34 \u003d function (var1) {\n        var var2 \u003d 0;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        }\n        ;\n    };\n    /*private*/ Class_rn_f_2.prototype.method_rn_f_else_35 \u003d function (var1) {\n        var var2 \u003d this.method_rn_f_goto_34(var1);\n        var var3 \u003d this.field_rn_c_void_13;\n        var var4 \u003d this.field_rn_c_do_15;\n        for (var var5 \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if (var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            }\n            else if (var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        }\n        ;\n        return var3;\n    };\n    Class_rn_f_2.prototype.method_rn_c_a_11 \u003d function () {\n        if (this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_f_n_38 !\u003d\u003d -1) {\n            this.field_rn_f_n_38 \u003d -1;\n        }\n        var var1 \u003d this.method_rn_f_else_35(125);\n        var var2 \u003d this.method_rn_f_goto_34(125);\n        var var3;\n        if (this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        }\n        else {\n            var3 \u003d 25 + ((10.0 * Math.random()) | 0);\n        }\n        if ((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n            if (var1 \u003c 500) {\n                if (Math.abs(this.field_rn_c_int_21 - 666) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                }\n                else if (this.field_rn_c_int_21 \u003e 666) {\n                    this.method_rn_c_a_12(0);\n                }\n                else if (this.field_rn_c_int_21 \u003c 666) {\n                    this.method_rn_c_a_12(1);\n                }\n            }\n            else {\n                if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if (this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if ((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_f_try_36();\n                    }\n                    else if (this.method_rn_f_long_33(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_f_long_33(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_f_long_33(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_f_try_36();\n                    }\n                    else if (this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_f_try_36();\n                    }\n                    else if (Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.666) {\n                        this.method_rn_f_try_36();\n                    }\n                }\n                if (this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                    if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n                else if (this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                    if (this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if (this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if (Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        }\n        else {\n            if (this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                if (this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_f_n_38 \u003d 0;\n                }\n                else {\n                    this.field_rn_f_n_38 \u003d 1;\n                }\n                if (Math.random() \u003c 0.35) {\n                    this.field_rn_f_n_38 \u003d ((2.0 * Math.random()) | 0);\n                }\n            }\n            switch ((this.field_rn_f_n_38)) {\n                case 0:\n                    if (this.field_rn_c_else_14 \u003c 250 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                        this.method_rn_c_a_12(1);\n                        this.method_rn_c_a_12(2);\n                    }\n                    break;\n                case 1:\n                    if (this.field_rn_c_else_14 \u003c 250 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                        this.method_rn_c_a_12(0);\n                        this.method_rn_c_a_12(2);\n                    }\n            }\n        }\n    };\n    /*private*/ Class_rn_f_2.prototype.method_rn_f_try_36 \u003d function () {\n        if (Math.random() \u003c 0.85) {\n            this.method_rn_c_a_12(2);\n        }\n    };\n    return Class_rn_f_2;\n}(Class_rn_c_1));\nClass_rn_f_2[\"__class\"] \u003d \"Class_rn_f_2\";\nvar Class_rn_e_3 \u003d (function (_super) {\n    __extends(Class_rn_e_3, _super);\n    function Class_rn_e_3() {\n        var _this \u003d _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n        /*private*/ _this.field_rn_e_k_43 \u003d 0.4;\n        /*private*/ _this.field_rn_e_l_44 \u003d -1;\n        return _this;\n    }\n    /*private*/ Class_rn_e_3.prototype.method_rn_e_char_39 \u003d function (var1) {\n        return var1 * var1;\n    };\n    /*private*/ Class_rn_e_3.prototype.method_rn_e_case_40 \u003d function (var1) {\n        var var2 \u003d 0;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        }\n        ;\n    };\n    /*private*/ Class_rn_e_3.prototype.method_rn_e_byte_41 \u003d function (var1) {\n        var var2 \u003d this.method_rn_e_case_40(var1);\n        var var3 \u003d this.field_rn_c_void_13;\n        var var4 \u003d this.field_rn_c_do_15;\n        for (var var5 \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if (var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            }\n            else if (var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        }\n        ;\n        return var3;\n    };\n    Class_rn_e_3.prototype.method_rn_c_a_11 \u003d function () {\n        if (this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_e_l_44 !\u003d\u003d -1) {\n            this.field_rn_e_l_44 \u003d -1;\n        }\n        var var1 \u003d this.method_rn_e_byte_41(125);\n        var var2 \u003d this.method_rn_e_case_40(125);\n        var var3;\n        if (this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        }\n        else {\n            var3 \u003d 23 + ((15.0 * Math.random()) | 0);\n        }\n        if ((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n            if (var1 \u003c 500) {\n                if (Math.abs(this.field_rn_c_int_21 - 800) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                }\n                else if (this.field_rn_c_int_21 \u003e 800) {\n                    this.method_rn_c_a_12(0);\n                }\n                else if (this.field_rn_c_int_21 \u003c 800) {\n                    this.method_rn_c_a_12(1);\n                }\n            }\n            else {\n                if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if (this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if ((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_e_new_42();\n                    }\n                    else if (this.method_rn_e_char_39(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_e_char_39(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_e_char_39(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_e_new_42();\n                    }\n                    else if (this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_e_new_42();\n                    }\n                    else if (Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.5) {\n                        this.method_rn_e_new_42();\n                    }\n                }\n                if (this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                    if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n                else if (this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                    if (this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if (this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if (Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        }\n        else {\n            if (this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                if (this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_e_l_44 \u003d 0;\n                }\n                else if (this.field_rn_c_g_17 \u003c 200) {\n                    this.field_rn_e_l_44 \u003d 1;\n                }\n                else if (this.field_rn_c_g_17 \u003c 250) {\n                    this.field_rn_e_l_44 \u003d 2;\n                }\n                if (Math.random() \u003c 0.35) {\n                    this.field_rn_e_l_44 \u003d ((3.0 * Math.random()) | 0);\n                }\n            }\n            switch ((this.field_rn_e_l_44)) {\n                case 0:\n                    if (this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                        this.method_rn_c_a_12(1);\n                        this.method_rn_c_a_12(2);\n                    }\n                    break;\n                case 1:\n                    if (this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                        this.method_rn_c_a_12(0);\n                        this.method_rn_c_a_12(2);\n                    }\n                    break;\n                case 2:\n                    var var4 \u003d 860;\n                    if (this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var4) {\n                        this.method_rn_c_a_12(1);\n                    }\n                    if (this.field_rn_c_int_21 \u003e\u003d var4) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    if (this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                        this.method_rn_c_a_12(2);\n                    }\n                    if (this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var4 - 15) {\n                        this.method_rn_c_a_12(0);\n                    }\n            }\n        }\n    };\n    /*private*/ Class_rn_e_3.prototype.method_rn_e_new_42 \u003d function () {\n        if (Math.random() \u003c 0.4) {\n            this.method_rn_c_a_12(2);\n        }\n    };\n    return Class_rn_e_3;\n}(Class_rn_c_1));\nClass_rn_e_3[\"__class\"] \u003d \"Class_rn_e_3\";\nvar Class_rn_b_5 \u003d (function (_super) {\n    __extends(Class_rn_b_5, _super);\n    function Class_rn_b_5() {\n        var _this \u003d _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n        /*private*/ _this.field_rn_b_h_57 \u003d -1;\n        return _this;\n    }\n    Class_rn_b_5.prototype.method_rn_c_a_11 \u003d function () {\n        if (this.field_rn_b_h_57 \u003d\u003d\u003d -1 \u0026\u0026 (this.field_rn_c_void_13 !\u003d\u003d 800 || this.field_rn_c_do_15 !\u003d\u003d 0)) {\n            var var2 \u003d this.method_rn_b_if_53(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);\n            var var1 \u003d void 0;\n            if (var2 \u003c 600) {\n                var1 \u003d 0;\n            }\n            else if (var2 \u003c 700) {\n                var1 \u003d 10;\n            }\n            else {\n                var1 \u003d 20;\n            }\n            if (var2 \u003c 450) {\n                if (Math.abs(this.field_rn_c_int_21 - 666) \u003c 10) {\n                    this.method_rn_c_a_12(3);\n                }\n                else if (666 \u003c this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(0);\n                }\n                else if (666 \u003e this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(1);\n                }\n            }\n            else if (Math.abs(this.field_rn_c_int_21 - var2 - var1) \u003c 10) {\n                this.method_rn_c_a_12(3);\n            }\n            else if (var2 + var1 \u003c this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(0);\n            }\n            else if (var2 + var1 \u003e this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(1);\n            }\n            if ((this.field_rn_c_int_21 \u003c\u003d 900 || Math.random() \u003e\u003d 0.4) \u0026\u0026 var2 \u003e\u003d 620 \u0026\u0026 (this.field_rn_c_else_14 \u003e\u003d 130 || this.field_rn_c_if_16 \u003e\u003d 0) \u0026\u0026 (!this.field_rn_c_f_26 || Math.random() \u003e\u003d 0.6)) {\n                if ((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (this.method_rn_b_for_51(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_b_for_51(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_b_for_51(185) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c (this.field_rn_c_f_26 ? 135 : 150) \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 250) {\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        }\n        else {\n            this.method_rn_b_do_55();\n        }\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_for_51 \u003d function (var1) {\n        return var1 * var1;\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_do_52 \u003d function (var1) {\n        var var2 \u003d 0;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d 0) {\n                return var2;\n            }\n            ++var2;\n        }\n        ;\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_if_53 \u003d function (var1) {\n        var var2 \u003d this.field_rn_c_void_13;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            var2 +\u003d this.field_rn_c_do_15;\n            if (var2 \u003c\u003d 0) {\n                var2 \u003d 0;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n            else if (var2 \u003e\u003d 1000) {\n                var2 \u003d 1000;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n        }\n        ;\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_for_54 \u003d function () {\n        var var1 \u003d this.field_rn_c_int_21 - this.field_rn_c_void_13;\n        var var2 \u003d this.field_rn_c_for_22 - this.field_rn_c_else_14;\n        return (Math.sqrt((var1 * var1 + var2 * var2)) | 0);\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_do_55 \u003d function () {\n        if (this.field_rn_b_h_57 \u003d\u003d\u003d -1) {\n            if (Math.random() \u003c 0.3) {\n                if (this.field_rn_c_g_17 \u003c 300 \u0026\u0026 !this.field_rn_c_f_26) {\n                    this.field_rn_b_h_57 \u003d 0;\n                }\n                else if (this.field_rn_c_g_17 \u003e 200) {\n                    this.field_rn_b_h_57 \u003d 1;\n                }\n                else {\n                    this.field_rn_b_h_57 \u003d 2;\n                }\n            }\n            else {\n                this.field_rn_b_h_57 \u003d 2;\n            }\n            if (this.field_rn_b_h_57 \u003d\u003d\u003d -1 || Math.random() \u003c 0.3) {\n                this.field_rn_b_h_57 \u003d ((Math.random() * 3.0) | 0);\n            }\n            if (this.field_rn_c_f_26 \u0026\u0026 this.field_rn_b_h_57 \u003d\u003d\u003d 0) {\n                this.field_rn_b_h_57 \u003d 1 + ((Math.random() * 2.0) | 0);\n            }\n        }\n        var var1;\n        switch ((this.field_rn_b_h_57)) {\n            case 0:\n            case 1:\n                var var2 \u003d this.field_rn_b_h_57 \u003d\u003d\u003d 0 ? 860 : 840;\n                if (this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var2) {\n                    this.method_rn_c_a_12(1);\n                }\n                if (this.field_rn_c_int_21 \u003e\u003d var2) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var2 - 15 \u0026\u0026 this.field_rn_b_h_57 \u003d\u003d\u003d 0) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_void_13 \u003c 700) {\n                    this.field_rn_b_h_57 \u003d -1;\n                }\n                break;\n            case 2:\n                var var3 \u003d 770;\n                if (this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003e var3) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var3) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_if_16 \u003d\u003d\u003d -2 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_void_13 \u003e 800) {\n                    this.field_rn_b_h_57 \u003d 3 + this.method_rn_b_if_56();\n                }\n                break;\n            case 3:\n                var1 \u003d !this.field_rn_c_f_26 ? 585 : 555;\n                if (this.field_rn_c_int_21 \u003e var1) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var1) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c\u003d (!this.field_rn_c_f_26 ? 730 : 740)) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_void_13 \u003c 540) {\n                    this.field_rn_b_h_57 \u003d -1;\n                }\n                break;\n            case 4:\n                var1 \u003d !this.field_rn_c_f_26 ? 585 : 555;\n                if (this.field_rn_c_int_21 \u003e var1) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var1) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c\u003d (!this.field_rn_c_f_26 ? 730 : 700)) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_void_13 \u003c 600) {\n                    this.method_rn_c_a_12(1);\n                }\n                if (this.field_rn_c_void_13 \u003c 580) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c 540) {\n                    this.field_rn_b_h_57 \u003d -1;\n                }\n        }\n    };\n    /*private*/ Class_rn_b_5.prototype.method_rn_b_if_56 \u003d function () {\n        var var1 \u003d false;\n        if (this.field_rn_c_g_17 \u003c 200) {\n            var1 \u003d Math.random() \u003c 0.7;\n        }\n        else if (this.field_rn_c_g_17 \u003e 300) {\n            var1 \u003d Math.random() \u003c 0.3;\n        }\n        else {\n            var1 \u003d Math.random() \u003c 0.5;\n        }\n        return var1 ? 1 : 0;\n    };\n    return Class_rn_b_5;\n}(Class_rn_c_1));\nClass_rn_b_5[\"__class\"] \u003d \"Class_rn_b_5\";\nvar Class_rn_a_6 \u003d (function (_super) {\n    __extends(Class_rn_a_6, _super);\n    function Class_rn_a_6() {\n        var _this \u003d _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n        /*private*/ _this.field_rn_a_o_64 \u003d -1;\n        return _this;\n    }\n    Class_rn_a_6.prototype.method_rn_c_a_11 \u003d function () {\n        if (this.field_rn_a_o_64 \u003d\u003d\u003d -1 \u0026\u0026 (this.field_rn_c_void_13 !\u003d\u003d 800 || this.field_rn_c_do_15 !\u003d\u003d 0)) {\n            var var2 \u003d this.method_rn_a_void_60(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);\n            var var1 \u003d void 0;\n            if (var2 \u003c 600) {\n                var1 \u003d 0;\n            }\n            else if (var2 \u003c 700) {\n                var1 \u003d 10;\n            }\n            else {\n                var1 \u003d 20;\n            }\n            if (var2 \u003c 450) {\n                if (Math.abs(this.field_rn_c_int_21 - 666) \u003c 10) {\n                    this.method_rn_c_a_12(3);\n                }\n                else if (666 \u003c this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(0);\n                }\n                else if (666 \u003e this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(1);\n                }\n            }\n            else if (Math.abs(this.field_rn_c_int_21 - var2 - var1) \u003c 10) {\n                this.method_rn_c_a_12(3);\n            }\n            else if (var2 + var1 \u003c this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(0);\n            }\n            else if (var2 + var1 \u003e this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(1);\n            }\n            if ((this.field_rn_c_int_21 \u003c\u003d 900 || Math.random() \u003e\u003d 0.4) \u0026\u0026 var2 \u003e\u003d 720 \u0026\u0026 (this.field_rn_c_else_14 \u003e\u003d 150 || this.field_rn_c_if_16 \u003c\u003d -3)) {\n                if ((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (this.method_rn_a_c_58(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_a_c_58(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_a_c_58(185) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                }\n                else if (Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 250) {\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        }\n        else {\n            this.method_rn_a_case_62();\n        }\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_c_58 \u003d function (var1) {\n        return var1 * var1;\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_b_59 \u003d function (var1) {\n        var var2 \u003d 0;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d 0) {\n                return var2;\n            }\n            ++var2;\n        }\n        ;\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_void_60 \u003d function (var1) {\n        var var2 \u003d this.field_rn_c_void_13;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            var2 +\u003d this.field_rn_c_do_15;\n            if (var2 \u003c\u003d 0) {\n                var2 \u003d 0;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n            else if (var2 \u003e\u003d 1000) {\n                var2 \u003d 1000;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n        }\n        ;\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_char_61 \u003d function () {\n        var var1 \u003d this.field_rn_c_int_21 - this.field_rn_c_void_13;\n        var var2 \u003d this.field_rn_c_for_22 - this.field_rn_c_else_14;\n        return (Math.sqrt((var1 * var1 + var2 * var2)) | 0);\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_case_62 \u003d function () {\n        if (this.field_rn_a_o_64 \u003d\u003d\u003d -1) {\n            if (Math.random() \u003c 0.3) {\n                if (this.field_rn_c_g_17 \u003c 300) {\n                    this.field_rn_a_o_64 \u003d 0;\n                }\n                else if (this.field_rn_c_g_17 \u003e 200) {\n                    this.field_rn_a_o_64 \u003d 1;\n                }\n                else {\n                    this.field_rn_a_o_64 \u003d 2;\n                }\n            }\n            else {\n                this.field_rn_a_o_64 \u003d 2;\n            }\n            if (this.field_rn_a_o_64 \u003d\u003d\u003d -1 || Math.random() \u003c 0.3) {\n                this.field_rn_a_o_64 \u003d ((Math.random() * 3.0) | 0);\n            }\n        }\n        var var1;\n        switch ((this.field_rn_a_o_64)) {\n            case 0:\n            case 1:\n                var var2 \u003d this.field_rn_a_o_64 \u003d\u003d\u003d 0 ? 860 : 840;\n                if (this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var2) {\n                    this.method_rn_c_a_12(1);\n                }\n                if (this.field_rn_c_int_21 \u003e\u003d var2) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var2 - 15 \u0026\u0026 this.field_rn_a_o_64 \u003d\u003d\u003d 0) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_void_13 \u003c 700) {\n                    this.field_rn_a_o_64 \u003d -1;\n                }\n                break;\n            case 2:\n                var1 \u003d 770;\n                if (this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003e var1) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var1) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_if_16 \u003d\u003d\u003d -2 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_void_13 \u003e 800) {\n                    this.field_rn_a_o_64 \u003d 3 + this.method_rn_a_byte_63();\n                }\n                break;\n            case 3:\n                var1 \u003d 585;\n                if (this.field_rn_c_int_21 \u003e var1) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var1) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c\u003d 730) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_void_13 \u003c 600) {\n                    this.method_rn_c_a_12(1);\n                }\n                if (this.field_rn_c_void_13 \u003c 580) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c 540) {\n                    this.field_rn_a_o_64 \u003d -1;\n                }\n            case 4:\n                var1 \u003d 585;\n                if (this.field_rn_c_int_21 \u003e var1) {\n                    this.method_rn_c_a_12(0);\n                }\n                if (this.field_rn_c_int_21 \u003c\u003d var1) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c\u003d 755) {\n                    this.method_rn_c_a_12(2);\n                }\n                if (this.field_rn_c_void_13 \u003c 600) {\n                    this.method_rn_c_a_12(1);\n                }\n                if (this.field_rn_c_void_13 \u003c 580) {\n                    this.method_rn_c_a_12(3);\n                }\n                if (this.field_rn_c_void_13 \u003c 540) {\n                    this.field_rn_a_o_64 \u003d -1;\n                }\n        }\n    };\n    /*private*/ Class_rn_a_6.prototype.method_rn_a_byte_63 \u003d function () {\n        var var1 \u003d 0;\n        if (this.field_rn_c_g_17 \u003c 200) {\n            var1 \u003d 1;\n        }\n        else if (this.field_rn_c_g_17 \u003e 300) {\n            var1 \u003d 0;\n        }\n        if (Math.random() \u003c 0.35) {\n            var1 \u003d 1 - var1;\n        }\n        return var1;\n    };\n    return Class_rn_a_6;\n}(Class_rn_c_1));\nClass_rn_a_6[\"__class\"] \u003d \"Class_rn_a_6\";\nvar Class_rn_d_4 \u003d (function (_super) {\n    __extends(Class_rn_d_4, _super);\n    function Class_rn_d_4() {\n        var _this \u003d _super !\u003d\u003d null \u0026\u0026 _super.apply(this, arguments) || this;\n        /*private*/ _this.field_rn_d_i_49 \u003d 0.85;\n        /*private*/ _this.field_rn_d_j_50 \u003d -1;\n        return _this;\n    }\n    /*private*/ Class_rn_d_4.prototype.method_rn_d_try_45 \u003d function (var1) {\n        return var1 * var1;\n    };\n    /*private*/ Class_rn_d_4.prototype.method_rn_d_new_46 \u003d function (var1) {\n        var var2 \u003d 0;\n        var var3 \u003d this.field_rn_c_else_14;\n        var var4 \u003d this.field_rn_c_if_16;\n        while ((true)) {\n            --var4;\n            if ((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        }\n        ;\n    };\n    /*private*/ Class_rn_d_4.prototype.method_rn_d_int_47 \u003d function (var1) {\n        var var2 \u003d this.method_rn_d_new_46(var1);\n        var var3 \u003d this.field_rn_c_void_13;\n        var var4 \u003d this.field_rn_c_do_15;\n        for (var var5 \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if (var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            }\n            else if (var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        }\n        ;\n        return var3;\n    };\n    Class_rn_d_4.prototype.method_rn_c_a_11 \u003d function () {\n        if (this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_d_j_50 !\u003d\u003d -1) {\n            this.field_rn_d_j_50 \u003d -1;\n        }\n        var var1 \u003d this.method_rn_d_int_47(125);\n        var var2 \u003d this.method_rn_d_new_46(125);\n        var var3;\n        if (this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        }\n        else {\n            var3 \u003d 25 + ((10.0 * Math.random()) | 0);\n        }\n        if ((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n            if (var1 \u003c 500) {\n                if (Math.abs(this.field_rn_c_int_21 - 666) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                }\n                else if (this.field_rn_c_int_21 \u003e 666) {\n                    this.method_rn_c_a_12(0);\n                }\n                else if (this.field_rn_c_int_21 \u003c 666) {\n                    this.method_rn_c_a_12(1);\n                }\n            }\n            else {\n                if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if (this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if ((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_d_int_48();\n                    }\n                    else if (this.method_rn_d_try_45(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_d_try_45(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_d_try_45(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_d_int_48();\n                    }\n                    else if (this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_d_int_48();\n                    }\n                    else if (Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.666) {\n                        this.method_rn_d_int_48();\n                    }\n                }\n                if (this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                    if (Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n                else if (this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                    if (this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if (this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if (Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    }\n                    else if (this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    }\n                    else if (this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        }\n        else {\n            if (this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                if (this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_d_j_50 \u003d 0;\n                }\n                else {\n                    this.field_rn_d_j_50 \u003d 1;\n                }\n                if (Math.random() \u003c 0.35) {\n                    this.field_rn_d_j_50 \u003d ((2.0 * Math.random()) | 0);\n                }\n            }\n            switch ((this.field_rn_d_j_50)) {\n                case 0:\n                    if (this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                        this.method_rn_c_a_12(1);\n                        this.method_rn_c_a_12(2);\n                    }\n                    break;\n                case 1:\n                    if (this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                        this.method_rn_c_a_12(0);\n                        this.method_rn_c_a_12(2);\n                    }\n            }\n        }\n    };\n    /*private*/ Class_rn_d_4.prototype.method_rn_d_int_48 \u003d function () {\n        if (Math.random() \u003c 0.85) {\n            this.method_rn_c_a_12(2);\n        }\n    };\n    return Class_rn_d_4;\n}(Class_rn_c_1));\nClass_rn_d_4[\"__class\"] \u003d \"Class_rn_d_4\";\nvar ServerCheck \u003d (function (_super) {\n    __extends(ServerCheck, _super);\n    function ServerCheck() {\n        var _this \u003d _super.call(this) || this;\n        _this.field_rn_ServerCheck_ok_76 \u003d null;\n        _this.setLayout(new ShimmedGridLayout(4, 1));\n        var var1 \u003d new ShimmedPanel();\n        var1.add(new ShimmedLabel(\"Couldn\\\u0027t connect to server!\"));\n        _this.add(var1);\n        var var2 \u003d new ShimmedPanel();\n        var2.add(new ShimmedLabel(\"Your high scores may not be saved on the server.\"));\n        _this.add(var2);\n        var var3 \u003d new ShimmedPanel();\n        var3.add(new ShimmedLabel(\"To fix this, close all browser windows and try again.\"));\n        _this.setTitle(\"Error!\");\n        _this.field_rn_ServerCheck_ok_76 \u003d new ShimmedButton(\"Damn. Oh well if that\\\u0027s how it is...\");\n        _this.add(var3);\n        _this.add(_this.field_rn_ServerCheck_ok_76);\n        _this.pack();\n        _this.show();\n        return _this;\n    }\n    ServerCheck.prototype.action \u003d function (var1, var2) {\n        if (var1.target \u003d\u003d\u003d this.field_rn_ServerCheck_ok_76) {\n            this.dispose();\n        }\n        return false;\n    };\n    return ServerCheck;\n}(ShimmedFrame));\nServerCheck[\"__class\"] \u003d \"ServerCheck\";\nvar NameFrame \u003d (function (_super) {\n    __extends(NameFrame, _super);\n    function NameFrame(var1, var2, var4) {\n        var _this \u003d this;\n        if (((var1 !\u003d null \u0026\u0026 var1 instanceof Slime1P) || var1 \u003d\u003d\u003d null) \u0026\u0026 ((typeof var2 \u003d\u003d\u003d \u0027number\u0027) || var2 \u003d\u003d\u003d null) \u0026\u0026 ((typeof var4 \u003d\u003d\u003d \u0027number\u0027) || var4 \u003d\u003d\u003d null)) {\n            var __args \u003d Array.prototype.slice.call(arguments);\n            _this \u003d _super.call(this) || this;\n            _this.app \u003d null;\n            _this.name \u003d null;\n            _this.field_rn_NameFrame_ok_110 \u003d null;\n            _this.score \u003d 0;\n            _this.level \u003d 0;\n            _this.app \u003d null;\n            _this.name \u003d null;\n            _this.field_rn_NameFrame_ok_110 \u003d null;\n            _this.score \u003d 0;\n            _this.level \u003d 0;\n            (function () {\n                _this.app \u003d var1;\n                _this.score \u003d var2;\n                _this.level \u003d var4;\n                _this.setLayout(new ShimmedGridLayout(2, 1));\n                var var5 \u003d new ShimmedPanel();\n                var5.add(new ShimmedLabel(\"Your score: \" + var2));\n                _this.add(var5);\n                var var6 \u003d new ShimmedPanel();\n                var6.add(new ShimmedLabel(\"Enter your name:\"));\n                _this.name \u003d new ShimmedTextField(20);\n                var6.add(_this.name);\n                _this.field_rn_NameFrame_ok_110 \u003d new ShimmedButton(\"OK\");\n                var6.add(_this.field_rn_NameFrame_ok_110);\n                _this.add(var6);\n                _this.setTitle(\"New High Score!\");\n                _this.pack();\n                _this.show();\n            })();\n        }\n        else if (var1 \u003d\u003d\u003d undefined \u0026\u0026 var2 \u003d\u003d\u003d undefined \u0026\u0026 var4 \u003d\u003d\u003d undefined) {\n            var __args \u003d Array.prototype.slice.call(arguments);\n            _this \u003d _super.call(this) || this;\n            _this.app \u003d null;\n            _this.name \u003d null;\n            _this.field_rn_NameFrame_ok_110 \u003d null;\n            _this.score \u003d 0;\n            _this.level \u003d 0;\n            _this.app \u003d null;\n            _this.name \u003d null;\n            _this.field_rn_NameFrame_ok_110 \u003d null;\n            _this.score \u003d 0;\n            _this.level \u003d 0;\n        }\n        else\n            throw new Error(\u0027invalid overload\u0027);\n        return _this;\n    }\n    NameFrame.prototype.action \u003d function (var1, var2) {\n        if (var1.target \u003d\u003d\u003d this.field_rn_NameFrame_ok_110) {\n            Class_rn_g_7.method_rn_g_a_67(this.app, this.score, Math.floor(this.level), this.name.getText());\n            this.dispose();\n        }\n        return false;\n    };\n    return NameFrame;\n}(ShimmedFrame));\nNameFrame[\"__class\"] \u003d \"NameFrame\";\nClass_rn_g_7.field_rn_g_if_75_$LI$();\n",
  "tsout": "/* Generated from Java with JSweet 2.0.0 - http://www.jsweet.org */\nclass ShimmedSize {\n    public width : number;\n\n    public height : number;\n\n    constructor() {\n        this.width \u003d 0;\n        this.height \u003d 0;\n    }\n}\nShimmedSize[\"__class\"] \u003d \"ShimmedSize\";\n\n\nclass ShimmedApplet {\n    public size() : ShimmedSize {\n        return null;\n    }\n\n    public createImage(x : number, y : number) : ShimmedImage {\n        return null;\n    }\n\n    public showStatus(s : string) {\n    }\n\n    public repaint() {\n    }\n\n    public getGraphics() : ShimmedGraphics {\n        return null;\n    }\n\n    public requestFocus() {\n    }\n\n    public getWidth() : number {\n        return 0;\n    }\n\n    public getHeight() : number {\n        return 0;\n    }\n\n    public getDocumentBase() : ShimmedDocumentBase {\n        return null;\n    }\n\n    public getAppletContext() : ShimmedAppletContext {\n        return null;\n    }\n\n    public getCodeBase() : ShimmedURL {\n        return null;\n    }\n\n    public getAudioClip(u : ShimmedURL, s : string) : ShimmedAudioClip {\n        return null;\n    }\n\n    public getImage(u : ShimmedURL, s : string) : ShimmedImage {\n        return null;\n    }\n}\nShimmedApplet[\"__class\"] \u003d \"ShimmedApplet\";\n\n\nclass ShimmedColor {\n    public static yellow : ShimmedColor \u003d null;\n\n    public static black : ShimmedColor \u003d null;\n\n    public static red : ShimmedColor \u003d null;\n\n    public static gray : ShimmedColor \u003d null;\n\n    public static white : ShimmedColor \u003d null;\n\n    public static blue : ShimmedColor \u003d null;\n\n    public static green : ShimmedColor \u003d null;\n\n    public static pink : ShimmedColor \u003d null;\n\n    public static cyan : ShimmedColor \u003d null;\n\n    public static lightGray : ShimmedColor \u003d null;\n\n    public static darkGray : ShimmedColor \u003d null;\n\n    public static orange : ShimmedColor \u003d null;\n\n    public constructor(r : number, g : number, b : number) {\n    }\n}\nShimmedColor[\"__class\"] \u003d \"ShimmedColor\";\n\n\nclass ShimmedGraphics {\n    public getFont() : ShimmedFont {\n        return null;\n    }\n\n    public setFont(f : ShimmedFont) {\n    }\n\n    public setColor(c : ShimmedColor) {\n    }\n\n    public fillRect(x : number, y : number, w : number, h : number) {\n    }\n\n    public getFontMetrics() : ShimmedFontMetrics {\n        return null;\n    }\n\n    public drawString(s : string, x : number, y : number) {\n    }\n\n    public drawImage(i : ShimmedImage, x : number, y : number, o : any) {\n    }\n\n    public drawOval(x : number, y : number, w : number, h : number) {\n    }\n\n    public fillOval(x : number, y : number, w : number, h : number) {\n    }\n\n    public fillArc(x : number, y : number, w : number, h : number, s : number, e : number) {\n    }\n\n    public drawLine(x : number, y : number, w : number, h : number) {\n    }\n\n    public drawRect(x : number, y : number, w : number, h : number) {\n    }\n\n    public fillPolygon$int_A$int_A$int(xs : number[], ys : number[], n : number) {\n    }\n\n    public fillPolygon(xs? : any, ys? : any, n? : any) : any {\n        if(((xs !\u003d null \u0026\u0026 xs instanceof \u003cany\u003eArray \u0026\u0026 (xs.length\u003d\u003d0 || xs[0] \u003d\u003d null ||(typeof xs[0] \u003d\u003d\u003d \u0027number\u0027))) || xs \u003d\u003d\u003d null) \u0026\u0026 ((ys !\u003d null \u0026\u0026 ys instanceof \u003cany\u003eArray \u0026\u0026 (ys.length\u003d\u003d0 || ys[0] \u003d\u003d null ||(typeof ys[0] \u003d\u003d\u003d \u0027number\u0027))) || ys \u003d\u003d\u003d null) \u0026\u0026 ((typeof n \u003d\u003d\u003d \u0027number\u0027) || n \u003d\u003d\u003d null)) {\n            return \u003cany\u003ethis.fillPolygon$int_A$int_A$int(xs, ys, n);\n        } else if(((xs !\u003d null \u0026\u0026 xs instanceof \u003cany\u003eShimmedPolygon) || xs \u003d\u003d\u003d null) \u0026\u0026 ys \u003d\u003d\u003d undefined \u0026\u0026 n \u003d\u003d\u003d undefined) {\n            return \u003cany\u003ethis.fillPolygon$ShimmedPolygon(xs);\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n\n    public fillPolygon$ShimmedPolygon(p : ShimmedPolygon) {\n    }\n\n    public drawArc(x : number, y : number, w : number, h : number, s : number, e : number) {\n    }\n}\nShimmedGraphics[\"__class\"] \u003d \"ShimmedGraphics\";\n\n\nclass ShimmedImage {\n    public getGraphics() : ShimmedGraphics {\n        return null;\n    }\n\n    public getHeight(a : ShimmedApplet) : number {\n        return 0;\n    }\n}\nShimmedImage[\"__class\"] \u003d \"ShimmedImage\";\n\n\nclass ShimmedEvent {\n    public id : number;\n\n    public x : number;\n\n    public y : number;\n\n    public key : number;\n\n    public target : ShimmedButton;\n\n    public static KEY_ACTION : number \u003d 0;\n\n    public static LEFT : number \u003d 1;\n\n    public static RIGHT : number \u003d 2;\n\n    public static UP : number \u003d 3;\n\n    public static DOWN : number \u003d 4;\n\n    public static KEY_ACTION_RELEASE : number \u003d 5;\n\n    constructor() {\n        this.id \u003d 0;\n        this.x \u003d 0;\n        this.y \u003d 0;\n        this.key \u003d 0;\n        this.target \u003d null;\n    }\n}\nShimmedEvent[\"__class\"] \u003d \"ShimmedEvent\";\n\n\nclass ShimmedFont {\n    public getName() : string {\n        return null;\n    }\n\n    public constructor(name : string, w : number, h : number) {\n    }\n}\nShimmedFont[\"__class\"] \u003d \"ShimmedFont\";\n\n\nclass ShimmedFontMetrics {\n    public getHeight() : number {\n        return 0;\n    }\n\n    public stringWidth(s : string) : number {\n        return 0;\n    }\n\n    public getAscent() : number {\n        return 0;\n    }\n}\nShimmedFontMetrics[\"__class\"] \u003d \"ShimmedFontMetrics\";\n\n\nclass ShimmedThread {\n    public static sleep$long(ms : number) {\n    }\n\n    public static sleep$long$boolean(ms : number, b : boolean) {\n    }\n\n    public static sleep(ms? : any, b? : any) : any {\n        if(((typeof ms \u003d\u003d\u003d \u0027number\u0027) || ms \u003d\u003d\u003d null) \u0026\u0026 ((typeof b \u003d\u003d\u003d \u0027boolean\u0027) || b \u003d\u003d\u003d null)) {\n            return \u003cany\u003eShimmedThread.sleep$long$boolean(ms, b);\n        } else if(((typeof ms \u003d\u003d\u003d \u0027number\u0027) || ms \u003d\u003d\u003d null) \u0026\u0026 b \u003d\u003d\u003d undefined) {\n            return \u003cany\u003eShimmedThread.sleep$long(ms);\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n\n    public constructor(r : ShimmedRunnable) {\n    }\n\n    public start() {\n    }\n\n    public stop() {\n    }\n}\nShimmedThread[\"__class\"] \u003d \"ShimmedThread\";\n\n\ninterface ShimmedRunnable {}\n\nclass ShimmedAppletContext {\n    public showDocument$ShimmedURL(u : ShimmedURL) {\n    }\n\n    public showDocument$ShimmedURL$java_lang_String(u : ShimmedURL, s : string) {\n    }\n\n    public showDocument(u? : any, s? : any) : any {\n        if(((u !\u003d null \u0026\u0026 u instanceof \u003cany\u003eShimmedURL) || u \u003d\u003d\u003d null) \u0026\u0026 ((typeof s \u003d\u003d\u003d \u0027string\u0027) || s \u003d\u003d\u003d null)) {\n            return \u003cany\u003ethis.showDocument$ShimmedURL$java_lang_String(u, s);\n        } else if(((u !\u003d null \u0026\u0026 u instanceof \u003cany\u003eShimmedURL) || u \u003d\u003d\u003d null) \u0026\u0026 s \u003d\u003d\u003d undefined) {\n            return \u003cany\u003ethis.showDocument$ShimmedURL(u);\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n}\nShimmedAppletContext[\"__class\"] \u003d \"ShimmedAppletContext\";\n\n\nclass ShimmedDocumentBase {\n    public getHost() : string {\n        return null;\n    }\n}\nShimmedDocumentBase[\"__class\"] \u003d \"ShimmedDocumentBase\";\n\n\nclass ShimmedURL {\n    public constructor(s : string) {\n    }\n\n    public openStream() : ShimmedInputStream {\n        return null;\n    }\n}\nShimmedURL[\"__class\"] \u003d \"ShimmedURL\";\n\n\nclass ShimmedPrintStream {\n    public print(s : any) : any {\n        return null;\n    }\n\n    public println$() : any {\n        return null;\n    }\n\n    public println$java_lang_Object(s : any) : any {\n        return null;\n    }\n\n    public println(s? : any) : any {\n        if(((s !\u003d null) || s \u003d\u003d\u003d null)) {\n            return \u003cany\u003ethis.println$java_lang_Object(s);\n        } else if(s \u003d\u003d\u003d undefined) {\n            return \u003cany\u003ethis.println$();\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n}\nShimmedPrintStream[\"__class\"] \u003d \"ShimmedPrintStream\";\n\n\nclass ShimmedSystem {\n    public static out : ShimmedPrintStream \u003d null;\n\n    public static currentTimeMillis() : number {\n        return 0;\n    }\n}\nShimmedSystem[\"__class\"] \u003d \"ShimmedSystem\";\n\n\nclass ShimmedVector {\n    public constructor(n : number) {\n    }\n\n    public removeAllElements() {\n    }\n\n    public get(i : number) : any {\n        return null;\n    }\n\n    public size() : number {\n        return 0;\n    }\n\n    public add(x : number[]) {\n    }\n}\nShimmedVector[\"__class\"] \u003d \"ShimmedVector\";\n\n\nclass ShimmedElement {\n    public add(e : ShimmedElement) {\n    }\n}\nShimmedElement[\"__class\"] \u003d \"ShimmedElement\";\n\n\nclass ShimmedPolygon {\n    public constructor(xs : number[], ys : number[], n : number) {\n    }\n}\nShimmedPolygon[\"__class\"] \u003d \"ShimmedPolygon\";\n\n\nclass ShimmedInputStream {\n    public close() {\n    }\n}\nShimmedInputStream[\"__class\"] \u003d \"ShimmedInputStream\";\n\n\nclass ShimmedBufferedReader {\n    public constructor(i : ShimmedInputStreamReader) {\n    }\n\n    public readLine() : string {\n        return null;\n    }\n\n    public close() {\n    }\n}\nShimmedBufferedReader[\"__class\"] \u003d \"ShimmedBufferedReader\";\n\n\nclass ShimmedInputStreamReader {\n    public constructor(is : ShimmedInputStream) {\n    }\n}\nShimmedInputStreamReader[\"__class\"] \u003d \"ShimmedInputStreamReader\";\n\n\nclass ShimmedGridLayout {\n    public constructor(x : number, y : number) {\n    }\n}\nShimmedGridLayout[\"__class\"] \u003d \"ShimmedGridLayout\";\n\n\nclass ShimmedLong {\n    public static parseLong(s : string) : number {\n        return 0;\n    }\n}\nShimmedLong[\"__class\"] \u003d \"ShimmedLong\";\n\n\nclass ShimmedChars {\n    /**\n     * Replacement for .toCharArray() which returns chars, when actually we (probably/hopefully) want ints.\n     * @param {string} s\n     * @return {Array}\n     */\n    public static charCodeArray(s : string) : string[] {\n        return null;\n    }\n}\nShimmedChars[\"__class\"] \u003d \"ShimmedChars\";\n\n\nclass ShimmedImageObserver {}\nShimmedImageObserver[\"__class\"] \u003d \"ShimmedImageObserver\";\n\n\nclass ShimmedRandom {\n    public nextInt(m : number) : number {\n        return 0;\n    }\n}\nShimmedRandom[\"__class\"] \u003d \"ShimmedRandom\";\n\n\nclass ShimmedAudioClip {\n    public play() {\n    }\n}\nShimmedAudioClip[\"__class\"] \u003d \"ShimmedAudioClip\";\n\n\nclass ShimmedStringBuffer {\n    public constructor(i? : any) {\n        if(((i !\u003d null) || i \u003d\u003d\u003d null)) {\n            let __args \u003d Array.prototype.slice.call(arguments);\n        } else if(i \u003d\u003d\u003d undefined) {\n            let __args \u003d Array.prototype.slice.call(arguments);\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n\n    public append(s : any) : ShimmedStringBuffer {\n        return null;\n    }\n}\nShimmedStringBuffer[\"__class\"] \u003d \"ShimmedStringBuffer\";\n\n\nclass EndOfShimDeclarations {}\nEndOfShimDeclarations[\"__class\"] \u003d \"EndOfShimDeclarations\";\n\n\nabstract class Class_rn_c_1 {\n    field_rn_c_void_13 : number;\n\n    field_rn_c_else_14 : number;\n\n    field_rn_c_do_15 : number;\n\n    field_rn_c_if_16 : number;\n\n    field_rn_c_g_17 : number;\n\n    field_rn_c_e_18 : number;\n\n    field_rn_c_byte_19 : number;\n\n    field_rn_c_try_20 : number;\n\n    field_rn_c_int_21 : number;\n\n    field_rn_c_for_22 : number;\n\n    field_rn_c_d_23 : number;\n\n    field_rn_c_b_24 : number;\n\n    field_rn_c_new_25 : boolean;\n\n    field_rn_c_f_26 : boolean;\n\n    /*private*/ field_rn_c_c_27 : number;\n\n    /*private*/ field_rn_c_case_28 : Slime1P;\n\n    public static field_rn_c_goto_29 : number \u003d 0;\n\n    public static field_rn_c_char_30 : number \u003d 1;\n\n    public static field_rn_c_long_31 : number \u003d 2;\n\n    public static field_rn_c_a_32 : number \u003d 3;\n\n    public method_rn_c_a_9(var1 : Slime1P, var2 : number) {\n        this.field_rn_c_case_28 \u003d var1;\n        this.field_rn_c_c_27 \u003d var2;\n    }\n\n    public method_rn_c_a_10(var1 : number[], var2 : boolean, var3 : boolean) {\n        this.field_rn_c_void_13 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[0]:1000 - var1[0];\n        this.field_rn_c_else_14 \u003d var1[1];\n        this.field_rn_c_do_15 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[2]:-var1[2];\n        this.field_rn_c_if_16 \u003d var1[3];\n        this.field_rn_c_g_17 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[4]:1000 - var1[8];\n        this.field_rn_c_e_18 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[5]:var1[9];\n        this.field_rn_c_byte_19 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[6]:-var1[10];\n        this.field_rn_c_try_20 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[7]:var1[11];\n        this.field_rn_c_int_21 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[8]:1000 - var1[4];\n        this.field_rn_c_for_22 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[9]:var1[5];\n        this.field_rn_c_d_23 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[10]:-var1[6];\n        this.field_rn_c_b_24 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var1[11]:var1[7];\n        this.field_rn_c_new_25 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var2:var3;\n        this.field_rn_c_f_26 \u003d this.field_rn_c_c_27 \u003d\u003d\u003d 2?var3:var2;\n    }\n\n    public abstract method_rn_c_a_11();\n\n    method_rn_c_a_12(var1 : number) {\n        if(this.field_rn_c_c_27 \u003d\u003d\u003d 1) {\n            switch((var1)) {\n            case 0:\n                this.field_rn_c_case_28.method_rn_Slime1P_b_82();\n                break;\n            case 1:\n                this.field_rn_c_case_28.method_rn_Slime1P_c_81();\n                break;\n            case 2:\n                this.field_rn_c_case_28.method_rn_Slime1P_char_84();\n                break;\n            case 3:\n                this.field_rn_c_case_28.method_rn_Slime1P_try_83();\n            }\n        } else if(this.field_rn_c_c_27 \u003d\u003d\u003d 2) {\n            switch((var1)) {\n            case 0:\n                this.field_rn_c_case_28.method_rn_Slime1P_e_85();\n                break;\n            case 1:\n                this.field_rn_c_case_28.method_rn_Slime1P_j_86();\n                break;\n            case 2:\n                this.field_rn_c_case_28.method_rn_Slime1P_long_88();\n                break;\n            case 3:\n                this.field_rn_c_case_28.method_rn_Slime1P_else_87();\n            }\n        }\n    }\n\n    constructor() {\n        this.field_rn_c_void_13 \u003d 0;\n        this.field_rn_c_else_14 \u003d 0;\n        this.field_rn_c_do_15 \u003d 0;\n        this.field_rn_c_if_16 \u003d 0;\n        this.field_rn_c_g_17 \u003d 0;\n        this.field_rn_c_e_18 \u003d 0;\n        this.field_rn_c_byte_19 \u003d 0;\n        this.field_rn_c_try_20 \u003d 0;\n        this.field_rn_c_int_21 \u003d 0;\n        this.field_rn_c_for_22 \u003d 0;\n        this.field_rn_c_d_23 \u003d 0;\n        this.field_rn_c_b_24 \u003d 0;\n        this.field_rn_c_new_25 \u003d false;\n        this.field_rn_c_f_26 \u003d false;\n        this.field_rn_c_c_27 \u003d 0;\n        this.field_rn_c_case_28 \u003d null;\n    }\n}\nClass_rn_c_1[\"__class\"] \u003d \"Class_rn_c_1\";\n\n\nclass Class_rn_g_7 {\n    field_rn_g_do_73 : boolean \u003d true;\n\n    field_rn_g_a_74 : boolean \u003d true;\n\n    static field_rn_g_if_75 : string[]; public static field_rn_g_if_75_$LI$() : string[] { if(Class_rn_g_7.field_rn_g_if_75 \u003d\u003d null) Class_rn_g_7.field_rn_g_if_75 \u003d [\u0027r\u0027, \u0027o\u0027, \u0027\u003e\u0027, \u0027\u003c\u0027, \u0027o\u0027, \u0027r\u0027, \u0027z\u0027]; return Class_rn_g_7.field_rn_g_if_75; };\n\n    public static method_rn_g_a_65() : boolean {\n        return true;\n    }\n\n    public static method_rn_g_a_66(var0 : Slime1P, var1 : number) : boolean {\n        let var3 : number \u003d 1000000;\n        try {\n            let var5 : ShimmedInputStream \u003d (new ShimmedURL(var0.getCodeBase() + \"highscores.php?min\")).openStream();\n            let var6 : ShimmedBufferedReader \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var5));\n            var3 \u003d ShimmedLong.parseLong(var6.readLine());\n            var6.close();\n            var5.close();\n        } catch(var7) {\n            ShimmedSystem.out.println$java_lang_Object(\"Couldn\\\u0027t connect to server!\\n\" + var7);\n            return false;\n        };\n        return var1 \u003e var3;\n    }\n\n    public static method_rn_g_a_67(var0 : Slime1P, var1 : number, var3 : number, var5 : string) {\n        try {\n            let var6 : ShimmedInputStream \u003d (new ShimmedURL(var0.getCodeBase() + \"submitscore.php?scr\u003d\" + var1 + \"\u0026lev\u003d\" + var3 + \"\u0026nam\u003d\" + var5 + \"\u0026danno\u003d\" + Class_rn_g_7.field_rn_g_if_75_$LI$().join(\u0027\u0027) + \"\u0026chk\u003d\" + Class_rn_g_7.method_rn_g_a_70(Class_rn_g_7.method_rn_g_a_68(Class_rn_g_7.method_rn_g_if_69(var5)), var3, var1))).openStream();\n            var6.close();\n        } catch(var7) {\n            ShimmedSystem.out.println$java_lang_Object(\"Couldn\\\u0027t send high score!\\n\" + var7);\n        };\n    }\n\n    /*private*/ static method_rn_g_a_68(var0 : string) : string {\n        let var1 : string \u003d var0.trim();\n        if(var1.length \u003e 20) {\n            var1 \u003d var1.substring(0, 20);\n        }\n        return var1;\n    }\n\n    /*private*/ static method_rn_g_if_69(var0 : string) : string {\n        let var1 : number;\n        let var2 : string;\n        for(var2 \u003d \u003cstring\u003enew String(var0); (var1 \u003d var2.indexOf(\" \")) \u003e\u003d 0; var2 \u003d var2.substring(0, var1) + var2.substring(var1 + 1)) {\n        };\n        return var2;\n    }\n\n    /*private*/ static method_rn_g_a_70(var0 : string, var1 : number, var3 : number) : number {\n        let var5 : number \u003d var3;\n        for(let var7 : number \u003d 0; Math.floor(\u003cnumber\u003evar7) \u003c Class_rn_g_7.method_rn_g_a_71(var1) + 1; ++var7) {\n            var5 \u003d Class_rn_g_7.method_rn_g_if_72(var0, var1, var5);\n        };\n        return var5;\n    }\n\n    /*private*/ static method_rn_g_a_71(var0 : number) : number {\n        return var0 * var0;\n    }\n\n    /*private*/ static method_rn_g_if_72(var0 : string, var1 : number, var3 : number) : number {\n        let var5 : string[] \u003d /* toCharArray */(var0).split(\u0027\u0027);\n        let var6 : number \u003d 0;\n        for(let var8 : number \u003d 0; var8 \u003c var5.length; ++var8) {\n            var6 +\u003d ((var5[var8]).charCodeAt(0) + var1) * var3 % (var1 + 6 + Math.floor(\u003cnumber\u003evar8));\n        };\n        return var6;\n    }\n}\nClass_rn_g_7[\"__class\"] \u003d \"Class_rn_g_7\";\n\n\nclass Class_rn_h_8 {\n    public constructor(var1 : number[][], var2 : number, var3 : number, var4 : number, var5 : number, var6 : ShimmedApplet) {\n        let var7 : number[][] \u003d \u003cany\u003e (function(dims) { let allocate \u003d function(dims) { if(dims.length\u003d\u003d0) { return 0; } else { let array \u003d []; for(let i \u003d 0; i \u003c dims[0]; i++) { array.push(allocate(dims.slice(1))); } return array; }}; return allocate(dims);})([var1.length, var1[0].length]);\n        for(let var8 : number \u003d 0; var8 \u003c var1.length; ++var8) {\n            for(let var9 : number \u003d 0; var9 \u003c var1[0].length; ++var9) {\n                var7[var8][var9] \u003d var1[var8][var9];\n            };\n        };\n        try {\n            let var17 : ShimmedURL \u003d var6.getCodeBase();\n            let var10 : string \u003d \"\" + var2 + \":\" + var3 + \":\" + var4 + \":\" + var5;\n            let var11 : ShimmedURL \u003d new ShimmedURL(var17 + \"newreplay.php?data\u003d\" + var10);\n            let var12 : ShimmedBufferedReader \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var11.openStream()));\n            let var13 : string \u003d var12.readLine().trim();\n            var11 \u003d new ShimmedURL(var17 + \"savefield.php?id\u003d\" + var13 + \"\u0026field\u003dinitial\u0026data\u003d\" + var10);\n            var11.openStream();\n            for(let var14 : number \u003d 0; var14 \u003c 6; ++var14) {\n                var10 \u003d \"id\u003d\" + var13 + \"\u0026field\u003d\";\n                switch((var14)) {\n                case 0:\n                    var10 \u003d var10 + \"p1x\";\n                    break;\n                case 1:\n                    var10 \u003d var10 + \"p1y\";\n                    break;\n                case 2:\n                    var10 \u003d var10 + \"p2x\";\n                    break;\n                case 3:\n                    var10 \u003d var10 + \"p2y\";\n                    break;\n                case 4:\n                    var10 \u003d var10 + \"ballX\";\n                    break;\n                case 5:\n                    var10 \u003d var10 + \"ballY\";\n                }\n                var10 \u003d var10 + \"\u0026data\u003d\" + var7[0][var14];\n                for(let var15 : number \u003d 1; var15 \u003c var1.length; ++var15) {\n                    var10 \u003d var10 + \":\" + (var7[var15][var14] - var7[var15 - 1][var14]);\n                };\n                var11 \u003d new ShimmedURL(var17 + \"savefield.php?\" + var10);\n                var11.openStream();\n            };\n        } catch(var16) {\n        };\n    }\n}\nClass_rn_h_8[\"__class\"] \u003d \"Class_rn_h_8\";\n\n\nclass Slime1P extends ShimmedApplet implements ShimmedRunnable {\n    /*private*/ nWidth : number;\n\n    /*private*/ nHeight : number;\n\n    /*private*/ p1X : number;\n\n    /*private*/ p1Y : number;\n\n    /*private*/ p2X : number;\n\n    /*private*/ p2Y : number;\n\n    /*private*/ p1Diam : number;\n\n    /*private*/ p2Diam : number;\n\n    /*private*/ p1Col : number;\n\n    /*private*/ p2Col : number;\n\n    /*private*/ p1OldX : number;\n\n    /*private*/ p1OldY : number;\n\n    /*private*/ p2OldX : number;\n\n    /*private*/ p2OldY : number;\n\n    /*private*/ p1XV : number;\n\n    /*private*/ p1YV : number;\n\n    /*private*/ p2XV : number;\n\n    /*private*/ p2YV : number;\n\n    /*private*/ ballX : number;\n\n    /*private*/ ballY : number;\n\n    /*private*/ ballVX : number;\n\n    /*private*/ ballVY : number;\n\n    /*private*/ ballOldX : number;\n\n    /*private*/ ballOldY : number;\n\n    /*private*/ screen : ShimmedGraphics;\n\n    /*private*/ promptMsg : string;\n\n    /*private*/ mousePressed : boolean;\n\n    /*private*/ fInPlay : boolean;\n\n    /*private*/ fP1Fire : boolean;\n\n    /*private*/ fP2Fire : boolean;\n\n    /*private*/ superFlash : boolean;\n\n    /*private*/ fP1Touched : boolean;\n\n    /*private*/ fP2Touched : boolean;\n\n    /*private*/ fP1Touches : number;\n\n    /*private*/ fP2Touches : number;\n\n    /*private*/ fP1TouchesTot : number;\n\n    /*private*/ fP2TouchesTot : number;\n\n    /*private*/ fP1Clangers : number;\n\n    /*private*/ fP2Clangers : number;\n\n    /*private*/ fP1Aces : number;\n\n    /*private*/ fP2Aces : number;\n\n    /*private*/ fP1Winners : number;\n\n    /*private*/ fP2Winners : number;\n\n    /*private*/ fP1PointsWon : number;\n\n    /*private*/ fP2PointsWon : number;\n\n    /*private*/ fP1HitStill : boolean;\n\n    /*private*/ fP2HitStill : boolean;\n\n    /*private*/ fP1Frames : number;\n\n    /*private*/ fP2Frames : number;\n\n    /*private*/ fP1Super : number;\n\n    /*private*/ fP2Super : number;\n\n    /*private*/ fServerMoved : boolean;\n\n    /*private*/ hitNetSinceTouched : boolean;\n\n    /*private*/ gameThread : ShimmedThread;\n\n    /*private*/ fEndGame : boolean;\n\n    /*private*/ startTime : number;\n\n    /*private*/ gameTime : number;\n\n    /*private*/ crossedNetTime : number;\n\n    /*private*/ pausedTime : number;\n\n    /*private*/ paused : boolean;\n\n    /*private*/ scoringRun : number;\n\n    /*private*/ oldScoringRun : number;\n\n    /*private*/ slimeColText : string[];\n\n    /*private*/ slimeColours : ShimmedColor[];\n\n    /*private*/ loserText1 : string[];\n\n    /*private*/ loserText2 : string[];\n\n    /*private*/ SKY_COL : ShimmedColor;\n\n    /*private*/ COURT_COL : ShimmedColor;\n\n    /*private*/ BALL_COL : ShimmedColor;\n\n    /*private*/ p1Run : number;\n\n    /*private*/ p2Run : number;\n\n    /*private*/ p1Jump : number;\n\n    /*private*/ p2Jump : number;\n\n    /*private*/ pointsToWin : number \u003d 6;\n\n    /*private*/ aiMode : number \u003d 0;\n\n    /*private*/ field_rn_Slime1P_ai_109 : Class_rn_c_1;\n\n    /*private*/ gameScore : number;\n\n    /*private*/ gameOver : boolean;\n\n    /*private*/ boundsP1select : number[] \u003d [];\n\n    /*private*/ boundsP2select : number[] \u003d [];\n\n    /*private*/ oneplayer : boolean \u003d false;\n\n    /*private*/ ballRad : number \u003d 25;\n\n    /*private*/ buffer : ShimmedBufferedImage;\n\n    /*private*/ redrawRegions : ShimmedVector;\n\n    /*private*/ buffered : boolean \u003d false;\n\n    /*private*/ replayData : number[][];\n\n    /*private*/ replayIndex : number;\n\n    /*private*/ replayStart : number;\n\n    /*private*/ replaying : boolean;\n\n    public init() {\n        let var1 : string \u003d this.getDocumentBase().getHost();\n        if(!/* equals */(\u003cany\u003e((o1: any, o2: any) \u003d\u003e { if(o1 \u0026\u0026 o1.equals) { return o1.equals(o2); } else { return o1 \u003d\u003d\u003d o2; } })(var1,\"oneslime.net\"))) {\n            try {\n                this.getAppletContext().showDocument$ShimmedURL$java_lang_String(new ShimmedURL(\"http://oneslime.net/\"), \"_self\");\n            } catch(var5) {\n            };\n            throw Object.defineProperty(new Error(\"Couldn\\\u0027t initialise - server data missing.\"), \u0027__classes\u0027, { configurable: true, value: [\u0027java.lang.Throwable\u0027,\u0027java.lang.Object\u0027,\u0027java.lang.RuntimeException\u0027,\u0027java.lang.Exception\u0027] });\n        } else {\n            ShimmedSystem.out.println$java_lang_Object(\"One Slime: http://oneslime.net/\");\n            new Class_rn_e_3();\n            new Class_rn_d_4();\n            new Class_rn_b_5();\n            new Class_rn_a_6();\n            this.nWidth \u003d this.size().width;\n            this.nHeight \u003d this.size().height;\n            this.fInPlay \u003d this.fEndGame \u003d false;\n            this.promptMsg \u003d \"Click the mouse to play!\";\n            this.buffer \u003d new ShimmedBufferedImage(this.nWidth, this.nHeight, 1);\n            this.fInPlay \u003d this.fEndGame \u003d false;\n            this.promptMsg \u003d \"Click the mouse to play!\";\n            this.screen \u003d this.buffer.getGraphics();\n            this.screen.setFont(new ShimmedFont(this.screen.getFont().getName(), 1, 15));\n            this.slimeColText \u003d [\"Inferior Human Controlled Slime \", \"The Pathetic White Slime \", \"Angry Red Slimons \", \"The Slime Master \", \"Psycho Slime \", \"The Big Blue Boss \"];\n            this.slimeColours \u003d [ShimmedColor.yellow, ShimmedColor.white, ShimmedColor.red, ShimmedColor.black, ShimmedColor.blue, ShimmedColor.blue];\n            this.loserText1 \u003d [\"You are a loser!\", this.slimeColText[2] + \"gives you the gong!\", this.slimeColText[3] + \"says \\\"You are seriously inept.\\\"\", this.slimeColText[4] + \"laughs at the pathetic slow opposition.\", this.slimeColText[5] + \"devours you!\"];\n            this.loserText2 \u003d [\"Better luck next time.\", \"So who has the red face bombing out on level 2, huh?\", \"Congrats on reaching level 3.\", \"Congrats on reaching level 4!\", \"Yum.\"];\n            this.p1Col \u003d 0;\n            this.p1Run \u003d 8;\n            this.p1Jump \u003d 31;\n            this.p1Diam \u003d 100;\n            this.gameScore \u003d 0;\n            this.gameOver \u003d true;\n            this.paused \u003d false;\n            this.method_rn_Slime1P_new_77();\n            this.method_rn_Slime1P_for_80();\n            this.redrawRegions \u003d new ShimmedVector(0);\n            this.method_rn_Slime1P_void_78();\n            this.repaint();\n            this.replayData \u003d \u003cany\u003e (function(dims) { let allocate \u003d function(dims) { if(dims.length\u003d\u003d0) { return 0; } else { let array \u003d []; for(let i \u003d 0; i \u003c dims[0]; i++) { array.push(allocate(dims.slice(1))); } return array; }}; return allocate(dims);})([1000, 8]);\n            try {\n                ShimmedSystem.out.println$java_lang_Object(this.getCodeBase());\n                let var3 : ShimmedInputStream \u003d (new ShimmedURL(this.getCodeBase() + \"bler\")).openStream();\n                let var4 : ShimmedBufferedReader \u003d new ShimmedBufferedReader(new ShimmedInputStreamReader(var3));\n                if(!/* equals */(\u003cany\u003e((o1: any, o2: any) \u003d\u003e { if(o1 \u0026\u0026 o1.equals) { return o1.equals(o2); } else { return o1 \u003d\u003d\u003d o2; } })(var4.readLine(),\"bler\"))) {\n                    var4.close();\n                    var3.close();\n                    throw Object.defineProperty(new Error(\"Couldn\\\u0027t connect to server!\"), \u0027__classes\u0027, { configurable: true, value: [\u0027java.lang.Throwable\u0027,\u0027java.lang.Object\u0027,\u0027java.lang.Exception\u0027] });\n                }\n                var4.close();\n                var3.close();\n            } catch(var6) {\n                ShimmedSystem.out.println$java_lang_Object(\"Error...\\n\" + var6);\n                new ServerCheck();\n            };\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_new_77() {\n        this.fP1PointsWon \u003d this.fP2PointsWon \u003d 0;\n        this.p1Diam \u003d this.p2Diam \u003d 100;\n        this.p2Run \u003d 8;\n        this.p2Jump \u003d 31;\n        this.fP2Fire \u003d false;\n        if(!this.oneplayer) {\n            this.aiMode \u003d 0;\n        }\n        switch((this.aiMode)) {\n        case 0:\n            this.field_rn_Slime1P_ai_109 \u003d new Class_rn_d_4();\n            this.fP2Fire \u003d false;\n            this.SKY_COL \u003d ShimmedColor.blue;\n            this.COURT_COL \u003d ShimmedColor.gray;\n            this.BALL_COL \u003d ShimmedColor.yellow;\n            break;\n        case 1:\n            this.field_rn_Slime1P_ai_109 \u003d new Class_rn_e_3();\n            this.fP2Fire \u003d false;\n            this.SKY_COL \u003d new ShimmedColor(30, 80, 0);\n            this.COURT_COL \u003d ShimmedColor.darkGray;\n            this.BALL_COL \u003d new ShimmedColor(128, 128, 255);\n            break;\n        case 2:\n            this.field_rn_Slime1P_ai_109 \u003d new Class_rn_b_5();\n            this.fP2Fire \u003d false;\n            this.SKY_COL \u003d new ShimmedColor(98, 57, 57);\n            this.COURT_COL \u003d new ShimmedColor(0, 168, 0);\n            this.BALL_COL \u003d ShimmedColor.white;\n            break;\n        case 3:\n            this.field_rn_Slime1P_ai_109 \u003d new Class_rn_b_5();\n            this.fP2Fire \u003d true;\n            this.SKY_COL \u003d ShimmedColor.black;\n            this.COURT_COL \u003d ShimmedColor.red;\n            this.BALL_COL \u003d ShimmedColor.yellow;\n            break;\n        case 4:\n            this.field_rn_Slime1P_ai_109 \u003d new Class_rn_a_6();\n            this.p2Diam \u003d 150;\n            this.fP2Fire \u003d false;\n            this.SKY_COL \u003d ShimmedColor.black;\n            this.COURT_COL \u003d ShimmedColor.red;\n            this.BALL_COL \u003d ShimmedColor.yellow;\n        }\n        if(this.oneplayer) {\n            this.p2Col \u003d this.aiMode + 1;\n        } else {\n            this.p2Col \u003d this.p1Col;\n        }\n        this.field_rn_Slime1P_ai_109.method_rn_c_a_9(this, 2);\n    }\n\n    public update(var1 : ShimmedGraphics) {\n        if(this.buffered) {\n            var1.drawImage(this.buffer, 0, 0, \u003cShimmedImageObserver\u003enull);\n        } else {\n            this.method_rn_Slime1P_void_78();\n        }\n        this.redrawRegions \u003d new ShimmedVector(0);\n    }\n\n    public paint(var1 : ShimmedGraphics) {\n        this.update(var1);\n    }\n\n    /*private*/ method_rn_Slime1P_void_78() {\n        let var1 : ShimmedGraphics;\n        if(this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        } else {\n            var1 \u003d this.getGraphics();\n        }\n        this.nWidth \u003d this.size().width;\n        this.nHeight \u003d this.size().height;\n        var1.setColor(this.SKY_COL);\n        var1.fillRect(0, 0, this.nWidth, (4 * this.nHeight / 5|0));\n        var1.setColor(this.COURT_COL);\n        var1.fillRect(0, (4 * this.nHeight / 5|0), this.nWidth, (this.nHeight / 5|0));\n        var1.setColor(ShimmedColor.white);\n        var1.fillRect((this.nWidth / 2|0) - 2, (7 * this.nHeight / 10|0), 4, (this.nHeight / 10|0) + 5);\n        let var2 : ShimmedFontMetrics \u003d var1.getFontMetrics();\n        let var3 : string;\n        if(this.gameOver) {\n            this.screen.setColor(ShimmedColor.white);\n            let var4 : ShimmedFont \u003d var1.getFont();\n            var1.setFont(this.screen.getFont());\n            var3 \u003d \"Slime Volleyball: One Slime\";\n            var1.drawString(var3, (this.nWidth / 2|0) - (this.screen.getFontMetrics().stringWidth(var3) / 2|0), (this.nHeight / 3|0) - var2.getHeight());\n            var1.setFont(var4);\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Written by Quin Pendragon and Daniel Wedge\";\n            var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + var2.getHeight() * 2);\n            var3 \u003d \"http://oneslime.net/\";\n            var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + (var2.getHeight() * 7 / 2|0));\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Click here to start a one player game!\";\n            this.boundsP1select[0] \u003d (this.nWidth / 4|0) - (var2.stringWidth(var3) / 2|0) - 10;\n            this.boundsP1select[1] \u003d (this.nHeight / 3|0) + var2.getHeight() * 5;\n            this.boundsP1select[2] \u003d this.boundsP1select[0] + var2.stringWidth(var3) + 20;\n            this.boundsP1select[3] \u003d this.boundsP1select[1] + var2.getHeight() * 3;\n            var1.fillRect((this.nWidth / 4|0) - (var2.stringWidth(var3) / 2|0) - 10, (this.nHeight / 3|0) + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);\n            var1.setColor(this.SKY_COL);\n            if(this.aiMode !\u003d\u003d 0) {\n                var1.drawString(var3, (this.nWidth / 4|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + (var2.getHeight() * 13 / 2|0));\n                var3 \u003d \"or press C to continue...\";\n                var1.drawString(var3, (this.nWidth / 4|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + (var2.getHeight() * 15 / 2|0));\n            } else {\n                var1.drawString(var3, (this.nWidth / 4|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + var2.getHeight() * 7);\n            }\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Click here to start a two player game!\";\n            var1.fillRect((this.nWidth * 3 / 4|0) - (var2.stringWidth(var3) / 2|0) - 10, (this.nHeight / 3|0) + var2.getHeight() * 5, var2.stringWidth(var3) + 20, var2.getHeight() * 3);\n            var1.setColor(this.SKY_COL);\n            var1.drawString(var3, (this.nWidth * 3 / 4|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0) + var2.getHeight() * 7);\n            this.boundsP2select[0] \u003d (this.nWidth * 3 / 4|0) - (var2.stringWidth(var3) / 2|0) - 10;\n            this.boundsP2select[1] \u003d (this.nHeight / 3|0) + var2.getHeight() * 5;\n            this.boundsP2select[2] \u003d this.boundsP2select[0] + var2.stringWidth(var3) + 20;\n            this.boundsP2select[3] \u003d this.boundsP2select[1] + var2.getHeight() * 3;\n            if(!this.replaying) {\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_byte_95();\n            }\n        } else if(!this.fInPlay) {\n            var1.setColor(ShimmedColor.white);\n            var3 \u003d \"Your score: \" + this.gameScore;\n            var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 2|0) - var2.getHeight());\n            if(this.fP1PointsWon \u003d\u003d\u003d 6) {\n                var3 \u003d \"Level bonus: \" + (1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon)|0) * this.method_rn_Slime1P_case_108() + \" points\";\n                var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 2|0) + var2.getHeight());\n                var3 \u003d \"Time bonus: \" + Math.floor((this.gameTime \u003c 300000?300000 - this.gameTime:0) / 1000) * Math.floor(\u003cnumber\u003ethis.method_rn_Slime1P_case_108()) + \" points\";\n                var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 2|0) + var2.getHeight() * 2);\n                if(this.fP2PointsWon \u003d\u003d\u003d 0) {\n                    var3 \u003d \"Flawless Victory: \" + 1000 * this.method_rn_Slime1P_case_108() + \" points\";\n                    var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 2|0) + var2.getHeight() * 3);\n                }\n            }\n            var1.setFont(this.screen.getFont());\n            var2 \u003d this.screen.getFontMetrics();\n            var3 \u003d \"Level \" + (this.aiMode + 1) + \" clear!\";\n            var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight / 3|0));\n            var3 \u003d \"Click the mouse to continue...\";\n            var1.drawString(var3, (this.nWidth / 2|0) - (var2.stringWidth(var3) / 2|0), (this.nHeight * 4 / 5|0) + var2.getHeight() + 10);\n            this.method_rn_Slime1P_goto_93();\n        } else {\n            this.method_rn_Slime1P_goto_93();\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_do_79() {\n        if(!this.buffered) {\n            this.redrawRegions.removeAllElements();\n        } else {\n            for(let var1 : number \u003d 0; var1 \u003c this.redrawRegions.size(); ++var1) {\n                let var2 : number[] \u003d \u003cnumber[]\u003e(\u003cnumber[]\u003ethis.redrawRegions.get(var1));\n                let var3 : number \u003d var2[0];\n                let var4 : number \u003d var2[1];\n                let var5 : number \u003d var2[2];\n                let var6 : number \u003d var2[3];\n                if(var3 \u003c 0) {\n                    var3 \u003d 0;\n                }\n                if(var5 \u003e this.nWidth) {\n                    var5 \u003d this.nWidth - 1;\n                }\n                if(var4 \u003c 0) {\n                    var4 \u003d 0;\n                }\n                if(var6 \u003e this.nHeight) {\n                    var6 \u003d this.nHeight - 1;\n                }\n                let var7 : number \u003d var5 - var3;\n                let var8 : number \u003d var6 - var4;\n                if(var7 \u003e 0 \u0026\u0026 var8 \u003e 0) {\n                    let var9 : ShimmedBufferedImage \u003d this.buffer.getSubimage(var3, var4, var7, var8);\n                    this.getGraphics().drawImage(var9, var3, var4, \u003cShimmedImageObserver\u003enull);\n                }\n            };\n            this.redrawRegions.removeAllElements();\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_for_80() {\n        this.p1X \u003d this.p1OldX \u003d 200;\n        this.p1Y \u003d this.p1OldY \u003d 0;\n        this.p2X \u003d this.p2OldX \u003d 800;\n        this.p2Y \u003d this.p2OldY \u003d 0;\n        this.p1XV \u003d 0;\n        this.p1YV \u003d 0;\n        this.p2XV \u003d 0;\n        this.p2YV \u003d 0;\n        this.ballX \u003d this.ballOldX \u003d 200;\n        this.ballY \u003d this.ballOldY \u003d 400;\n        this.ballVX \u003d 0;\n        this.ballVY \u003d 0;\n        this.hitNetSinceTouched \u003d false;\n        this.fServerMoved \u003d this.fP1Touched \u003d this.fP2Touched \u003d false;\n        this.fP1Touches \u003d this.fP2Touches \u003d 0;\n        this.repaint();\n        this.promptMsg \u003d \"\";\n        this.replayStart \u003d this.replayIndex \u003d 0;\n        this.replaying \u003d false;\n    }\n\n    public handleEvent(var1 : ShimmedEvent) : boolean {\n        switch((var1.id)) {\n        case 401:\n        case 403:\n            switch((var1.key)) {\n            case 32:\n                this.mousePressed \u003d true;\n                return false;\n            case 65:\n            case 97:\n                this.method_rn_Slime1P_c_81();\n                return false;\n            case 66:\n            case 98:\n                this.buffered \u003d !this.buffered;\n                this.method_rn_Slime1P_void_78();\n                return false;\n            case 67:\n            case 99:\n                if(this.gameOver) {\n                    this.fEndGame \u003d false;\n                    this.fInPlay \u003d true;\n                    this.promptMsg \u003d \"\";\n                    this.gameOver \u003d false;\n                    this.gameScore \u003d 0;\n                    this.method_rn_Slime1P_for_80();\n                    this.method_rn_Slime1P_new_77();\n                    this.repaint();\n                    this.gameThread \u003d new ShimmedThread(this);\n                    this.gameThread.start();\n                }\n                return false;\n            case 68:\n            case 100:\n                this.method_rn_Slime1P_b_82();\n                return false;\n            case 73:\n            case 105:\n                if(!this.oneplayer) {\n                    this.method_rn_Slime1P_long_88();\n                }\n                return false;\n            case 74:\n            case 106:\n                if(!this.oneplayer) {\n                    this.method_rn_Slime1P_e_85();\n                }\n                return false;\n            case 75:\n            case 107:\n                if(this.oneplayer) {\n                    this.fP1PointsWon \u003d this.fP2PointsWon \u003d 0;\n                    this.fP1Fire \u003d false;\n                    this.gameScore \u003d 0;\n                    this.method_rn_Slime1P_new_77();\n                    this.method_rn_Slime1P_for_80();\n                    this.method_rn_Slime1P_void_78();\n                    this.repaint();\n                    this.startTime \u003d ShimmedSystem.currentTimeMillis();\n                    this.paused \u003d false;\n                }\n                return false;\n            case 76:\n            case 108:\n                if(!this.oneplayer) {\n                    this.method_rn_Slime1P_j_86();\n                }\n                return false;\n            case 79:\n            case 111:\n                if(!this.paused) {\n                    this.pausedTime \u003d ShimmedSystem.currentTimeMillis();\n                    try {\n                        this.getAppletContext().showDocument$ShimmedURL$java_lang_String(new ShimmedURL(\"http://oneslime.net/boss/launch.html\"), \"_blank\");\n                    } catch(var3) {\n                        ShimmedSystem.out.println$java_lang_Object(var3);\n                    };\n                    this.paused \u003d true;\n                } else {\n                    this.startTime +\u003d ShimmedSystem.currentTimeMillis() - this.pausedTime;\n                    this.paused \u003d false;\n                }\n                return false;\n            case 80:\n            case 112:\n                if(!this.paused) {\n                    this.pausedTime \u003d ShimmedSystem.currentTimeMillis();\n                    this.paused \u003d true;\n                } else {\n                    this.startTime +\u003d ShimmedSystem.currentTimeMillis() - this.pausedTime;\n                    this.paused \u003d false;\n                }\n                return false;\n            case 87:\n            case 119:\n                this.method_rn_Slime1P_char_84();\n                return false;\n            case 1004:\n                if(this.oneplayer) {\n                    this.method_rn_Slime1P_char_84();\n                } else {\n                    this.method_rn_Slime1P_long_88();\n                }\n                return false;\n            case 1006:\n                if(this.oneplayer) {\n                    this.method_rn_Slime1P_c_81();\n                } else {\n                    this.method_rn_Slime1P_e_85();\n                }\n                return false;\n            case 1007:\n                if(this.oneplayer) {\n                    this.method_rn_Slime1P_b_82();\n                } else {\n                    this.method_rn_Slime1P_j_86();\n                }\n                return false;\n            default:\n                return false;\n            }\n        case 402:\n        case 404:\n            switch((var1.key)) {\n            case 65:\n            case 97:\n                if(this.p1XV \u003c 0) {\n                    this.method_rn_Slime1P_try_83();\n                }\n                return false;\n            case 68:\n            case 100:\n                if(this.p1XV \u003e 0) {\n                    this.method_rn_Slime1P_try_83();\n                }\n                return false;\n            case 74:\n            case 106:\n                if(this.p2XV \u003c 0) {\n                    this.method_rn_Slime1P_else_87();\n                }\n                return false;\n            case 76:\n            case 108:\n                if(this.p2XV \u003e 0) {\n                    this.method_rn_Slime1P_else_87();\n                }\n                return false;\n            case 1006:\n                if(this.oneplayer \u0026\u0026 this.p1XV \u003c 0) {\n                    this.method_rn_Slime1P_try_83();\n                } else if(!this.oneplayer \u0026\u0026 this.p2XV \u003c 0) {\n                    this.method_rn_Slime1P_else_87();\n                    return false;\n                }\n                return false;\n            case 1007:\n                if(this.oneplayer \u0026\u0026 this.p1XV \u003e 0) {\n                    this.method_rn_Slime1P_try_83();\n                } else if(!this.oneplayer \u0026\u0026 this.p2XV \u003e 0) {\n                    this.method_rn_Slime1P_else_87();\n                    return false;\n                }\n                return false;\n            default:\n                return false;\n            }\n        case 501:\n            if(this.gameOver) {\n                if(var1.x \u003e this.boundsP1select[0] \u0026\u0026 var1.y \u003e this.boundsP1select[1] \u0026\u0026 var1.x \u003c this.boundsP1select[2] \u0026\u0026 var1.y \u003c this.boundsP1select[3]) {\n                    this.oneplayer \u003d true;\n                } else {\n                    if(var1.x \u003c\u003d this.boundsP2select[0] || var1.y \u003c\u003d this.boundsP2select[1] || var1.x \u003e\u003d this.boundsP2select[2] || var1.y \u003e\u003d this.boundsP2select[3]) {\n                        break;\n                    }\n                    this.oneplayer \u003d false;\n                }\n            }\n            this.mousePressed \u003d true;\n            if(!this.fInPlay) {\n                this.fEndGame \u003d false;\n                this.fInPlay \u003d true;\n                this.promptMsg \u003d \"\";\n                if(this.gameScore !\u003d\u003d 0) {\n                    if(this.aiMode \u003c 5) {\n                        ++this.aiMode;\n                    } else {\n                        this.aiMode \u003d 0;\n                    }\n                }\n                if(this.gameOver) {\n                    this.aiMode \u003d 0;\n                    this.gameOver \u003d false;\n                    this.gameScore \u003d 0;\n                }\n                this.method_rn_Slime1P_new_77();\n                this.repaint();\n                this.ballX \u003d 200;\n                this.gameThread \u003d new ShimmedThread(this);\n                this.gameThread.start();\n            }\n            break;\n        case 503:\n            this.showStatus(\"Slime Volleyball: One Slime: http://oneslime.net/\");\n        }\n        return false;\n    }\n\n    public method_rn_Slime1P_c_81() {\n        this.p1XV \u003d this.fP1Fire?-2 * this.p1Run:-this.p1Run;\n        if(this.p1X \u003d\u003d\u003d 200 \u0026\u0026 this.ballX \u003d\u003d\u003d 200 \u0026\u0026 !this.fP2Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    }\n\n    public method_rn_Slime1P_b_82() {\n        this.p1XV \u003d this.fP1Fire?2 * this.p1Run:this.p1Run;\n        if(this.p1X \u003d\u003d\u003d 200 \u0026\u0026 this.ballX \u003d\u003d\u003d 200 \u0026\u0026 !this.fP2Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    }\n\n    public method_rn_Slime1P_try_83() {\n        this.p1XV \u003d 0;\n    }\n\n    public method_rn_Slime1P_char_84() {\n        if(this.p1Y \u003d\u003d\u003d 0) {\n            this.p1YV \u003d this.fP1Fire?(45 * this.p1Jump / 31|0):this.p1Jump;\n        }\n    }\n\n    public method_rn_Slime1P_e_85() {\n        this.p2XV \u003d this.fP2Fire?-2 * this.p2Run:-this.p2Run;\n        if(this.p2X \u003d\u003d\u003d 800 \u0026\u0026 this.ballX \u003d\u003d\u003d 800 \u0026\u0026 !this.fP1Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    }\n\n    public method_rn_Slime1P_j_86() {\n        this.p2XV \u003d this.fP2Fire?2 * this.p2Run:this.p2Run;\n        if(this.p2X \u003d\u003d\u003d 800 \u0026\u0026 this.ballX \u003d\u003d\u003d 800 \u0026\u0026 !this.fP1Touched \u0026\u0026 !this.fServerMoved) {\n            this.fServerMoved \u003d true;\n        }\n    }\n\n    public method_rn_Slime1P_else_87() {\n        this.p2XV \u003d 0;\n    }\n\n    public method_rn_Slime1P_long_88() {\n        if(this.p2Y \u003d\u003d\u003d 0) {\n            this.p2YV \u003d this.fP2Fire?(45 * this.p2Jump / 31|0):this.p2Jump;\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_d_89() {\n        if(this.oneplayer) {\n            let var1 : number[] \u003d [this.ballX, this.ballY, this.ballVX, this.ballVY, this.p1X, this.p1Y, this.p1XV, this.p1YV, this.p2X, this.p2Y, this.p2XV, this.p2YV];\n            this.field_rn_Slime1P_ai_109.method_rn_c_a_10(var1, this.fP1Fire, this.fP2Fire);\n            this.field_rn_Slime1P_ai_109.method_rn_c_a_11();\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_i_90() {\n        this.method_rn_Slime1P_d_89();\n        this.p1X +\u003d this.p1XV;\n        if(this.p1X \u003c (this.p1Diam / 2|0)) {\n            this.p1X \u003d (this.p1Diam / 2|0);\n        }\n        if(this.p1X \u003e 495 - (this.p1Diam / 2|0)) {\n            this.p1X \u003d 495 - (this.p1Diam / 2|0);\n        }\n        if(this.p1YV !\u003d\u003d 0) {\n            this.p1Y +\u003d this.p1YV -\u003d this.fP1Fire?4:2;\n            if(this.p1Y \u003c 0) {\n                this.p1Y \u003d 0;\n                this.p1YV \u003d 0;\n            }\n        }\n        this.p2X +\u003d this.p2XV;\n        if(this.p2X \u003e 1000 - (this.p2Diam / 2|0)) {\n            this.p2X \u003d 1000 - (this.p2Diam / 2|0);\n        }\n        if(this.p2X \u003c 505 + (this.p2Diam / 2|0)) {\n            this.p2X \u003d 505 + (this.p2Diam / 2|0);\n        }\n        if(this.p2YV !\u003d\u003d 0) {\n            this.p2Y +\u003d this.p2YV -\u003d this.fP2Fire?4:2;\n            if(this.p2Y \u003c 0) {\n                this.p2Y \u003d 0;\n                this.p2YV \u003d 0;\n            }\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_if_91() {\n        let var1 : number[] \u003d [];\n        let var2 : ShimmedGraphics;\n        if(this.buffered) {\n            var2 \u003d this.buffer.getGraphics();\n        } else {\n            var2 \u003d this.getGraphics();\n        }\n        let var3 : number \u003d 5;\n        let var4 : number \u003d ((this.ballRad + var3) * this.nHeight / 1000|0);\n        let var5 : number \u003d (this.ballOldX * this.nWidth / 1000|0);\n        let var6 : number \u003d (4 * this.nHeight / 5|0) - (this.ballOldY * this.nHeight / 1000|0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var5 - var4, var6 - var4, 2 * var4, 2 * var4);\n        let var7 : number \u003d var5;\n        let var8 : number \u003d var6;\n        this.superFlash \u003d !this.superFlash;\n        let var9 : number \u003d (this.nWidth * this.p1Diam / 1000|0);\n        let var10 : number \u003d (this.nHeight * this.p1Diam / 1000|0);\n        let var11 : number \u003d (this.p1OldX * this.nWidth / 1000|0) - (var9 / 2|0);\n        let var12 : number \u003d (4 * this.nHeight / 5|0) - var10 - (this.p1OldY * this.nHeight / 1000|0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var11, var12, var9, var10);\n        var1[0] \u003d var11;\n        var1[1] \u003d var12;\n        var1[2] \u003d var11 + var9;\n        var1[3] \u003d var12 + var10;\n        var9 \u003d (this.nWidth * this.p1Diam / 1000|0);\n        var10 \u003d (this.nHeight * this.p1Diam / 1000|0);\n        var11 \u003d (this.p1X * this.nWidth / 1000|0) - (var9 / 2|0);\n        var12 \u003d (4 * this.nHeight / 5|0) - var10 - (this.p1Y * this.nHeight / 1000|0);\n        var2.setColor(this.fP1Fire \u0026\u0026 this.superFlash?ShimmedColor.white:this.slimeColours[this.p1Col]);\n        var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);\n        if(var11 \u003c var1[0]) {\n            var1[0] \u003d var11;\n        }\n        if(var12 \u003c var1[1]) {\n            var1[1] \u003d var12;\n        }\n        if(var11 + var9 \u003e var1[2]) {\n            var1[2] \u003d var11 + var9;\n        }\n        if(var12 + var10 \u003e var1[3]) {\n            var1[3] \u003d var12 + var10;\n        }\n        this.redrawRegions.add(var1);\n        let var15 : number \u003d this.p1X + (38 * this.p1Diam / 100|0);\n        let var16 : number \u003d this.p1Y - (60 * this.p1Diam / 100|0);\n        var11 \u003d (var15 * this.nWidth / 1000|0);\n        var12 \u003d (4 * this.nHeight / 5|0) - var10 - (var16 * this.nHeight / 1000|0);\n        let var17 : number \u003d var11 - var5;\n        let var18 : number \u003d var12 - var6;\n        let var19 : number \u003d (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var17 * var17 + var18 * var18))|0);\n        let var20 : number \u003d ((this.nWidth / 50|0) * this.p1Diam / 100|0);\n        let var21 : number \u003d ((this.nHeight / 25|0) * this.p1Diam / 100|0);\n        var2.setColor(ShimmedColor.white);\n        var2.fillOval(var11 - var20, var12 - var21, var20, var21);\n        var2.setColor(ShimmedColor.black);\n        var2.fillOval(var11 - (4 * var17 / var19|0) - (3 * var20 / 4|0), var12 - (4 * var18 / var19|0) - (3 * var21 / 4|0), (var20 / 2|0), (var21 / 2|0));\n        var9 \u003d (this.nWidth * this.p2Diam / 1000|0);\n        var10 \u003d (this.nHeight * this.p2Diam / 1000|0);\n        var11 \u003d (this.p2OldX * this.nWidth / 1000|0) - (var9 / 2|0);\n        var12 \u003d (4 * this.nHeight / 5|0) - var10 - (this.p2OldY * this.nHeight / 1000|0);\n        var2.setColor(this.SKY_COL);\n        var2.fillRect(var11, var12, var9, var10);\n        var1 \u003d [var11, var12, var11 + var9, var12 + var10];\n        var9 \u003d (this.nWidth * this.p2Diam / 1000|0);\n        var10 \u003d (this.nHeight * this.p2Diam / 1000|0);\n        var11 \u003d (this.p2X * this.nWidth / 1000|0) - (var9 / 2|0);\n        var12 \u003d (4 * this.nHeight / 5|0) - (this.p2Diam * this.nHeight / 1000|0) - (this.p2Y * this.nHeight / 1000|0);\n        var2.setColor(this.fP2Fire \u0026\u0026 this.superFlash?ShimmedColor.white:this.slimeColours[this.p2Col]);\n        if(var11 \u003c var1[0]) {\n            var1[0] \u003d var11;\n        }\n        if(var12 \u003c var1[1]) {\n            var1[1] \u003d var12;\n        }\n        if(var11 + var9 \u003e var1[2]) {\n            var1[2] \u003d var11 + var9;\n        }\n        if(var12 + var10 \u003e var1[3]) {\n            var1[3] \u003d var12 + var10;\n        }\n        this.redrawRegions.add(var1);\n        var2.fillArc(var11, var12, var9, 2 * var10, 0, 180);\n        var15 \u003d this.p2X - (18 * this.p2Diam / 100|0);\n        var16 \u003d this.p2Y - (60 * this.p2Diam / 100|0);\n        var11 \u003d (var15 * this.nWidth / 1000|0);\n        var12 \u003d (4 * this.nHeight / 5|0) - var10 - (var16 * this.nHeight / 1000|0);\n        var17 \u003d var11 - var5;\n        var18 \u003d var12 - var6;\n        var19 \u003d (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var17 * var17 + var18 * var18))|0);\n        var20 \u003d ((this.nWidth / 50|0) * this.p2Diam / 100|0);\n        var21 \u003d ((this.nHeight / 25|0) * this.p2Diam / 100|0);\n        var2.setColor(ShimmedColor.white);\n        var2.fillOval(var11 - var20, var12 - var21, var20, var21);\n        var2.setColor(ShimmedColor.black);\n        var2.fillOval(var11 - (4 * var17 / var19|0) - (3 * var20 / 4|0), var12 - (4 * var18 / var19|0) - (3 * var21 / 4|0), (var20 / 2|0), (var21 / 2|0));\n        if(!this.fP1Fire \u0026\u0026 !this.fP2Fire) {\n            this.superFlash \u003d false;\n        }\n        var5 \u003d (this.ballX * this.nWidth / 1000|0);\n        var6 \u003d (4 * this.nHeight / 5|0) - (this.ballY * this.nHeight / 1000|0);\n        var2.setColor(this.BALL_COL);\n        var2.fillOval(var5 - var4, var6 - var4, 2 * var4, 2 * var4);\n        var1 \u003d [var7 - var4, var8 - var4, var7 + var4, var8 + var4];\n        if(var5 - var4 \u003c var1[0]) {\n            var1[0] \u003d var5 - var4;\n        }\n        if(var6 - var4 \u003c var1[1]) {\n            var1[1] \u003d var6 - var4;\n        }\n        if(var5 + var4 \u003e var1[2]) {\n            var1[2] \u003d var5 + var4;\n        }\n        if(var6 + var4 \u003e var1[3]) {\n            var1[3] \u003d var6 + var4;\n        }\n        this.redrawRegions.add(var1);\n    }\n\n    /*private*/ method_rn_Slime1P_h_92() {\n        let var1 : number \u003d 5;\n        let var2 : number \u003d 15;\n        let var3 : number \u003d 22;\n        this.ballY +\u003d --this.ballVY;\n        this.ballX +\u003d this.ballVX;\n        if(!this.fEndGame) {\n            let var4 : number \u003d 2 * (this.ballX - this.p1X);\n            let var5 : number \u003d this.ballY - this.p1Y;\n            let var6 : number \u003d (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var4 * var4 + var5 * var5))|0);\n            let var7 : number \u003d this.ballVX - this.p1XV;\n            let var8 : number \u003d this.ballVY - this.p1YV;\n            let var9 : number;\n            if(var5 \u003e 0 \u0026\u0026 var6 \u003c this.p1Diam + this.ballRad \u0026\u0026 var6 \u003e var1) {\n                var9 \u003d ((var4 * var7 + var5 * var8) / var6|0);\n                this.ballX \u003d this.p1X + (((this.p1Diam + this.ballRad) / 2|0) * var4 / var6|0);\n                this.ballY \u003d this.p1Y + ((this.p1Diam + this.ballRad) * var5 / var6|0);\n                if(var9 \u003c\u003d 0) {\n                    this.ballVX +\u003d this.p1XV - (2 * var4 * var9 / var6|0);\n                    if(this.ballVX \u003c -var2) {\n                        this.ballVX \u003d -var2;\n                    }\n                    if(this.ballVX \u003e var2) {\n                        this.ballVX \u003d var2;\n                    }\n                    this.ballVY +\u003d this.p1YV - (2 * var5 * var9 / var6|0);\n                    if(this.ballVY \u003c -var3) {\n                        this.ballVY \u003d -var3;\n                    }\n                    if(this.ballVY \u003e var3) {\n                        this.ballVY \u003d var3;\n                    }\n                }\n                if(this.fServerMoved) {\n                    this.fP1Touched \u003d true;\n                    ++this.fP1Touches;\n                    this.fP2Touches \u003d 0;\n                    this.fP1HitStill \u003d this.p1YV \u003d\u003d\u003d 0 \u0026\u0026 this.p1XV \u003d\u003d\u003d 0;\n                    this.hitNetSinceTouched \u003d false;\n                }\n            }\n            var4 \u003d 2 * (this.ballX - this.p2X);\n            var5 \u003d this.ballY - this.p2Y;\n            var6 \u003d (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var4 * var4 + var5 * var5))|0);\n            var7 \u003d this.ballVX - this.p2XV;\n            var8 \u003d this.ballVY - this.p2YV;\n            if(var5 \u003e 0 \u0026\u0026 var6 \u003c this.p2Diam + this.ballRad \u0026\u0026 var6 \u003e var1) {\n                var9 \u003d ((var4 * var7 + var5 * var8) / var6|0);\n                this.ballX \u003d this.p2X + (((this.p2Diam + this.ballRad) / 2|0) * var4 / var6|0);\n                this.ballY \u003d this.p2Y + ((this.p2Diam + this.ballRad) * var5 / var6|0);\n                if(var9 \u003c\u003d 0) {\n                    this.ballVX +\u003d this.p2XV - (2 * var4 * var9 / var6|0);\n                    if(this.ballVX \u003c -var2) {\n                        this.ballVX \u003d -var2;\n                    }\n                    if(this.ballVX \u003e var2) {\n                        this.ballVX \u003d var2;\n                    }\n                    this.ballVY +\u003d this.p2YV - (2 * var5 * var9 / var6|0);\n                    if(this.ballVY \u003c -var3) {\n                        this.ballVY \u003d -var3;\n                    }\n                    if(this.ballVY \u003e var3) {\n                        this.ballVY \u003d var3;\n                    }\n                }\n                if(this.fServerMoved) {\n                    this.fP2Touched \u003d true;\n                    ++this.fP2Touches;\n                    this.fP1Touches \u003d 0;\n                    this.fP2HitStill \u003d this.p2YV \u003d\u003d\u003d 0 \u0026\u0026 this.p2XV \u003d\u003d\u003d 0;\n                    this.hitNetSinceTouched \u003d false;\n                }\n            }\n            if(this.ballX \u003c 15) {\n                this.ballX \u003d 15;\n                this.ballVX \u003d -this.ballVX;\n            }\n            if(this.ballX \u003e 985) {\n                this.ballX \u003d 985;\n                this.ballVX \u003d -this.ballVX;\n            }\n            if(this.ballX \u003e 480 \u0026\u0026 this.ballX \u003c 520 \u0026\u0026 this.ballY \u003c 140) {\n                if(this.ballVY \u003c 0 \u0026\u0026 this.ballY \u003e 130) {\n                    this.ballVY *\u003d -1;\n                    this.ballY \u003d 130;\n                } else if(this.ballX \u003c 500) {\n                    this.ballX \u003d 480;\n                    this.ballVX \u003d this.ballVX \u003e\u003d 0?-this.ballVX:this.ballVX;\n                    this.hitNetSinceTouched \u003d true;\n                } else {\n                    this.ballX \u003d 520;\n                    this.ballVX \u003d this.ballVX \u003c\u003d 0?-this.ballVX:this.ballVX;\n                    this.hitNetSinceTouched \u003d true;\n                }\n            }\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_goto_93() {\n        if(!this.replaying) {\n            let var1 : ShimmedGraphics \u003d this.getGraphics();\n            let var2 : ShimmedFontMetrics \u003d var1.getFontMetrics();\n            let var3 : number \u003d (this.nHeight / 15|0);\n            let var4 : number \u003d 20;\n            let var5 : number;\n            for(var5 \u003d 0; var5 \u003c 6; ++var5) {\n                if(this.fP1PointsWon \u003e\u003d var5 + 1) {\n                    var1.setColor(this.slimeColours[this.p1Col]);\n                    var1.fillOval(var4, 30 - (var3 / 2|0), var3, var3);\n                }\n                var1.setColor(ShimmedColor.white);\n                var1.drawOval(var4, 30 - (var3 / 2|0), var3, var3);\n                var4 +\u003d var3 + 10;\n            };\n            var4 \u003d this.nWidth - 20 - 6 * (var3 + 10);\n            for(var5 \u003d 0; var5 \u003c 6; ++var5) {\n                if(this.fP2PointsWon \u003e\u003d 6 - var5) {\n                    var1.setColor(this.slimeColours[this.p2Col]);\n                    var1.fillOval(var4, 30 - (var3 / 2|0), var3, var3);\n                }\n                var1.setColor(ShimmedColor.white);\n                var1.drawOval(var4, 30 - (var3 / 2|0), var3, var3);\n                var4 +\u003d var3 + 10;\n            };\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_a_94(var1 : number) : string {\n        let var3 : string \u003d \"\";\n        let var4 : number \u003d Math.floor(var1 / 10) % 100;\n        let var6 : number \u003d Math.floor(var1 / 1000) % 60;\n        let var8 : number \u003d Math.floor(var1 / 60000) % 60;\n        let var10 : number \u003d Math.floor(var1 / 3600000);\n        var3 \u003d var3 + var8 + \":\";\n        if(var6 \u003c 10) {\n            var3 \u003d var3 + \"0\";\n        }\n        var3 \u003d var3 + var6;\n        return var3;\n    }\n\n    /*private*/ method_rn_Slime1P_byte_95() {\n        let var1 : ShimmedGraphics;\n        if(this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        } else {\n            var1 \u003d this.getGraphics();\n        }\n        let var2 : number \u003d (this.nHeight / 20|0);\n        var1.setColor(this.SKY_COL);\n        var1.setFont(this.screen.getFont());\n        let var3 : ShimmedFontMetrics \u003d var1.getFontMetrics();\n        let var4 : string \u003d (this.oneplayer?\"Score: \" + this.gameScore:\"\") + (!this.fInPlay?\"\":\" Time: \" + this.method_rn_Slime1P_a_94((this.paused?this.pausedTime:ShimmedSystem.currentTimeMillis()) - this.startTime));\n        let var5 : number \u003d var3.stringWidth(var4);\n        let var6 : number \u003d (this.nWidth / 2|0) - (var5 / 2|0) - 10;\n        var1.fillRect(var6, 0, var5 + 20, var2 + 22);\n        var1.setColor(ShimmedColor.white);\n        let var7 : number \u003d var3.stringWidth(var4);\n        let var8 : number \u003d (this.nWidth / 2|0) - (var7 / 2|0);\n        let var9 : number \u003d var3.getHeight() * 2;\n        var1.drawString(var4, var8, var9);\n        this.redrawRegions.add([var8, 0, var8 + var7, var9 + (var9 / 2|0)]);\n    }\n\n    public method_rn_Slime1P_int_96() {\n        let var1 : ShimmedGraphics;\n        if(this.buffered) {\n            var1 \u003d this.buffer.getGraphics();\n        } else {\n            var1 \u003d this.getGraphics();\n        }\n        var1.setFont(this.screen.getFont());\n        this.screen.setColor(this.COURT_COL);\n        this.screen.fillRect(0, (4 * this.nHeight / 5|0) + 6, this.nWidth, (this.nHeight / 5|0) - 10);\n        this.method_rn_Slime1P_a_97(this.promptMsg, 0);\n    }\n\n    public method_rn_Slime1P_a_97(var1 : string, var2 : number) {\n        let var3 : ShimmedGraphics \u003d this.getGraphics();\n        var3.setFont(new ShimmedFont(var3.getFont().getName(), 1, 15));\n        let var4 : ShimmedFontMetrics \u003d var3.getFontMetrics();\n        var3.setColor(ShimmedColor.white);\n        let var5 : number \u003d var4.stringWidth(var1);\n        let var6 : number \u003d ((this.nWidth - var5) / 2|0);\n        let var7 : number \u003d (this.nHeight * 4 / 5|0) + var4.getHeight() * (var2 + 1) + 10;\n        var3.drawString(var1, var6, var7);\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        this.redrawRegions.add([var6, var7, var6 + var5 + 1, var7 + var4.getHeight()]);\n    }\n\n    /*private*/ method_rn_Slime1P_a_98(var1 : number) {\n        this.method_rn_Slime1P_a_99(var1, true);\n    }\n\n    /*private*/ method_rn_Slime1P_a_99(var1 : number, var2 : boolean) {\n        let var3 : number \u003d var1 !\u003d\u003d 0?var1 - 1:this.replayData.length - 1;\n        this.p1OldX \u003d this.replayData[var3][0];\n        this.p1OldY \u003d this.replayData[var3][1];\n        this.p2OldX \u003d this.replayData[var3][2];\n        this.p2OldY \u003d this.replayData[var3][3];\n        this.ballOldX \u003d this.replayData[var3][4];\n        this.ballOldY \u003d this.replayData[var3][5];\n        this.p1X \u003d this.replayData[var1][0];\n        this.p1Y \u003d this.replayData[var1][1];\n        this.p2X \u003d this.replayData[var1][2];\n        this.p2Y \u003d this.replayData[var1][3];\n        this.ballX \u003d this.replayData[var1][4];\n        this.ballY \u003d this.replayData[var1][5];\n        this.ballVX \u003d 0;\n        this.ballVY \u003d 1;\n        if(this.ballOldX \u003d\u003d\u003d 0 \u0026\u0026 this.ballOldY \u003d\u003d\u003d 0) {\n            this.ballOldX \u003d this.ballOldY \u003d -500;\n        }\n        if(this.ballX \u003d\u003d\u003d this.ballOldX \u0026\u0026 this.ballY \u003d\u003d\u003d this.ballOldY) {\n            this.ballOldX \u003d this.ballOldY \u003d -500;\n        }\n        this.method_rn_Slime1P_if_91();\n        if(this.buffered) {\n            this.getGraphics().drawImage(this.buffer, 0, 0, \u003cShimmedImageObserver\u003enull);\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_g_100() {\n        this.replayData[this.replayIndex][0] \u003d this.p1X;\n        this.replayData[this.replayIndex][1] \u003d this.p1Y;\n        this.replayData[this.replayIndex][2] \u003d this.p2X;\n        this.replayData[this.replayIndex][3] \u003d this.p2Y;\n        this.replayData[this.replayIndex][4] \u003d this.ballX;\n        this.replayData[this.replayIndex][5] \u003d this.ballY;\n        this.replayData[this.replayIndex][6] \u003d this.p1Col;\n        this.replayData[this.replayIndex][7] \u003d this.p2Col;\n        ++this.replayIndex;\n        if(this.replayIndex \u003e\u003d this.replayData.length) {\n            this.replayIndex \u003d 0;\n        }\n        if(this.replayStart \u003d\u003d\u003d this.replayIndex) {\n            ++this.replayStart;\n        }\n        if(this.replayStart \u003e\u003d this.replayData.length) {\n            this.replayStart \u003d 0;\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_f_101() {\n        this.replaying \u003d true;\n        this.method_rn_Slime1P_void_78();\n        let var1 : ShimmedGraphics \u003d this.buffered?this.buffer.getGraphics():this.getGraphics();\n        let var2 : ShimmedFontMetrics \u003d var1.getFontMetrics();\n        let var3 : number \u003d var2.getHeight();\n        this.promptMsg \u003d \"Press space to continue...\";\n        this.mousePressed \u003d false;\n        let var4 : number \u003d this.scoringRun;\n        this.scoringRun \u003d this.oldScoringRun;\n        let var5 : number \u003d this.replayStart;\n        let var6 : boolean \u003d false;\n        while((!this.mousePressed)) {\n            ++var5;\n            if(var5 \u003e\u003d this.replayData.length) {\n                var5 \u003d 0;\n            }\n            if(var5 \u003d\u003d\u003d this.replayIndex) {\n                var1.setColor(ShimmedColor.white);\n                var1.fillRect(20, 20, 20, 20);\n                this.method_rn_Slime1P_a_107(1000, false);\n                var6 \u003d !var6;\n                this.paint(var1);\n                var1.setColor(this.SKY_COL);\n                var1.fillRect(0, 0, this.nWidth, (this.nHeight / 20|0) + 22);\n                if(this.replayIndex \u003c this.replayStart) {\n                    var5 +\u003d this.replayData.length;\n                }\n                while((var5 \u003e this.replayStart)) {\n                    var5 -\u003d 5;\n                    this.method_rn_Slime1P_void_78();\n                    var1.setColor(ShimmedColor.white);\n                    var1.fillPolygon$ShimmedPolygon(new ShimmedPolygon([20, 35, 35, 50, 50, 35, 35, 20], [30, 20, 30, 20, 40, 30, 40, 30], 8));\n                    if(var5 \u003c this.replayStart) {\n                        var5 \u003d this.replayStart;\n                    }\n                    this.method_rn_Slime1P_a_99(var5 % this.replayData.length, false);\n                    this.method_rn_Slime1P_a_107(20, false);\n                };\n                this.method_rn_Slime1P_void_78();\n                var1.setColor(ShimmedColor.white);\n                var1.fillRect(20, 20, 20, 20);\n                this.method_rn_Slime1P_a_98(this.replayStart);\n                this.method_rn_Slime1P_a_107(500, false);\n                this.method_rn_Slime1P_void_78();\n            }\n            this.method_rn_Slime1P_a_98(var5);\n            try {\n                ShimmedThread.sleep$long(var6?60:20);\n            } catch(var8) {\n            };\n            var1.setColor(ShimmedColor.white);\n            var1.fillPolygon$ShimmedPolygon(new ShimmedPolygon([20, 35, 20], [20, 30, 40], 3));\n        };\n        this.scoringRun \u003d var4;\n        this.promptMsg \u003d \"\";\n        this.paint(var1);\n        this.replaying \u003d false;\n    }\n\n    public run() {\n        this.replayIndex \u003d this.replayStart \u003d 0;\n        this.method_rn_Slime1P_int_96();\n        this.superFlash \u003d false;\n        this.scoringRun \u003d 0;\n        this.fP1Touches \u003d 0;\n        this.fP2Touches \u003d 0;\n        this.fP1TouchesTot \u003d 0;\n        this.fP2TouchesTot \u003d 0;\n        this.fP1Clangers \u003d 0;\n        this.fP2Clangers \u003d 0;\n        this.fP1Aces \u003d 0;\n        this.fP2Aces \u003d 0;\n        this.fP1Winners \u003d 0;\n        this.fP2Winners \u003d 0;\n        this.fP1Frames \u003d 0;\n        this.fP2Frames \u003d 0;\n        this.fP1Super \u003d 0;\n        this.fP2Super \u003d 0;\n        this.fP1HitStill \u003d false;\n        this.fP2HitStill \u003d false;\n        this.fServerMoved \u003d false;\n        this.method_rn_Slime1P_goto_93();\n        this.fP1Touched \u003d this.fP2Touched \u003d false;\n        this.hitNetSinceTouched \u003d false;\n        let var1 : boolean \u003d false;\n        let var2 : boolean \u003d false;\n        let var3 : boolean \u003d false;\n        this.gameOver \u003d false;\n        let var4 : ShimmedGraphics \u003d this.buffer.getGraphics();\n        this.startTime \u003d ShimmedSystem.currentTimeMillis();\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n        while((this.gameThread !\u003d null \u0026\u0026 !this.gameOver)) {\n            if(!this.paused) {\n                this.p1OldX \u003d this.p1X;\n                this.p1OldY \u003d this.p1Y;\n                this.p2OldX \u003d this.p2X;\n                this.p2OldY \u003d this.p2Y;\n                this.ballOldX \u003d this.ballX;\n                this.ballOldY \u003d this.ballY;\n                this.method_rn_Slime1P_i_90();\n                this.method_rn_Slime1P_h_92();\n                this.method_rn_Slime1P_byte_95();\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_if_91();\n                this.method_rn_Slime1P_do_79();\n                this.method_rn_Slime1P_g_100();\n            }\n            if(this.ballY \u003c 35) {\n                let var5 : number \u003d ShimmedSystem.currentTimeMillis();\n                if(this.ballX \u003e 500) {\n                    ++this.fP1PointsWon;\n                } else {\n                    ++this.fP2PointsWon;\n                }\n                if(this.ballX \u003e 500 || this.fP1Touches \u003c 3 \u0026\u0026 (!this.hitNetSinceTouched || this.fP1Touches \u003c\u003d 0) \u0026\u0026 this.fP2Touched \u0026\u0026 (!this.fP1HitStill || this.fP1Touches \u003c\u003d 0)) {\n                    if(this.ballX \u003e 500 \u0026\u0026 (this.fP2Touches \u003e\u003d 3 || this.hitNetSinceTouched \u0026\u0026 this.fP2Touches \u003e 0 || !this.fP1Touched || this.fP2HitStill \u0026\u0026 this.fP2Touches \u003e 0)) {\n                        ++this.fP2Clangers;\n                        var1 \u003d true;\n                    }\n                } else {\n                    ++this.fP1Clangers;\n                    var1 \u003d true;\n                }\n                if(this.fP1Touched \u0026\u0026 !this.fP2Touched \u0026\u0026 this.ballX \u003e\u003d 500) {\n                    ++this.fP1Aces;\n                    var2 \u003d true;\n                    this.gameScore +\u003d 200 * this.method_rn_Slime1P_case_108();\n                } else if(this.fP2Touched \u0026\u0026 !this.fP1Touched \u0026\u0026 this.ballX \u003c 500) {\n                    ++this.fP2Aces;\n                    var2 \u003d true;\n                } else if(this.ballX \u003e 500 \u0026\u0026 this.fP1Touches \u003e 0) {\n                    ++this.fP1Winners;\n                    var3 \u003d true;\n                    this.gameScore +\u003d 100 * this.method_rn_Slime1P_case_108();\n                } else if(this.ballX \u003c\u003d 500 \u0026\u0026 this.fP2Touches \u003e 0) {\n                    ++this.fP2Winners;\n                    var3 \u003d true;\n                }\n                if(this.ballX \u003e 500 \u0026\u0026 !var3 \u0026\u0026 !var2) {\n                    this.gameScore +\u003d 50 * this.method_rn_Slime1P_case_108();\n                }\n                if(this.oneplayer) {\n                    this.promptMsg \u003d this.ballX \u003c\u003d 500?this.slimeColText[this.p2Col]:this.slimeColText[this.p1Col];\n                } else {\n                    this.promptMsg \u003d this.slimeColText[this.p1Col] + (this.ballX \u003c\u003d 500?\"2 \":\"1 \");\n                }\n                if(this.fP1PointsWon !\u003d\u003d 6 \u0026\u0026 this.fP2PointsWon !\u003d\u003d 6) {\n                    if(var2) {\n                        this.promptMsg \u003d this.promptMsg + \"aces the serve!\";\n                    } else if(var3) {\n                        this.promptMsg \u003d this.promptMsg + \"scores a winner!\";\n                    } else if(this.ballX \u003e 500 \u0026\u0026 !this.fP1Touched \u0026\u0026 this.fP2Touched || this.ballX \u003c\u003d 500 \u0026\u0026 this.fP1Touched \u0026\u0026 !this.fP2Touched) {\n                        this.promptMsg \u003d this.promptMsg + \"laughs at his opponent\\\u0027s inability to serve!\";\n                    } else if(this.fP1PointsWon \u003d\u003d\u003d this.fP2PointsWon) {\n                        this.promptMsg \u003d this.promptMsg + \"draws level!\";\n                    } else if((this.ballX \u003c\u003d 500 || this.fP1PointsWon !\u003d\u003d this.fP2PointsWon + 1) \u0026\u0026 (this.ballX \u003e 500 || this.fP1PointsWon + 1 !\u003d\u003d this.fP2PointsWon)) {\n                        this.promptMsg \u003d this.promptMsg + \"scores!\";\n                    } else {\n                        this.promptMsg \u003d this.promptMsg + \"takes the lead!\";\n                    }\n                } else {\n                    this.promptMsg \u003d this.promptMsg + \"wins!\";\n                }\n                let var7 : number \u003d this.ballX;\n                this.method_rn_Slime1P_int_96();\n                this.method_rn_Slime1P_goto_93();\n                this.method_rn_Slime1P_byte_95();\n                var1 \u003d false;\n                var2 \u003d false;\n                var3 \u003d false;\n                this.mousePressed \u003d false;\n                this.method_rn_Slime1P_a_107(1500, true);\n                if(this.mousePressed) {\n                    this.method_rn_Slime1P_g_100();\n                    this.method_rn_Slime1P_f_101();\n                }\n                if(this.fP1PointsWon \u003d\u003d\u003d 6 || this.fP2PointsWon \u003d\u003d\u003d 6) {\n                    this.method_rn_Slime1P_a_102();\n                }\n                this.promptMsg \u003d \"\";\n                this.method_rn_Slime1P_for_80();\n                this.ballX \u003d var7 \u003e\u003d 500?200:800;\n                this.method_rn_Slime1P_void_78();\n                this.repaint();\n                this.startTime +\u003d ShimmedSystem.currentTimeMillis() - var5;\n            }\n            if(this.gameThread !\u003d null) {\n                this.method_rn_Slime1P_a_107(20, true);\n            }\n        };\n        this.fEndGame \u003d true;\n        this.fInPlay \u003d false;\n        this.repaint();\n    }\n\n    /*private*/ method_rn_Slime1P_a_102() {\n        if(!this.oneplayer) {\n            this.method_rn_Slime1P_a_103(this.fP1PointsWon \u003e this.fP2PointsWon);\n        } else if(this.fP1PointsWon \u003d\u003d\u003d 6) {\n            this.gameTime \u003d ShimmedSystem.currentTimeMillis() - this.startTime;\n            if(this.fP1PointsWon \u003d\u003d\u003d 6) {\n                this.gameScore +\u003d (1000 * this.fP1PointsWon / (this.fP1PointsWon + this.fP2PointsWon)|0) * this.method_rn_Slime1P_case_108();\n                this.gameScore \u003d (\u003cnumber\u003e(Math.floor(\u003cnumber\u003ethis.gameScore) + Math.floor((this.gameTime \u003c 300000?300000 - this.gameTime:0) / 1000) * Math.floor(\u003cnumber\u003ethis.method_rn_Slime1P_case_108()))|0);\n            }\n            if(this.fP2PointsWon \u003d\u003d\u003d 0) {\n                this.gameScore +\u003d 1000 * this.method_rn_Slime1P_case_108();\n            }\n            if(this.aiMode \u003d\u003d\u003d 4) {\n                this.aiMode \u003d 5;\n                this.method_rn_Slime1P_if_104(true);\n            }\n        } else {\n            this.method_rn_Slime1P_if_104(false);\n        }\n        this.fInPlay \u003d false;\n        this.gameThread \u003d null;\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n    }\n\n    /*private*/ method_rn_Slime1P_a_103(var1 : boolean) {\n        let var2 : ShimmedFontMetrics \u003d this.screen.getFontMetrics();\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        let var3 : ShimmedGraphics;\n        if(this.buffered) {\n            var3 \u003d this.buffer.getGraphics();\n        } else {\n            var3 \u003d this.getGraphics();\n        }\n        let var4 : ShimmedFontMetrics \u003d var3.getFontMetrics();\n        var3.setColor(this.COURT_COL);\n        let var5 : string[] \u003d [\"C\\\u0027mon player \" + (var1?1:2) + \", I\\\u0027ll take you on!\", \"Inferior human controlled slime \" + (var1?2:1) + \" is insipid!\", \"Inferior human controlled slime \" + (var1?2:1) + \" is rubbish!\", \"Super inferior human controlled slime \" + (var1?1:2) + \" wins!\", \"You\\\u0027re both yellow cowards. Play me instead!\"];\n        let var6 : string \u003d var5[(\u003cnumber\u003e(\u003cnumber\u003evar5.length * Math.random())|0)];\n        var3.fillRect(((this.nWidth - var4.stringWidth(var6)) / 2|0) - 30, (this.nHeight / 2|0) - var4.getAscent() * 5, var4.stringWidth(var6) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);\n        var3.setColor(ShimmedColor.white);\n        var3.drawString(var6, ((this.nWidth - var4.stringWidth(var6)) / 2|0), (this.nHeight / 2|0) - var4.getAscent() * 3);\n        var3.setFont(this.screen.getFont());\n        var3.drawString(\"GAME OVER\", ((this.nWidth - var2.stringWidth(\"GAME OVER\")) / 2|0), (this.nHeight / 2|0) + var2.getAscent());\n        this.repaint();\n        this.method_rn_Slime1P_a_107(3000, false);\n        this.gameOver \u003d true;\n    }\n\n    /*private*/ method_rn_Slime1P_if_104(var1 : boolean) {\n        let var2 : ShimmedFontMetrics \u003d this.screen.getFontMetrics();\n        this.method_rn_Slime1P_goto_93();\n        this.method_rn_Slime1P_byte_95();\n        let var3 : ShimmedGraphics;\n        if(this.buffered) {\n            var3 \u003d this.buffer.getGraphics();\n        } else {\n            var3 \u003d this.getGraphics();\n        }\n        let var4 : ShimmedFontMetrics \u003d var3.getFontMetrics();\n        if(!var1) {\n            var3.setColor(this.COURT_COL);\n            var3.fillRect(((this.nWidth - this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode]))) / 2|0) - 30, (this.nHeight / 2|0) - var4.getAscent() * 5, this.method_rn_Slime1P_a_106(var4.stringWidth(this.loserText1[this.aiMode]), var4.stringWidth(this.loserText2[this.aiMode])) + 60, var4.getAscent() * 5 + var2.getAscent() * 2);\n            var3.setColor(ShimmedColor.white);\n            var3.drawString(this.loserText1[this.aiMode], ((this.nWidth - var4.stringWidth(this.loserText1[this.aiMode])) / 2|0), (this.nHeight / 2|0) - var4.getAscent() * 3);\n            var3.drawString(this.loserText2[this.aiMode], ((this.nWidth - var4.stringWidth(this.loserText2[this.aiMode])) / 2|0), (this.nHeight / 2|0) - var4.getAscent() * 2);\n            var3.setFont(this.screen.getFont());\n            var3.drawString(\"GAME OVER\", ((this.nWidth - var2.stringWidth(\"GAME OVER\")) / 2|0), (this.nHeight / 2|0) + var2.getAscent());\n        } else {\n            this.method_rn_Slime1P_a_105(var3);\n            var3.setColor(ShimmedColor.white);\n            var3.setFont(this.screen.getFont());\n            var3.drawString(\"YOU WIN!\", ((this.nWidth - var2.stringWidth(\"YOU WIN!\")) / 2|0), (this.nHeight / 2|0));\n            var3.drawString(\"The Slimes bow down before the new Slime King!\", ((this.nWidth - var4.stringWidth(\"The Slimes bow down before the new Slime King!\")) / 2|0), (this.nHeight / 2|0) + var4.getAscent());\n        }\n        if(this.buffered) {\n            this.repaint();\n        }\n        try {\n            if(Class_rn_g_7.method_rn_g_a_66(this, Math.floor(\u003cnumber\u003ethis.gameScore))) {\n                new NameFrame(this, Math.floor(\u003cnumber\u003ethis.gameScore), this.aiMode);\n            }\n        } catch(var6) {\n        };\n        this.method_rn_Slime1P_a_107(3000, false);\n        this.gameOver \u003d true;\n        this.method_rn_Slime1P_void_78();\n        this.repaint();\n    }\n\n    /*private*/ method_rn_Slime1P_a_105(var1 : ShimmedGraphics) {\n    }\n\n    /*private*/ method_rn_Slime1P_a_106(var1 : number, var2 : number) : number {\n        return var1 \u003e var2?var1:var2;\n    }\n\n    /*private*/ method_rn_Slime1P_a_107(var1 : number, var3 : boolean) {\n        if(this.gameThread !\u003d null) {\n            for(let var4 : number \u003d 0; Math.floor(\u003cnumber\u003evar4) \u003c Math.floor(var1 / 20); ++var4) {\n                try {\n                    let var10000 : ShimmedThread \u003d this.gameThread;\n                    ShimmedThread.sleep$long(20);\n                } catch(var6) {\n                };\n            };\n        }\n    }\n\n    /*private*/ method_rn_Slime1P_case_108() : number {\n        return (\u003cnumber\u003eMath.pow(2.0, \u003cnumber\u003ethis.aiMode)|0);\n    }\n\n    public destroy() {\n        if(this.gameThread !\u003d null) {\n            this.gameThread.stop();\n            this.gameThread \u003d null;\n        }\n    }\n\n    constructor() {\n        super();\n        this.nWidth \u003d 0;\n        this.nHeight \u003d 0;\n        this.p1X \u003d 0;\n        this.p1Y \u003d 0;\n        this.p2X \u003d 0;\n        this.p2Y \u003d 0;\n        this.p1Diam \u003d 0;\n        this.p2Diam \u003d 0;\n        this.p1Col \u003d 0;\n        this.p2Col \u003d 0;\n        this.p1OldX \u003d 0;\n        this.p1OldY \u003d 0;\n        this.p2OldX \u003d 0;\n        this.p2OldY \u003d 0;\n        this.p1XV \u003d 0;\n        this.p1YV \u003d 0;\n        this.p2XV \u003d 0;\n        this.p2YV \u003d 0;\n        this.ballX \u003d 0;\n        this.ballY \u003d 0;\n        this.ballVX \u003d 0;\n        this.ballVY \u003d 0;\n        this.ballOldX \u003d 0;\n        this.ballOldY \u003d 0;\n        this.screen \u003d null;\n        this.promptMsg \u003d null;\n        this.mousePressed \u003d false;\n        this.fInPlay \u003d false;\n        this.fP1Fire \u003d false;\n        this.fP2Fire \u003d false;\n        this.superFlash \u003d false;\n        this.fP1Touched \u003d false;\n        this.fP2Touched \u003d false;\n        this.fP1Touches \u003d 0;\n        this.fP2Touches \u003d 0;\n        this.fP1TouchesTot \u003d 0;\n        this.fP2TouchesTot \u003d 0;\n        this.fP1Clangers \u003d 0;\n        this.fP2Clangers \u003d 0;\n        this.fP1Aces \u003d 0;\n        this.fP2Aces \u003d 0;\n        this.fP1Winners \u003d 0;\n        this.fP2Winners \u003d 0;\n        this.fP1PointsWon \u003d 0;\n        this.fP2PointsWon \u003d 0;\n        this.fP1HitStill \u003d false;\n        this.fP2HitStill \u003d false;\n        this.fP1Frames \u003d 0;\n        this.fP2Frames \u003d 0;\n        this.fP1Super \u003d 0;\n        this.fP2Super \u003d 0;\n        this.fServerMoved \u003d false;\n        this.hitNetSinceTouched \u003d false;\n        this.gameThread \u003d null;\n        this.fEndGame \u003d false;\n        this.startTime \u003d 0;\n        this.gameTime \u003d 0;\n        this.crossedNetTime \u003d 0;\n        this.pausedTime \u003d 0;\n        this.paused \u003d false;\n        this.scoringRun \u003d 0;\n        this.oldScoringRun \u003d 0;\n        this.slimeColText \u003d null;\n        this.slimeColours \u003d null;\n        this.loserText1 \u003d null;\n        this.loserText2 \u003d null;\n        this.SKY_COL \u003d null;\n        this.COURT_COL \u003d null;\n        this.BALL_COL \u003d null;\n        this.p1Run \u003d 0;\n        this.p2Run \u003d 0;\n        this.p1Jump \u003d 0;\n        this.p2Jump \u003d 0;\n        this.field_rn_Slime1P_ai_109 \u003d null;\n        this.gameScore \u003d 0;\n        this.gameOver \u003d false;\n        this.buffer \u003d null;\n        this.redrawRegions \u003d null;\n        this.replayData \u003d null;\n        this.replayIndex \u003d 0;\n        this.replayStart \u003d 0;\n        this.replaying \u003d false;\n    }\n}\nSlime1P[\"__class\"] \u003d \"Slime1P\";\nSlime1P[\"__interfaces\"] \u003d [\"ShimmedRunnable\"];\n\n\n\nclass ShimmedBufferedImage extends ShimmedImage {\n    public constructor(x : number, y : number, z : number) {\n        super();\n    }\n\n    public getSubimage(a : number, b : number, c : number, d : number) : ShimmedBufferedImage {\n        return null;\n    }\n}\nShimmedBufferedImage[\"__class\"] \u003d \"ShimmedBufferedImage\";\n\n\nclass ShimmedFrame extends ShimmedElement {\n    public setTitle(s : string) {\n    }\n\n    public pack() {\n    }\n\n    public show() {\n    }\n\n    public dispose() {\n    }\n\n    public setLayout(g : ShimmedGridLayout) {\n    }\n}\nShimmedFrame[\"__class\"] \u003d \"ShimmedFrame\";\n\n\nclass ShimmedTextField extends ShimmedElement {\n    public constructor(s : number) {\n        super();\n    }\n\n    public getText() : string {\n        return null;\n    }\n}\nShimmedTextField[\"__class\"] \u003d \"ShimmedTextField\";\n\n\nclass ShimmedButton extends ShimmedElement {\n    public constructor(s : string) {\n        super();\n    }\n}\nShimmedButton[\"__class\"] \u003d \"ShimmedButton\";\n\n\nclass ShimmedPanel extends ShimmedElement {}\nShimmedPanel[\"__class\"] \u003d \"ShimmedPanel\";\n\n\nclass ShimmedLabel extends ShimmedElement {\n    public constructor(s : string) {\n        super();\n    }\n}\nShimmedLabel[\"__class\"] \u003d \"ShimmedLabel\";\n\n\nclass Class_rn_f_2 extends Class_rn_c_1 {\n    /*private*/ field_rn_f_m_37 : number \u003d 0.85;\n\n    /*private*/ field_rn_f_n_38 : number \u003d -1;\n\n    /*private*/ method_rn_f_long_33(var1 : number) : number {\n        return var1 * var1;\n    }\n\n    /*private*/ method_rn_f_goto_34(var1 : number) : number {\n        let var2 : number \u003d 0;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        };\n    }\n\n    /*private*/ method_rn_f_else_35(var1 : number) : number {\n        let var2 : number \u003d this.method_rn_f_goto_34(var1);\n        let var3 : number \u003d this.field_rn_c_void_13;\n        let var4 : number \u003d this.field_rn_c_do_15;\n        for(let var5 : number \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if(var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            } else if(var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        };\n        return var3;\n    }\n\n    public method_rn_c_a_11() {\n        if(this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_f_n_38 !\u003d\u003d -1) {\n            this.field_rn_f_n_38 \u003d -1;\n        }\n        let var1 : number \u003d this.method_rn_f_else_35(125);\n        let var2 : number \u003d this.method_rn_f_goto_34(125);\n        let var3 : number;\n        if(this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        } else {\n            var3 \u003d 25 + (\u003cnumber\u003e(10.0 * Math.random())|0);\n        }\n        if((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n            if(var1 \u003c 500) {\n                if(Math.abs(this.field_rn_c_int_21 - 666) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                } else if(this.field_rn_c_int_21 \u003e 666) {\n                    this.method_rn_c_a_12(0);\n                } else if(this.field_rn_c_int_21 \u003c 666) {\n                    this.method_rn_c_a_12(1);\n                }\n            } else {\n                if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if(this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_f_try_36();\n                    } else if(this.method_rn_f_long_33(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_f_long_33(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_f_long_33(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_f_try_36();\n                    } else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_f_try_36();\n                    } else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.666) {\n                        this.method_rn_f_try_36();\n                    }\n                }\n                if(this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                    if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                } else if(this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                    if(this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if(this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        } else {\n            if(this.field_rn_f_n_38 \u003d\u003d\u003d -1) {\n                if(this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_f_n_38 \u003d 0;\n                } else {\n                    this.field_rn_f_n_38 \u003d 1;\n                }\n                if(Math.random() \u003c 0.35) {\n                    this.field_rn_f_n_38 \u003d (\u003cnumber\u003e(2.0 * Math.random())|0);\n                }\n            }\n            switch((this.field_rn_f_n_38)) {\n            case 0:\n                if(this.field_rn_c_else_14 \u003c 250 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                    this.method_rn_c_a_12(1);\n                    this.method_rn_c_a_12(2);\n                }\n                break;\n            case 1:\n                if(this.field_rn_c_else_14 \u003c 250 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                    this.method_rn_c_a_12(0);\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        }\n    }\n\n    /*private*/ method_rn_f_try_36() {\n        if(Math.random() \u003c 0.85) {\n            this.method_rn_c_a_12(2);\n        }\n    }\n}\nClass_rn_f_2[\"__class\"] \u003d \"Class_rn_f_2\";\n\n\nclass Class_rn_e_3 extends Class_rn_c_1 {\n    /*private*/ field_rn_e_k_43 : number \u003d 0.4;\n\n    /*private*/ field_rn_e_l_44 : number \u003d -1;\n\n    /*private*/ method_rn_e_char_39(var1 : number) : number {\n        return var1 * var1;\n    }\n\n    /*private*/ method_rn_e_case_40(var1 : number) : number {\n        let var2 : number \u003d 0;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        };\n    }\n\n    /*private*/ method_rn_e_byte_41(var1 : number) : number {\n        let var2 : number \u003d this.method_rn_e_case_40(var1);\n        let var3 : number \u003d this.field_rn_c_void_13;\n        let var4 : number \u003d this.field_rn_c_do_15;\n        for(let var5 : number \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if(var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            } else if(var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        };\n        return var3;\n    }\n\n    public method_rn_c_a_11() {\n        if(this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_e_l_44 !\u003d\u003d -1) {\n            this.field_rn_e_l_44 \u003d -1;\n        }\n        let var1 : number \u003d this.method_rn_e_byte_41(125);\n        let var2 : number \u003d this.method_rn_e_case_40(125);\n        let var3 : number;\n        if(this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        } else {\n            var3 \u003d 23 + (\u003cnumber\u003e(15.0 * Math.random())|0);\n        }\n        if((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n            if(var1 \u003c 500) {\n                if(Math.abs(this.field_rn_c_int_21 - 800) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                } else if(this.field_rn_c_int_21 \u003e 800) {\n                    this.method_rn_c_a_12(0);\n                } else if(this.field_rn_c_int_21 \u003c 800) {\n                    this.method_rn_c_a_12(1);\n                }\n            } else {\n                if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if(this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_e_new_42();\n                    } else if(this.method_rn_e_char_39(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_e_char_39(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_e_char_39(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_e_new_42();\n                    } else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_e_new_42();\n                    } else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.5) {\n                        this.method_rn_e_new_42();\n                    }\n                }\n                if(this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                    if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                } else if(this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                    if(this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if(this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        } else {\n            if(this.field_rn_e_l_44 \u003d\u003d\u003d -1) {\n                if(this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_e_l_44 \u003d 0;\n                } else if(this.field_rn_c_g_17 \u003c 200) {\n                    this.field_rn_e_l_44 \u003d 1;\n                } else if(this.field_rn_c_g_17 \u003c 250) {\n                    this.field_rn_e_l_44 \u003d 2;\n                }\n                if(Math.random() \u003c 0.35) {\n                    this.field_rn_e_l_44 \u003d (\u003cnumber\u003e(3.0 * Math.random())|0);\n                }\n            }\n            switch((this.field_rn_e_l_44)) {\n            case 0:\n                if(this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                    this.method_rn_c_a_12(1);\n                    this.method_rn_c_a_12(2);\n                }\n                break;\n            case 1:\n                if(this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                    this.method_rn_c_a_12(0);\n                    this.method_rn_c_a_12(2);\n                }\n                break;\n            case 2:\n                let var4 : number \u003d 860;\n                if(this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var4) {\n                    this.method_rn_c_a_12(1);\n                }\n                if(this.field_rn_c_int_21 \u003e\u003d var4) {\n                    this.method_rn_c_a_12(3);\n                }\n                if(this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                    this.method_rn_c_a_12(2);\n                }\n                if(this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var4 - 15) {\n                    this.method_rn_c_a_12(0);\n                }\n            }\n        }\n    }\n\n    /*private*/ method_rn_e_new_42() {\n        if(Math.random() \u003c 0.4) {\n            this.method_rn_c_a_12(2);\n        }\n    }\n}\nClass_rn_e_3[\"__class\"] \u003d \"Class_rn_e_3\";\n\n\nclass Class_rn_b_5 extends Class_rn_c_1 {\n    /*private*/ field_rn_b_h_57 : number \u003d -1;\n\n    public method_rn_c_a_11() {\n        if(this.field_rn_b_h_57 \u003d\u003d\u003d -1 \u0026\u0026 (this.field_rn_c_void_13 !\u003d\u003d 800 || this.field_rn_c_do_15 !\u003d\u003d 0)) {\n            let var2 : number \u003d this.method_rn_b_if_53(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);\n            let var1 : number;\n            if(var2 \u003c 600) {\n                var1 \u003d 0;\n            } else if(var2 \u003c 700) {\n                var1 \u003d 10;\n            } else {\n                var1 \u003d 20;\n            }\n            if(var2 \u003c 450) {\n                if(Math.abs(this.field_rn_c_int_21 - 666) \u003c 10) {\n                    this.method_rn_c_a_12(3);\n                } else if(666 \u003c this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(0);\n                } else if(666 \u003e this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(1);\n                }\n            } else if(Math.abs(this.field_rn_c_int_21 - var2 - var1) \u003c 10) {\n                this.method_rn_c_a_12(3);\n            } else if(var2 + var1 \u003c this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(0);\n            } else if(var2 + var1 \u003e this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(1);\n            }\n            if((this.field_rn_c_int_21 \u003c\u003d 900 || Math.random() \u003e\u003d 0.4) \u0026\u0026 var2 \u003e\u003d 620 \u0026\u0026 (this.field_rn_c_else_14 \u003e\u003d 130 || this.field_rn_c_if_16 \u003e\u003d 0) \u0026\u0026 (!this.field_rn_c_f_26 || Math.random() \u003e\u003d 0.6)) {\n                if((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                    this.method_rn_c_a_12(2);\n                } else if(this.method_rn_b_for_51(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_b_for_51(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_b_for_51(185) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                } else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                } else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c (this.field_rn_c_f_26?135:150) \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 250) {\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        } else {\n            this.method_rn_b_do_55();\n        }\n    }\n\n    /*private*/ method_rn_b_for_51(var1 : number) : number {\n        return var1 * var1;\n    }\n\n    /*private*/ method_rn_b_do_52(var1 : number) : number {\n        let var2 : number \u003d 0;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d 0) {\n                return var2;\n            }\n            ++var2;\n        };\n    }\n\n    /*private*/ method_rn_b_if_53(var1 : number) : number {\n        let var2 : number \u003d this.field_rn_c_void_13;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            var2 +\u003d this.field_rn_c_do_15;\n            if(var2 \u003c\u003d 0) {\n                var2 \u003d 0;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            } else if(var2 \u003e\u003d 1000) {\n                var2 \u003d 1000;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n        };\n    }\n\n    /*private*/ method_rn_b_for_54() : number {\n        let var1 : number \u003d this.field_rn_c_int_21 - this.field_rn_c_void_13;\n        let var2 : number \u003d this.field_rn_c_for_22 - this.field_rn_c_else_14;\n        return (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var1 * var1 + var2 * var2))|0);\n    }\n\n    /*private*/ method_rn_b_do_55() {\n        if(this.field_rn_b_h_57 \u003d\u003d\u003d -1) {\n            if(Math.random() \u003c 0.3) {\n                if(this.field_rn_c_g_17 \u003c 300 \u0026\u0026 !this.field_rn_c_f_26) {\n                    this.field_rn_b_h_57 \u003d 0;\n                } else if(this.field_rn_c_g_17 \u003e 200) {\n                    this.field_rn_b_h_57 \u003d 1;\n                } else {\n                    this.field_rn_b_h_57 \u003d 2;\n                }\n            } else {\n                this.field_rn_b_h_57 \u003d 2;\n            }\n            if(this.field_rn_b_h_57 \u003d\u003d\u003d -1 || Math.random() \u003c 0.3) {\n                this.field_rn_b_h_57 \u003d (\u003cnumber\u003e(Math.random() * 3.0)|0);\n            }\n            if(this.field_rn_c_f_26 \u0026\u0026 this.field_rn_b_h_57 \u003d\u003d\u003d 0) {\n                this.field_rn_b_h_57 \u003d 1 + (\u003cnumber\u003e(Math.random() * 2.0)|0);\n            }\n        }\n        let var1 : number;\n        switch((this.field_rn_b_h_57)) {\n        case 0:\n        case 1:\n            let var2 : number \u003d this.field_rn_b_h_57 \u003d\u003d\u003d 0?860:840;\n            if(this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var2) {\n                this.method_rn_c_a_12(1);\n            }\n            if(this.field_rn_c_int_21 \u003e\u003d var2) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var2 - 15 \u0026\u0026 this.field_rn_b_h_57 \u003d\u003d\u003d 0) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_void_13 \u003c 700) {\n                this.field_rn_b_h_57 \u003d -1;\n            }\n            break;\n        case 2:\n            let var3 : number \u003d 770;\n            if(this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003e var3) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var3) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_if_16 \u003d\u003d\u003d -2 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_void_13 \u003e 800) {\n                this.field_rn_b_h_57 \u003d 3 + this.method_rn_b_if_56();\n            }\n            break;\n        case 3:\n            var1 \u003d !this.field_rn_c_f_26?585:555;\n            if(this.field_rn_c_int_21 \u003e var1) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var1) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c\u003d (!this.field_rn_c_f_26?730:740)) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_void_13 \u003c 540) {\n                this.field_rn_b_h_57 \u003d -1;\n            }\n            break;\n        case 4:\n            var1 \u003d !this.field_rn_c_f_26?585:555;\n            if(this.field_rn_c_int_21 \u003e var1) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var1) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c\u003d (!this.field_rn_c_f_26?730:700)) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_void_13 \u003c 600) {\n                this.method_rn_c_a_12(1);\n            }\n            if(this.field_rn_c_void_13 \u003c 580) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c 540) {\n                this.field_rn_b_h_57 \u003d -1;\n            }\n        }\n    }\n\n    /*private*/ method_rn_b_if_56() : number {\n        let var1 : boolean \u003d false;\n        if(this.field_rn_c_g_17 \u003c 200) {\n            var1 \u003d Math.random() \u003c 0.7;\n        } else if(this.field_rn_c_g_17 \u003e 300) {\n            var1 \u003d Math.random() \u003c 0.3;\n        } else {\n            var1 \u003d Math.random() \u003c 0.5;\n        }\n        return var1?1:0;\n    }\n}\nClass_rn_b_5[\"__class\"] \u003d \"Class_rn_b_5\";\n\n\nclass Class_rn_a_6 extends Class_rn_c_1 {\n    /*private*/ field_rn_a_o_64 : number \u003d -1;\n\n    public method_rn_c_a_11() {\n        if(this.field_rn_a_o_64 \u003d\u003d\u003d -1 \u0026\u0026 (this.field_rn_c_void_13 !\u003d\u003d 800 || this.field_rn_c_do_15 !\u003d\u003d 0)) {\n            let var2 : number \u003d this.method_rn_a_void_60(this.field_rn_c_for_22 + this.field_rn_c_b_24 + 30);\n            let var1 : number;\n            if(var2 \u003c 600) {\n                var1 \u003d 0;\n            } else if(var2 \u003c 700) {\n                var1 \u003d 10;\n            } else {\n                var1 \u003d 20;\n            }\n            if(var2 \u003c 450) {\n                if(Math.abs(this.field_rn_c_int_21 - 666) \u003c 10) {\n                    this.method_rn_c_a_12(3);\n                } else if(666 \u003c this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(0);\n                } else if(666 \u003e this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(1);\n                }\n            } else if(Math.abs(this.field_rn_c_int_21 - var2 - var1) \u003c 10) {\n                this.method_rn_c_a_12(3);\n            } else if(var2 + var1 \u003c this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(0);\n            } else if(var2 + var1 \u003e this.field_rn_c_int_21) {\n                this.method_rn_c_a_12(1);\n            }\n            if((this.field_rn_c_int_21 \u003c\u003d 900 || Math.random() \u003e\u003d 0.4) \u0026\u0026 var2 \u003e\u003d 720 \u0026\u0026 (this.field_rn_c_else_14 \u003e\u003d 150 || this.field_rn_c_if_16 \u003c\u003d -3)) {\n                if((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                    this.method_rn_c_a_12(2);\n                } else if(this.method_rn_a_c_58(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_a_c_58(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_a_c_58(185) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                } else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                    this.method_rn_c_a_12(2);\n                } else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 250) {\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        } else {\n            this.method_rn_a_case_62();\n        }\n    }\n\n    /*private*/ method_rn_a_c_58(var1 : number) : number {\n        return var1 * var1;\n    }\n\n    /*private*/ method_rn_a_b_59(var1 : number) : number {\n        let var2 : number \u003d 0;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d 0) {\n                return var2;\n            }\n            ++var2;\n        };\n    }\n\n    /*private*/ method_rn_a_void_60(var1 : number) : number {\n        let var2 : number \u003d this.field_rn_c_void_13;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            var2 +\u003d this.field_rn_c_do_15;\n            if(var2 \u003c\u003d 0) {\n                var2 \u003d 0;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            } else if(var2 \u003e\u003d 1000) {\n                var2 \u003d 1000;\n                this.field_rn_c_do_15 \u003d -this.field_rn_c_do_15;\n            }\n        };\n    }\n\n    /*private*/ method_rn_a_char_61() : number {\n        let var1 : number \u003d this.field_rn_c_int_21 - this.field_rn_c_void_13;\n        let var2 : number \u003d this.field_rn_c_for_22 - this.field_rn_c_else_14;\n        return (\u003cnumber\u003eMath.sqrt(\u003cnumber\u003e(var1 * var1 + var2 * var2))|0);\n    }\n\n    /*private*/ method_rn_a_case_62() {\n        if(this.field_rn_a_o_64 \u003d\u003d\u003d -1) {\n            if(Math.random() \u003c 0.3) {\n                if(this.field_rn_c_g_17 \u003c 300) {\n                    this.field_rn_a_o_64 \u003d 0;\n                } else if(this.field_rn_c_g_17 \u003e 200) {\n                    this.field_rn_a_o_64 \u003d 1;\n                } else {\n                    this.field_rn_a_o_64 \u003d 2;\n                }\n            } else {\n                this.field_rn_a_o_64 \u003d 2;\n            }\n            if(this.field_rn_a_o_64 \u003d\u003d\u003d -1 || Math.random() \u003c 0.3) {\n                this.field_rn_a_o_64 \u003d (\u003cnumber\u003e(Math.random() * 3.0)|0);\n            }\n        }\n        let var1 : number;\n        switch((this.field_rn_a_o_64)) {\n        case 0:\n        case 1:\n            let var2 : number \u003d this.field_rn_a_o_64 \u003d\u003d\u003d 0?860:840;\n            if(this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003c var2) {\n                this.method_rn_c_a_12(1);\n            }\n            if(this.field_rn_c_int_21 \u003e\u003d var2) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_if_16 \u003d\u003d\u003d -3 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_if_16 \u003c -12 \u0026\u0026 this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003e\u003d var2 - 15 \u0026\u0026 this.field_rn_a_o_64 \u003d\u003d\u003d 0) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_void_13 \u003c 700) {\n                this.field_rn_a_o_64 \u003d -1;\n            }\n            break;\n        case 2:\n            var1 \u003d 770;\n            if(this.field_rn_c_if_16 \u003e 12 \u0026\u0026 this.field_rn_c_int_21 \u003e var1) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var1) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_if_16 \u003d\u003d\u003d -2 \u0026\u0026 this.field_rn_c_int_21 !\u003d\u003d 800) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_void_13 \u003e 800) {\n                this.field_rn_a_o_64 \u003d 3 + this.method_rn_a_byte_63();\n            }\n            break;\n        case 3:\n            var1 \u003d 585;\n            if(this.field_rn_c_int_21 \u003e var1) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var1) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c\u003d 730) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_void_13 \u003c 600) {\n                this.method_rn_c_a_12(1);\n            }\n            if(this.field_rn_c_void_13 \u003c 580) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c 540) {\n                this.field_rn_a_o_64 \u003d -1;\n            }\n        case 4:\n            var1 \u003d 585;\n            if(this.field_rn_c_int_21 \u003e var1) {\n                this.method_rn_c_a_12(0);\n            }\n            if(this.field_rn_c_int_21 \u003c\u003d var1) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c\u003d 755) {\n                this.method_rn_c_a_12(2);\n            }\n            if(this.field_rn_c_void_13 \u003c 600) {\n                this.method_rn_c_a_12(1);\n            }\n            if(this.field_rn_c_void_13 \u003c 580) {\n                this.method_rn_c_a_12(3);\n            }\n            if(this.field_rn_c_void_13 \u003c 540) {\n                this.field_rn_a_o_64 \u003d -1;\n            }\n        }\n    }\n\n    /*private*/ method_rn_a_byte_63() : number {\n        let var1 : number \u003d 0;\n        if(this.field_rn_c_g_17 \u003c 200) {\n            var1 \u003d 1;\n        } else if(this.field_rn_c_g_17 \u003e 300) {\n            var1 \u003d 0;\n        }\n        if(Math.random() \u003c 0.35) {\n            var1 \u003d 1 - var1;\n        }\n        return var1;\n    }\n}\nClass_rn_a_6[\"__class\"] \u003d \"Class_rn_a_6\";\n\n\nclass Class_rn_d_4 extends Class_rn_c_1 {\n    /*private*/ field_rn_d_i_49 : number \u003d 0.85;\n\n    /*private*/ field_rn_d_j_50 : number \u003d -1;\n\n    /*private*/ method_rn_d_try_45(var1 : number) : number {\n        return var1 * var1;\n    }\n\n    /*private*/ method_rn_d_new_46(var1 : number) : number {\n        let var2 : number \u003d 0;\n        let var3 : number \u003d this.field_rn_c_else_14;\n        let var4 : number \u003d this.field_rn_c_if_16;\n        while((true)) {\n            --var4;\n            if((var3 +\u003d var4) \u003c\u003d var1) {\n                return var2;\n            }\n            ++var2;\n        };\n    }\n\n    /*private*/ method_rn_d_int_47(var1 : number) : number {\n        let var2 : number \u003d this.method_rn_d_new_46(var1);\n        let var3 : number \u003d this.field_rn_c_void_13;\n        let var4 : number \u003d this.field_rn_c_do_15;\n        for(let var5 : number \u003d 0; var5 \u003c var2; ++var5) {\n            var3 +\u003d var4;\n            if(var3 \u003c 0) {\n                var3 \u003d 0;\n                var4 \u003d -var4;\n            } else if(var3 \u003e 1000) {\n                var3 \u003d 1000;\n                var4 \u003d -var4;\n            }\n        };\n        return var3;\n    }\n\n    public method_rn_c_a_11() {\n        if(this.field_rn_c_void_13 \u003c 500 \u0026\u0026 this.field_rn_d_j_50 !\u003d\u003d -1) {\n            this.field_rn_d_j_50 \u003d -1;\n        }\n        let var1 : number \u003d this.method_rn_d_int_47(125);\n        let var2 : number \u003d this.method_rn_d_new_46(125);\n        let var3 : number;\n        if(this.field_rn_c_for_22 !\u003d\u003d 0 \u0026\u0026 this.field_rn_c_int_21 \u003c 575) {\n            var3 \u003d 0;\n        } else {\n            var3 \u003d 25 + (\u003cnumber\u003e(10.0 * Math.random())|0);\n        }\n        if((this.field_rn_c_do_15 !\u003d\u003d 0 || this.field_rn_c_void_13 !\u003d\u003d 800) \u0026\u0026 this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n            if(var1 \u003c 500) {\n                if(Math.abs(this.field_rn_c_int_21 - 666) \u003c 20) {\n                    this.method_rn_c_a_12(3);\n                } else if(this.field_rn_c_int_21 \u003e 666) {\n                    this.method_rn_c_a_12(0);\n                } else if(this.field_rn_c_int_21 \u003c 666) {\n                    this.method_rn_c_a_12(1);\n                }\n            } else {\n                if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                    if(this.field_rn_c_for_22 !\u003d\u003d 0 || this.field_rn_c_f_26 \u0026\u0026 Math.random() \u003c 0.3) {\n                        return;\n                    }\n                    if((this.field_rn_c_int_21 \u003e\u003d 900 \u0026\u0026 this.field_rn_c_void_13 \u003e 830 || this.field_rn_c_int_21 \u003c\u003d 580 \u0026\u0026 this.field_rn_c_void_13 \u003c 530) \u0026\u0026 Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 100) {\n                        this.method_rn_d_int_48();\n                    } else if(this.method_rn_d_try_45(this.field_rn_c_void_13 - this.field_rn_c_int_21) * 2 + this.method_rn_d_try_45(this.field_rn_c_else_14 - this.field_rn_c_for_22) \u003c this.method_rn_d_try_45(170) \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_d_int_48();\n                    } else if(this.field_rn_c_do_15 * this.field_rn_c_do_15 + this.field_rn_c_if_16 * this.field_rn_c_if_16 \u003c 20 \u0026\u0026 this.field_rn_c_void_13 - this.field_rn_c_int_21 \u003c 30 \u0026\u0026 this.field_rn_c_void_13 !\u003d\u003d this.field_rn_c_int_21) {\n                        this.method_rn_d_int_48();\n                    } else if(Math.abs(this.field_rn_c_void_13 - this.field_rn_c_int_21) \u003c 150 \u0026\u0026 this.field_rn_c_else_14 \u003e 50 \u0026\u0026 this.field_rn_c_else_14 \u003c 400 \u0026\u0026 Math.random() \u003c 0.666) {\n                        this.method_rn_d_int_48();\n                    }\n                }\n                if(this.field_rn_c_for_22 \u003d\u003d\u003d 0 \u0026\u0026 this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                    if(Math.abs(this.field_rn_c_int_21 - var1) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(var1 + var3 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(var1 + var3 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                } else if(this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                    if(this.field_rn_c_int_21 \u003c 575) {\n                        return;\n                    }\n                    if(this.field_rn_c_int_21 \u003e 900) {\n                        this.method_rn_c_a_12(1);\n                        return;\n                    }\n                    if(Math.abs(this.field_rn_c_int_21 - this.field_rn_c_void_13) \u003c var3) {\n                        this.method_rn_c_a_12(3);\n                    } else if(this.field_rn_c_void_13 \u003c this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(0);\n                    } else if(this.field_rn_c_void_13 \u003e this.field_rn_c_int_21) {\n                        this.method_rn_c_a_12(1);\n                    }\n                }\n            }\n        } else {\n            if(this.field_rn_d_j_50 \u003d\u003d\u003d -1) {\n                if(this.field_rn_c_g_17 \u003e 250) {\n                    this.field_rn_d_j_50 \u003d 0;\n                } else {\n                    this.field_rn_d_j_50 \u003d 1;\n                }\n                if(Math.random() \u003c 0.35) {\n                    this.field_rn_d_j_50 \u003d (\u003cnumber\u003e(2.0 * Math.random())|0);\n                }\n            }\n            switch((this.field_rn_d_j_50)) {\n            case 0:\n                if(this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c -3) {\n                    this.method_rn_c_a_12(1);\n                    this.method_rn_c_a_12(2);\n                }\n                break;\n            case 1:\n                if(this.field_rn_c_else_14 \u003c 300 \u0026\u0026 this.field_rn_c_if_16 \u003c 0) {\n                    this.method_rn_c_a_12(0);\n                    this.method_rn_c_a_12(2);\n                }\n            }\n        }\n    }\n\n    /*private*/ method_rn_d_int_48() {\n        if(Math.random() \u003c 0.85) {\n            this.method_rn_c_a_12(2);\n        }\n    }\n}\nClass_rn_d_4[\"__class\"] \u003d \"Class_rn_d_4\";\n\n\nclass ServerCheck extends ShimmedFrame {\n    field_rn_ServerCheck_ok_76 : ShimmedButton;\n\n    public constructor() {\n        super();\n        this.field_rn_ServerCheck_ok_76 \u003d null;\n        this.setLayout(new ShimmedGridLayout(4, 1));\n        let var1 : ShimmedPanel \u003d new ShimmedPanel();\n        var1.add(new ShimmedLabel(\"Couldn\\\u0027t connect to server!\"));\n        this.add(var1);\n        let var2 : ShimmedPanel \u003d new ShimmedPanel();\n        var2.add(new ShimmedLabel(\"Your high scores may not be saved on the server.\"));\n        this.add(var2);\n        let var3 : ShimmedPanel \u003d new ShimmedPanel();\n        var3.add(new ShimmedLabel(\"To fix this, close all browser windows and try again.\"));\n        this.setTitle(\"Error!\");\n        this.field_rn_ServerCheck_ok_76 \u003d new ShimmedButton(\"Damn. Oh well if that\\\u0027s how it is...\");\n        this.add(var3);\n        this.add(this.field_rn_ServerCheck_ok_76);\n        this.pack();\n        this.show();\n    }\n\n    public action(var1 : ShimmedEvent, var2 : any) : boolean {\n        if(var1.target \u003d\u003d\u003d this.field_rn_ServerCheck_ok_76) {\n            this.dispose();\n        }\n        return false;\n    }\n}\nServerCheck[\"__class\"] \u003d \"ServerCheck\";\n\n\nclass NameFrame extends ShimmedFrame {\n    /*private*/ app : Slime1P;\n\n    /*private*/ name : ShimmedTextField;\n\n    /*private*/ field_rn_NameFrame_ok_110 : ShimmedButton;\n\n    /*private*/ score : number;\n\n    /*private*/ level : number;\n\n    public constructor(var1? : any, var2? : any, var4? : any) {\n        if(((var1 !\u003d null \u0026\u0026 var1 instanceof \u003cany\u003eSlime1P) || var1 \u003d\u003d\u003d null) \u0026\u0026 ((typeof var2 \u003d\u003d\u003d \u0027number\u0027) || var2 \u003d\u003d\u003d null) \u0026\u0026 ((typeof var4 \u003d\u003d\u003d \u0027number\u0027) || var4 \u003d\u003d\u003d null)) {\n            let __args \u003d Array.prototype.slice.call(arguments);\n            super();\n            this.app \u003d null;\n            this.name \u003d null;\n            this.field_rn_NameFrame_ok_110 \u003d null;\n            this.score \u003d 0;\n            this.level \u003d 0;\n            this.app \u003d null;\n            this.name \u003d null;\n            this.field_rn_NameFrame_ok_110 \u003d null;\n            this.score \u003d 0;\n            this.level \u003d 0;\n            (() \u003d\u003e {\n                this.app \u003d var1;\n                this.score \u003d var2;\n                this.level \u003d var4;\n                this.setLayout(new ShimmedGridLayout(2, 1));\n                let var5 : ShimmedPanel \u003d new ShimmedPanel();\n                var5.add(new ShimmedLabel(\"Your score: \" + var2));\n                this.add(var5);\n                let var6 : ShimmedPanel \u003d new ShimmedPanel();\n                var6.add(new ShimmedLabel(\"Enter your name:\"));\n                this.name \u003d new ShimmedTextField(20);\n                var6.add(this.name);\n                this.field_rn_NameFrame_ok_110 \u003d new ShimmedButton(\"OK\");\n                var6.add(this.field_rn_NameFrame_ok_110);\n                this.add(var6);\n                this.setTitle(\"New High Score!\");\n                this.pack();\n                this.show();\n            })();\n        } else if(var1 \u003d\u003d\u003d undefined \u0026\u0026 var2 \u003d\u003d\u003d undefined \u0026\u0026 var4 \u003d\u003d\u003d undefined) {\n            let __args \u003d Array.prototype.slice.call(arguments);\n            super();\n            this.app \u003d null;\n            this.name \u003d null;\n            this.field_rn_NameFrame_ok_110 \u003d null;\n            this.score \u003d 0;\n            this.level \u003d 0;\n            this.app \u003d null;\n            this.name \u003d null;\n            this.field_rn_NameFrame_ok_110 \u003d null;\n            this.score \u003d 0;\n            this.level \u003d 0;\n        } else throw new Error(\u0027invalid overload\u0027);\n    }\n\n    public action(var1 : ShimmedEvent, var2 : any) : boolean {\n        if(var1.target \u003d\u003d\u003d this.field_rn_NameFrame_ok_110) {\n            Class_rn_g_7.method_rn_g_a_67(this.app, this.score, Math.floor(\u003cnumber\u003ethis.level), this.name.getText());\n            this.dispose();\n        }\n        return false;\n    }\n}\nNameFrame[\"__class\"] \u003d \"NameFrame\";\n\n\n\n\nClass_rn_g_7.field_rn_g_if_75_$LI$();\n",
  "packageName": "_"
}